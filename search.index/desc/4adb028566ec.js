rd_("AhReturn Euler\xe2\x80\x99s number.BhThe type sampled by this implementation.AhGet field 0of this tuple0000AhGet field 1of this tuple0000AhGet field 2of this tuple000A`&lt; 8 bit valueAa&lt; 32 bit value10CgReturns a reference to the private exponent of the key.AhGet field 3of this tuple00CfReturns a reference to the public exponent of the key.AhGet field 4of this tuple0AhGet field 5of this tupleCdReturns the DSA base parameter of <code>self</code>.ClCreate a complex number with a value of <code>0 + j1</code>.BnReturns a reference to the modulus of the key.CeReturns the DSA prime parameter of <code>self</code>.CnReturns a reference to the first factor of the exponent of \xe2\x80\xa6CmReturns the probability (<code>p</code>) of the distribution.CiReturns the DSA sub-prime parameter of <code>self</code>.ClReturns a reference to the second factor of the exponent \xe2\x80\xa6DdReturns internal component <code>r</code> of an <code>DsaSig</code>.EfReturns internal component: <code>r</code> of an <code>EcdsaSig</code>. (See X9.62 \xe2\x80\xa6DdReturns internal component <code>s</code> of an <code>DsaSig</code>.EgReturns internal components: <code>s</code> of an <code>EcdsaSig</code>. (See X9.62 \xe2\x80\xa6o<code>as</code>n<code>@</code>AeThe type-level bit 0.0AeThe type-level bit 1.0BhA type alias for <code>BigEndian</code>.0o<code>do</code>BgThe <code>==</code> operator (equality)n<code>=</code>CjAlias for the associated type of <code>IsEqual</code>: \xe2\x80\xa6AmA free-standing function: \xe2\x80\xa6CcA foreign function in an <code>extern</code> block.ChAn associated function within the definition of a trait.BlAn associated function within an impl block.o<code>fn</code>CjThe <code>&gt;=</code> operator (greater than or equal to)Ab<code>&gt;=</code>ClAlias for the associated type of <code>IsGreater</code>: \xe2\x80\xa6BmThe <code>&gt;</code> operator (greater than)Aa<code>&gt;</code>Fb<code>i8</code> with a valid range of <code>i8::MIN..=i8::MAX</code> with <code>0</code> being \xe2\x80\xa6CgSample format dependent struct for reading from and \xe2\x80\xa6EnImplements <code>std::io::Read</code> and <code>std::io::Write</code> for <code>Rawmidi</code>AoAn identifier of a kind of key.ClAn opaque ID that uniquely identifies a task relative to \xe2\x80\xa6CeIdentifies a span within the context of a subscriber.0DkAn <code>if</code> expression with an optional <code>else</code> block: \xe2\x80\xa6o<code>if</code>o<code>in</code>CmI/O errors, from APIs that accept <code>std::io</code> types.ClThe error was caused by a failure to read or write bytes \xe2\x80\xa6AeAn IO error occurred.0DaInitialization vector (nonce) used by <code>IvSizeUser</code> \xe2\x80\xa6BkA type alias for <code>LittleEndian</code>.0CgThe <code>&lt;=</code> operator (less than or equal to)Ab<code>&lt;=</code>CiAlias for the associated type of <code>IsLess</code>: \xe2\x80\xa6BjThe <code>&lt;</code> operator (less than)Aa<code>&lt;</code>AkA message digest algorithm.BkThe <code>!=</code> operator (not equal to)o<code>!=</code>B`200 OK [RFC9110, Section 15.3.1]BiSuccessful peer certificate verification.1AjContains the success valueCdThe type of successful values yielded by this future00000100001111111AiComparison was successful2DcThe output type produced by this <code>Serializer</code> during \xe2\x80\xa60DcMust match the <code>Ok</code> type of our <code>Serializer</code>.000000110000000444444BeThe operation completed successfully.BiImplementation of <code>Parser::or</code>BiThe <code>||</code> operator (logical or)CaA pattern that matches any one of a set of cases.n<code>|</code>DfA redirection <code>Policy</code> that combines the results of two \xe2\x80\xa6ChAlias for the associated type of <code>BitOr</code>: \xe2\x80\xa6BnReturn Archimedes\xe2\x80\x99 constant <code>\xcf\x80</code>.AeSigned 8-bit integer.CjInforms the server of transfer encodings willing to be \xe2\x80\xa60Dm<code>u8</code> with a valid range of <code>u8::MIN..=u8::MAX</code> with \xe2\x80\xa6AgUnsigned 8-bit integer.A`An Ipv4 address.A`An Ipv6 address.B`The type-level signed integer 0.0AeBigNum implementationCgAn additional set of certificates to include in the \xe2\x80\xa6CcSets the <code>ca</code> flag to <code>true</code>.m&lt; any dataCaGeneric data structure deserialization framework.0BoDeserialize JSON data to a Rust data structure.BcDeserialization support for the \xe2\x80\xa6AmDiffie-Hellman key agreement.BfReturns a copy of the internal DH key.nElliptic CurveCcChecks if both handles point to the same collector.ChPerforms a case-insensitive comparison of the string \xe2\x80\xa60BmDetermines if this point is equal to another.EgReturns <code>true</code> iff <code>a</code> and <code>b</code> contain the same bytes.DhDetermines if the elements of this <code>ParallelIterator</code> are \xe2\x80\xa633AlAsynchronous file utilities.11CiAn asynchronous, HTTP/2 server and client implementation.Blwill parse a number in text form to a number0BbRecognizes a signed 1 byte integer00h8-bit ID0CmThe unique identifier associated with this <code>Host</code>.CmThe basic language/script/region components in the locale \xe2\x80\xa6BkThe data identifier for which to load data.AfThe ID of this marker.DaReturns the <code>Id</code> that represents the type of this key.AkReturns the SSL session ID.BbA unique identifier for the track.CjReturns the <code>Id</code> of the currently running task.ChReturns a task ID that uniquely identifies this task \xe2\x80\xa6ClReturns a task ID that identifies the task which errored \xe2\x80\xa61ChReturns this span\xe2\x80\x99s <code>Id</code>, if it is enabled.0DiBorrows the <code>Id</code> of the current span, if one exists and is \xe2\x80\xa6AhThe imaginary component.AaAsynchronous I/O.0BmThe original IO object used in the handshake.BoThe original IO object used before the upgrade.DhThe <code>io</code> module implements composable bit- and byte-level \xe2\x80\xa6CnTraits, helpers, and type definitions for asynchronous I/O \xe2\x80\xa6AmHelpers for IO related tasks.CmThe inner transport used to read bytes to and write bytes \xe2\x80\xa6AnSets the <code>ip</code> flag.CkReturn true if the underlying error has the same type as T.CdCheck whether the type is the same as <code>T</code>DbForwards to the method defined on the type <code>dyn Error</code>.DjReturns <code>true</code> if the inner type is the same as <code>T</code>.1EmReturns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.000FdReturns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of \xe2\x80\xa601111CjReturns the initialization vector, if the cipher uses one.AgLittle-Endian utilitiesDhDetermines if the elements of this <code>ParallelIterator</code> are \xe2\x80\xa6BlReturns the natural logarithm of the number.01AjMessage digest algorithms.2AnSet the \xe2\x80\x9cno\xe2\x80\x9d proxy filter.ClCreate a future that is immediately ready with a success \xe2\x80\xa600BnGets a pending HTTP upgrade from this message.AkConvenient type operations.CkApplies a second parser over the input if the first one \xe2\x80\xa60CjCombines two existing errors. This function is used to \xe2\x80\xa6EgCreate a new <code>Policy</code> that returns <code>Action::Follow</code> if either \xe2\x80\xa6AlReborrow with a new lifetimeAcThe real component.AbRuntime componentsAaRuntime utilitiesCoGet the timestamp of the packet in <code>TimeBase</code> units.ChThe timestamp of the packet. When gapless support is \xe2\x80\xa6BfThe <code>TimeStamp</code> to seek to.Blwill parse a number in text form to a number0BeRecognizes an unsigned 1 byte integer00CjIndicates the time in seconds the object has been in a \xe2\x80\xa60AjA value with all bits set.CkA \xe2\x80\x9creasonable default\xe2\x80\x9d set of options which enables \xe2\x80\xa6DgReturns a <code>Ready</code> representing readiness for all operations.CnAVX but not AVX2: only 128-bit integer operations, but use \xe2\x80\xa6DfThe binary interface of a function: <code>extern &quot;C&quot;</code>.DaA <strong>type operator</strong> that returns the absolute value.BfThe <code>+</code> operator (addition)BgFuture for the <code>all</code> method.00BjImplementation of <code>Parser::and</code>CbThe <code>&amp;&amp;</code> operator (logical and)Ab<code>&amp;</code>DfA redirection <code>Policy</code> that combines the results of two \xe2\x80\xa6CiAlias for the associated type of <code>BitAnd</code>: \xe2\x80\xa6BgFuture for the <code>any</code> method.00EgOne arm of a <code>match</code> expression: <code>0..=10 =&gt; { return true; }</code>.cbmpjBig endianChThe <strong>marker trait</strong> for compile time bits.A`<code>box</code>AiRead bytes from a buffer.0ccssccsvFhA <strong>type operator</strong> for comparing <code>Self</code> and <code>Rhs</code>. It provides a \xe2\x80\xa6CgA Certificate Revocation List; as specified in RFC 5280CgA Certificate Signing Request; as specified in RFC 2986Aasnd_ctl_t wrapperDgA <code>Cue</code> is a designated point of time within a media stream.AmParser implementation for cutBmIndicates the client\xe2\x80\x99s tracking preference.0BjDER-encoded data, either owned or borrowedBfThe <code>/</code> operator (division)n<code>.</code>AmObject representing DSA keys.A`<code>dyn</code>CgSets the offset to the size of this object plus the \xe2\x80\xa6ChPseudo-token used for peeking the end of a parse stream.CkThe error was caused by prematurely reaching the end of \xe2\x80\xa6AhContains the error value00000000DaThe <code>Err</code> enum indicates the parser was not successful1111111CfAlias for the associated type of <code>Pow</code>: \xe2\x80\xa6Fa<code>f32</code> with a valid range of <code>-1.0..1.0</code> with <code>0.0</code> being the \xe2\x80\xa6BiSingle precision (32-bit) floating point.ClA 32-bit floating point number stored in big-endian byte \xe2\x80\xa6CjA 32-bit floating point number stored in little-endian \xe2\x80\xa6CkA 32-bit floating point number stored in network-endian \xe2\x80\xa6CjA 32-bit floating point number stored in native-endian \xe2\x80\xa6CiA 32-bit floating point number stored in a given byte \xe2\x80\xa6Fa<code>f64</code> with a valid range of <code>-1.0..1.0</code> with <code>0.0</code> being the \xe2\x80\xa6BiDouble precision (64-bit) floating point.ClA 64-bit floating point number stored in big-endian byte \xe2\x80\xa6CjA 64-bit floating point number stored in little-endian \xe2\x80\xa6CkA 64-bit floating point number stored in network-endian \xe2\x80\xa6CjA 64-bit floating point number stored in native-endian \xe2\x80\xa6CiA 64-bit floating point number stored in a given byte \xe2\x80\xa6BiThe complex Fast Fourier Transform (FFT).A`<code>for</code>AaThe GBK encoding.cGET0cgifDnA <strong>type operator</strong> that computes the greatest common divisor \xe2\x80\xa6CfAlias for the associated type of <code>Gcd</code>: \xe2\x80\xa6Fe<code>i16</code> with a valid range of <code>i16::MIN..=i16::MAX</code> with <code>0</code> being \xe2\x80\xa6ChA 16-bit signed integer stored in big-endian byte order.CkA 16-bit signed integer stored in little-endian byte order.CiA 16-bit signed integer stored in network-endian byte \xe2\x80\xa6CkA 16-bit signed integer stored in native-endian byte order.CeA 16-bit signed integer stored in a given byte order.Eg<code>I24</code> with a valid range of \xe2\x80\x98-(1 &lt;&lt; 23)..(1 &lt;&lt; 23)\xe2\x80\x99 with \xe2\x80\xa6Fe<code>i32</code> with a valid range of <code>i32::MIN..=i32::MAX</code> with <code>0</code> being \xe2\x80\xa6ChA 32-bit signed integer stored in big-endian byte order.CkA 32-bit signed integer stored in little-endian byte order.CiA 32-bit signed integer stored in network-endian byte \xe2\x80\xa6CkA 32-bit signed integer stored in native-endian byte order.CeA 32-bit signed integer stored in a given byte order.Fe<code>i64</code> with a valid range of <code>i64::MIN..=i64::MAX</code> with <code>0</code> being \xe2\x80\xa6ChA 64-bit signed integer stored in big-endian byte order.CkA 64-bit signed integer stored in little-endian byte order.CiA 64-bit signed integer stored in network-endian byte \xe2\x80\xa6CkA 64-bit signed integer stored in native-endian byte order.CeA 64-bit signed integer stored in a given byte order.DfThe concrete value for the type. Can be used in <code>const</code> \xe2\x80\xa6BgHelper type for <code>arr!</code> macroC`The primitive integer type with an identical \xe2\x80\xa6DeWave files with the <code>WAVE_FORMAT_PCM</code> format tag store \xe2\x80\xa6ChAn integer literal: <code>1</code> or <code>1u16</code>.CmUnary operator for retrieving the multiplicative inverse, \xe2\x80\xa6CbKey used by <code>KeySizeUser</code> implementors.BnA key used in a list of <code>Keywords</code>.BlA key used in a list of <code>Fields</code>.EjA <strong>type operator</strong> that gives the length of an <code>Array</code> or the \xe2\x80\xa6CiA <code>let</code> guard: <code>let Some(x) = opt</code>.A`<code>let</code>EbA literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.BbA literal pattern: <code>0</code>.CfA Rust literal such as a string or integer or boolean.CjA trait encapsulating the operations required of a logger.CmThe largest value that can be represented by this integer \xe2\x80\xa60CnThe mid-point value between the maximum and minimum sample \xe2\x80\xa6CnThe smallest value that can be represented by this integer \xe2\x80\xa60cmp4BgFuture for the <code>map</code> method.BgStream for the <code>map</code> method.1010BjImplementation of <code>Parser::map</code>DlA <code>Distribution</code> which maps sampled values to type <code>S</code>Df<code>Map</code> is an iterator that transforms the elements of an \xe2\x80\xa6C`The input contained a map that was not expected.0BaRepresents a JSON key/value type.0FdA <strong>type operator</strong> that returns the maximum of <code>Self</code> and <code>Rhs</code>.BeMD5 of interleaved PCM audio samples.Cf<code>Md5</code> implements the MD5 hashing algorithm.FdA <strong>type operator</strong> that returns the minimum of <code>Self</code> and <code>Rhs</code>.CbFilter that modifies each sample by a given value.EaA module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.A`<code>mod</code>CfAlias for the associated type of <code>Rem</code>: \xe2\x80\xa6BlThe <code>*</code> operator (multiplication)A`<code>mut</code>BhThe <code>-</code> operator for negationBmA numerical identifier for an OpenSSL object.AmParser implementation for notCaThe <code>!</code> operator for logical inversionn<code>!</code>EhThe base trait for numeric types, covering <code>0</code> and <code>1</code> values, \xe2\x80\xa6ChNo session caching for the client or server takes place.AdThe \xe2\x80\x9coff\xe2\x80\x9d level.0coggBbA constant <code>Ratio</code> 1/1.DiThe multiplicative identity element of <code>Self</code>, <code>1</code>.CaThe most significant bit of the number must be 1.BbA level lower than all log levels.CeFinds all occurrences of a single byte in a haystack.00D`Defines a multiplicative identity element for <code>Self</code>.AmParser implementation for optFnA <strong>Marker trait</strong> for the types <code>Greater</code>, <code>Equal</code>, and <code>Less</code>.CnInclude padding bytes when encoding, and require that they \xe2\x80\xa6Cisnd_pcm_t wrapper - start here for audio playback and \xe2\x80\xa6cpdfoThe PEM format.cpngcPUT0CkA pattern in a local binding, function signature, match \xe2\x80\xa6BfMarker trait for \xe2\x80\x9cplain old data\xe2\x80\x9d.BoBinary operator for raising a value to a power.DmA <strong>type operator</strong> that provides exponentiation by repeated \xe2\x80\xa6DaA raw pointer type: <code>*const T</code> or <code>*mut T</code>.A`<code>pub</code>BlType corresponding to <code>SOCK_RAW</code>.A`<code>raw</code>BoThe type representing a reference to this type.0A`<code>ref</code>Ab<code>ref x</code>BgReturns a reference to the inner value.BlA typed reference derived from a byte slice.BeThe <code>%</code> operator (modulus)De<code>Rev</code> is an iterator that produces elements in reverse \xe2\x80\xa6AmUser-level interface for RNGsCdA simple PRNG trait for use within tower middleware.kAn RSA key.AfSigned 16-bit integer.AfSigned 24-bit integer.AfSigned 32-bit integer.BeAn error occurred in the SSL library.csvgAasnd_seq_t wrapperCeThe input contained a sequence that was not expected.0BoThe <code>&lt;&lt;</code> operator (shift left)Ae<code>&lt;&lt;</code>C`The <code>&gt;&gt;</code> operator (shift right)Ae<code>&gt;&gt;</code>B`The state of an SSL/TLS session.EiThe input contained a <code>&amp;str</code> or <code>String</code> that was not expected.0CeA UTF-8 string literal: <code>&quot;foo&quot;</code>.BiThe <code>-</code> operator (subtraction)CfAlias for the associated type of <code>Add</code>: \xe2\x80\xa6C`Return the full circle constant <code>\xcf\x84</code>.BkProtocol corresponding to <code>TCP</code>.CmAn escaped tab character (usually escaped as <code>\\t</code>)AbTag implementationCmA <code>Tag</code> encapsulates a key-value pair of metadata.BeA try-expression: <code>expr?</code>.A`<code>try</code>CaFinds all occurrences of two bytes in a haystack.00E`<code>u16</code> with a valid range of <code>u16::MIN..=u16::MAX</code> with \xe2\x80\xa6AhUnsigned 16-bit integer.CjA 16-bit unsigned integer stored in big-endian byte order.CjA 16-bit unsigned integer stored in little-endian byte \xe2\x80\xa6CkA 16-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CjA 16-bit unsigned integer stored in native-endian byte \xe2\x80\xa6CgA 16-bit unsigned integer stored in a given byte order.AhUnsigned 24-bit integer.Da<code>U24</code> with a valid range of \xe2\x80\x980..16777216\xe2\x80\x99 with \xe2\x80\xa6AhUnsigned 32-bit integer.CjA 32-bit unsigned integer stored in big-endian byte order.CjA 32-bit unsigned integer stored in little-endian byte \xe2\x80\xa6CkA 32-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CjA 32-bit unsigned integer stored in native-endian byte \xe2\x80\xa6CgA 32-bit unsigned integer stored in a given byte order.Fc<code>U48</code> with a valid range of \xe2\x80\x980..(1 &lt;&lt; 48)\xe2\x80\x99 with <code>1 &lt;&lt; 47</code> \xe2\x80\xa6CjA 64-bit unsigned integer stored in big-endian byte order.CjA 64-bit unsigned integer stored in little-endian byte \xe2\x80\xa6CkA 64-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CjA 64-bit unsigned integer stored in native-endian byte \xe2\x80\xa6CgA 64-bit unsigned integer stored in a given byte order.BkProtocol corresponding to <code>UDP</code>.C`The ULE type corresponding to <code>Self</code>.BeCustom derive for [<code>ULE</code>].CjFixed-width, byte-aligned data that can be cast to and \xe2\x80\xa6DjFull docs for this proc macro can be found on the <code>zerovec</code> \xe2\x80\xa6CiForbidden domain code point from the WHATWG URL Standard.AoThe URI component of a request.AdA parsed URL record.0CnA use declaration: <code>use std::collections::HashMap</code>.A`<code>use</code>BbAdded by proxies to track routing.0BkType returned by <code>load_consume</code>.cxmlCiAlias for the associated type of <code>BitXor</code>: \xe2\x80\xa6BgStream for the <code>zip</code> method.00F`<code>Zip</code> is an iterator that zips up <code>a</code> and <code>b</code> into a single \xe2\x80\xa6C`Build an ioctl number for an argumentless ioctl.EgComputes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> \xe2\x80\xa6CmComputes the absolute value of <code>self</code>. Returns \xe2\x80\xa6AlComputes the absolute value.02ClReturns the instant in time after the given duration has \xe2\x80\xa6BgAdd together two <code>Interest</code>.DeComputes <code>a + b</code>, storing the result in <code>self</code>.BnAdds a new source to mix to the existing ones.BnAdd together two <code>Interest</code> values.C`Low level AES IGE and key wrapping functionalityBjGet a flags value with all known bits set.CfReturns a slice of all possible values; useful for \xe2\x80\xa6000000000111011DkExecute predicate over asynchronous stream, and return <code>true</code>\xe2\x80\xa6000BjSet the target proxy for all destinations.DgReturns <code>CodePointInversionList</code> spanning entire Unicode \xe2\x80\xa6ChReturn the group representing all GeneralCategory valuesBkContains architecture independent routines.666666666666CnTests that every item in the parallel iterator matches the \xe2\x80\xa6CeProxy <strong>all</strong> traffic to the passed URL.BeReturns the set containing all flags.CfTests a list of parsers one by one until one succeeds.CmApplies a second parser after the first one, return their \xe2\x80\xa60EeCreate a new <code>Policy</code> that returns <code>Action::Follow</code> only if \xe2\x80\xa6::::DiSearches for <strong>some</strong> item in the parallel iterator that \xe2\x80\xa6BkImplementation for <code>arr!</code> macro.CiMacro allowing for easy generation of Generic Arrays. \xe2\x80\xa6CoConvert a value to another, using the <code>as</code> operator.DiReturns a reference to the underlying <code>syn</code> AST node which \xe2\x80\xa6DiReturns a <code>VariantAst</code> object which contains references to \xe2\x80\xa61DjReturns whether the bit in position <code>bit</code> is set, using the \xe2\x80\xa6CdReturns whether the bit in the given position is setA`Type-level bits.CnReturns <code>CodePointInversionList</code> spanning BMP rangeBcUtilities for working with buffers.CfTraits for data providers that produce opaque buffers.BlGet an immutable slice to the packet buffer.CcLexicographically compares the elements of this \xe2\x80\xa6DhA convenience macro for comparing type numbers. Use <code>op!</code> \xe2\x80\xa6AnSMIME implementation using CMSBmComputes the cosine of a number (in radians).0AiReturns the computed CRC.000AbControl device APIEdTransforms an <code>Err::Error</code> (recoverable) to <code>Err::Failure</code> \xe2\x80\xa6m&lt; any dataAgDecrements self by one.ClThe \xe2\x80\x9cOPENSSLDIR\xe2\x80\x9d setting of the library build in the \xe2\x80\xa6CfDNS Resolution used by the <code>HttpConnector</code>.AoSets the <code>dns</code> flag.nDNS resolutionAbDigital SignaturesBgReturns a copy of the internal DSA key.DeThe <code>dsp</code> module provides efficient implementations of \xe2\x80\xa6CnGet the duration of the packet in <code>TimeBase</code> units.CgThe duration of the packet. When gapless support is \xe2\x80\xa6ClReturns the end index of this window into the underlying \xe2\x80\xa60C`Check for remaining elements after passing a \xe2\x80\xa60AnFinish serializing a sequence.AkFinish serializing a tuple.BbFinish serializing a tuple struct.BcFinish serializing a tuple variant.AiFinish serializing a map.AlFinish serializing a struct.BdFinish serializing a struct variant.776543210DfThe <code>Deserializer::end</code> method should be called after a \xe2\x80\xa6Ccreturns its input if it is at the end of input dataCnChecks whether the cursor is currently pointing at the end \xe2\x80\xa6CkCreate a future that is immediately ready with an error \xe2\x80\xa600CjReturns <code>e^(self)</code>, (the exponential function).0CkPlaces the result of <code>a^p</code> in <code>self</code>.Ab&lt; external dataCmReturns a reference to the extension data for the current \xe2\x80\xa6BkExtensions specific to the HTTP/2 protocol.BfExtensions for HTTP messages in Hyper.CjExtension traits to provide parsing methods on foreign \xe2\x80\xa6BiRecognizes a 4 byte floating point number00BjRecognizes an 8 byte floating point number00DhThe <code>fft</code> module implements the Fast Fourier Transform (FFT).AbCalculate the FFT.DaShows a human-readable description of the <code>ErrorKind</code>.BlFormat this value as an identifier fragment.CjFormat an explanation of what data was being expected. \xe2\x80\xa60BaDisplay a JSON value as a string.CjAn implementation of the Fowler\xe2\x80\x93Noll\xe2\x80\x93Vo hash function.CnCalculates the Greatest Common Divisor (GCD) of the number \xe2\x80\xa600AnGreatest Common Divisor (GCD).FaPlaces the greatest common denominator of <code>a</code> and <code>b</code> in <code>self</code>.BcAlias for <code>Rng::random</code>.0CkWrapper around count and fill - returns an array of pollfdsCjReturns a reference to the value corresponding to the key.CmReturns a reference to the value in the set, if any, that \xe2\x80\xa6BkGets a reference to the value in the entry.BlReturns a reference to this entry\xe2\x80\x99s value.1CiGets a reference to the value that would be used when \xe2\x80\xa62CiGet a reference to a type previously inserted on this \xe2\x80\xa6CiReturns a reference to the value associated with the key.C`Get a reference to the first value in the entry.DhCreates a new <code>Builder</code> initialized with a GET method and \xe2\x80\xa6DaSend a <code>GET</code> request to the supplied <code>Uri</code>.DgReturns the value that is associated with <code>char</code> in this \xe2\x80\xa6EdReturns a reference to the <code>Value</code> corresponding to the <code>Key</code>.0DeGet the value this map has associated with code point <code>ch</code>BcGet the property name given a value0AlBorrows the underlying data.AgGet the value for a keyAnQueries the trie for a string.CcGets a reference to the entry\xe2\x80\x99s value in the map.0DiReturn a reference to the stored value for <code>key</code>, if it is \xe2\x80\xa61ClReturn a reference to the value stored in the set, if it \xe2\x80\xa6BmReturns a reference to the value for the key.BkGets a reference to the value in the entry.CmGet the value associated with <code>key</code>, if it exists.BkGets the reference to the underlying value.CmGets the reference to the result of this lazy value if it \xe2\x80\xa6BiGets a reference to the underlying value.0AjGets the underlying value.012C`Returns the contents of the OpenSSL error stack.CcReturns the first error on the OpenSSL error stack.ClReturns a reference to the element at the given index in \xe2\x80\xa6CkShortcut method to quickly make a <code>GET</code> request.CoConvenience method to make a <code>GET</code> request to a URL.CiReturns a reference to the value associated with the key.C`Get a reference to the first value in the entry.CjReturns a reference to the value corresponding to the key.=CnIndex into a JSON array or map. A string index can be used \xe2\x80\xa6CmReturn a reference to the value associated with the given \xe2\x80\xa6CcReturns the metadata that was found during probing.BgBorrows the element at the given index.ClReturns a reference to the value currently stored in the \xe2\x80\xa60ClReturns a copy of the task-local value if the task-local \xe2\x80\xa6BmObtain a valid reference to the yokeable dataBhGets a copy of the inner <code>T</code>.CnReturns the value as a primitive type, possibly performing \xe2\x80\xa600000000000AnQueries the trie for a string.0000CmGet the value associated with <code>key</code>, if it exists.DjGet one of this slice\xe2\x80\x99s elements, returning <code>None</code> if the \xe2\x80\xa6DiGets the element at the specified index. Returns <code>None</code> if \xe2\x80\xa6BjConvert to an <code>Option&lt;U&gt;</code>BnObtain this as an <code>Option&lt;T&gt;</code>4BcGets GID (group ID) of the process.Blwill parse a number in text form to a number0BbRecognizes a signed 2 byte integer00BbRecognizes a signed 3 byte integer00CjA signed 24-bit integer sample with an internal signed \xe2\x80\xa633BbRecognizes a signed 4 byte integer0044BbRecognizes a signed 8 byte integer00AgIncrements self by one.EhReturns the underlying <code>d_ino</code> field in the contained <code>dirent</code> \xe2\x80\xa6AkType-level signed integers.ChReturns the multiplicative inverse of <code>self</code>.nValidates IRI.BjReturns a reference to this entry\xe2\x80\x99s key.BiGets a reference to the key in the entry.CgGets a reference to the key that would be used when \xe2\x80\xa620BhReturns a reference to the entry\xe2\x80\x99s key0BiReturns a reference to the entry\xe2\x80\x99s key.DkA macro allowing for compile-time construction of valid <code>Key</code>\xe2\x80\xa60ClGets a reference to the entry\xe2\x80\x99s key, either within the \xe2\x80\xa6CaGets a reference to the entry\xe2\x80\x99s key in the map.CiGets a reference to the key that was used to find the \xe2\x80\xa61176554867BjReturn the key associated with this entry.ClA key string indicating the type, meaning, or purpose of \xe2\x80\xa6CmCalculates the Lowest Common Multiple (LCM) of the number \xe2\x80\xa600AmLowest Common Multiple (LCM).Ac&lt; length of data0CkReturn the number of elements in the <code>ArrayVec</code>.B`Return the length of the string.DaReturns the number of bytes contained in this <code>Bytes</code>.DdReturns the number of bytes contained in this <code>BytesMut</code>.BiReturns the number of bytes in the slice.2BiThe full length of the buffer in samples.BiReturns the number of tasks in the deque.0BiReturns the number of tasks in the queue.CeReturns the number of futures contained in the queue.CcReturns the number of futures contained in the set.CcReturns the number of streams contained in the set.CnReturn the number of messages in the queue or 0 if channel \xe2\x80\xa60312BjReturns the number of elements in the map.BjReturns the number of elements in the set.BlReturns the number of elements in the table.CnReturns the number of values that the sample iterator will \xe2\x80\xa6CiReturns the number of samples in the file written so far.BgGet the number of extensions available.C`Returns the number of headers stored in the map.BhReturns the length of <code>self</code>.DaReturns the number of bytes contained in this <code>Bytes</code>.1CfReturn the number of key-value pairs in the map slice.C`Return the number of key-value pairs in the map.BoReturn the number of elements in the set slice.BiReturn the number of elements in the set.BcReturns the template string length.AjReturns the string length.00000CbThe number of elements in the <code>LiteMap</code>AnGets the len in bytes for selfBfReturns the size of the shared secret.BjReturns the number of bytes in the string.0C`Returns the number of bytes in the octet string.C`Computes an upper bound on the signature length.BiReturns the number of items in the stack.jThe lengthAmReturns the number of indicesCkProduces an exact count of how many items this iterator \xe2\x80\xa6C`Returns the number of headers stored in the map.BhReturns the length of <code>self</code>.CdReturns the number of sounds currently in the queue.0BjReturns the number of elements in the map.BcReturn the number of stored values.BkThe number of elements stored in the vectorBjReturns the size of this address in bytes.BcGets the number of written samples.0AmReturns the number of fields.CnReturns the number of syntax tree nodes in this punctuated \xe2\x80\xa6CfThe length of the <code>ArrayVec</code> (in elements).CfThe length of the <code>SliceVec</code> (in elements).BdThe length of the vec (in elements).BnReturns the number of messages in the channel.0BdReturns the number of queued values.CjReturns the number of messages that were sent into the \xe2\x80\xa6DbReturns the number of tasks currently in the <code>JoinSet</code>.CkReturns the number of fields in this <code>FieldSet</code>.DiReturns the number of fields in this <code>ValueSet</code> that would \xe2\x80\xa6CkReturns the number of fields that would be visited from \xe2\x80\xa6210ChThis function isn\xe2\x80\x99t used in this crate, but may be \xe2\x80\xa6CbThe number of elements in the <code>ZeroMap</code>CbThe number of values in the <code>ZeroMap2d</code>BhGet the number of elements in this sliceBmReturns the number of elements in this slice.CjThe number of elements in the <code>ZeroMapBorrowed</code>ClThe number of elements in the <code>ZeroMap2dBorrowed</code>EhLib module to re-export everything needed from <code>std</code> or <code>core</code>/\xe2\x80\xa6AmA lightweight logging facade.AmLogs the <code>Record</code>.AkThe standard logging macro.CjReturns the logarithm of the number with respect to an \xe2\x80\xa60Aj&lt; available channel map0DhMap <code>f</code> over the contained value and return the result in theCmMap this future\xe2\x80\x99s output to a different type, returning \xe2\x80\xa60CmMaps this stream\xe2\x80\x99s items to a different type, returning \xe2\x80\xa60EoMaps a <code>Poll&lt;T&gt;</code> to <code>Poll&lt;U&gt;</code> by applying a function to a \xe2\x80\xa6ChReturns a locked view over a portion of the locked data.0332200DlMaps a <code>GenericSequence</code> to another <code>GenericSequence</code>.CjConsumes the request returning a new request with body \xe2\x80\xa6ClConsumes the response returning a new response with body \xe2\x80\xa6BlA map from names to their value discriminantBnA map from the value discriminant to the namesChA map from the value discriminant (the index) to the \xe2\x80\xa60Dj<code>IndexMap</code> is a hash table where the iteration order of the \xe2\x80\xa6BjApplies a function over the produced valueBkMaps a function over the result of a parser0EaMaps a <code>Needed</code> to <code>Needed</code> by applying a function to a \xe2\x80\xa6BmApplies the given function to the inner errorBjMaps a function on the result of a parser.BiMap sampled values to type <code>S</code>0DhMap <code>f</code> over the contained value and return the result in theDjApplies <code>map_op</code> to each item of this iterator, producing a \xe2\x80\xa6BeA map of String to serde_json::Value.DkMakes a new <code>MappedMutexGuard</code> for a component of the locked \xe2\x80\xa6DiMakes a new <code>OwnedMappedMutexGuard</code> for a component of the \xe2\x80\xa610DhMakes a new <code>OwnedRwLockReadGuard</code> for a component of the \xe2\x80\xa6DkMakes a new <code>OwnedRwLockMappedWriteGuard</code> for a component of \xe2\x80\xa60DjMakes a new <code>RwLockReadGuard</code> for a component of the locked \xe2\x80\xa6DjMakes a new <code>RwLockMappedWriteGuard</code> for a component of the \xe2\x80\xa60BgReturns the most verbose logging level.BnReturns the most verbose logging level filter.BgReturns the maximum of the two numbers.00CmComputes the maximum of all the items in the iterator. If \xe2\x80\xa6AlMethod returning the maximumBlFinalizes and returns the computed MD5 hash.CeFunctions for converting between different in-RAM \xe2\x80\xa6BgReturns the minimum of the two numbers.00CmComputes the minimum of all the items in the iterator. If \xe2\x80\xa6AlMethod returning the minimumCmMio is a fast, low-level I/O library for Rust focusing on \xe2\x80\xa6BcMixes this source with another one.DeComputes <code>q * m</code>, storing the result in <code>self</code>.lReturns NaN.BcReturns the <code>NaN</code> value.AoNegate <code>Sign</code> value.AfNetworking primitives.BmTCP/UDP/Unix bindings for <code>tokio</code>.D`Wrapper around open that takes a &amp;str instead of a &amp;CStrAhCreates a new ElemValue.AeCreates a new ElemId.222Cntypical interfaces are: \xe2\x80\x9cpcm\xe2\x80\x9d, \xe2\x80\x9cctl\xe2\x80\x9d, \xe2\x80\x9crawmidi\xe2\x80\x9d\xe2\x80\xa6BnCreates a Selem by wrapping <code>elem</code>.CmOpens a mixer and attaches it to a card identified by its \xe2\x80\xa6CnCreates a new event. For events that carry variable-length \xe2\x80\xa6BiCreate a new empty <code>ArrayVec</code>.BlCreate a new empty <code>ArrayString</code>.DbCreate a new <code>CapacityError</code> from <code>element</code>.BcCreate an <code>AtomicWaker</code>.CmCreate a <code>Base64Display</code> with the provided engine.CiCreate a new decoder that will read from the provided \xe2\x80\xa6ChCreate a new encoder that will write to the provided \xe2\x80\xa6ClCreate a EncoderStringWriter that will encode into a new \xe2\x80\xa6CmCreate a <code>GeneralPurpose</code> engine from an Alphabet.DfCreate a new config with <code>padding</code> = <code>true</code>, \xe2\x80\xa6DhCreate an <code>Alphabet</code> from a string of 64 unique printable \xe2\x80\xa6nDefine a flag.AmCreate new buffer from slice.BgCreates a new empty <code>Bytes</code>.CjCreates a new <code>BytesMut</code> with default capacity.DoCreates a <code>&amp;mut UninitSlice</code> wrapping a slice of initialised \xe2\x80\xa6CkCreates an iterator over the bytes contained by the buffer.3CjConstruct a new sample if the given value is within range.000BnCreate module with CPU feature detection code.AmCreates a new injector queue.DeAllocates <code>value</code> on the heap and returns a new atomic \xe2\x80\xa6DdAllocates <code>value</code> on the heap and returns a new owned \xe2\x80\xa6AhCreates a new collector.CcThe new value, which the operation failed to store.0BcCreates a new <code>Backoff</code>.CfPads and aligns a value to the length of a cache line.ClCreates a new atomic cell initialized with <code>val</code>.BbCreates a new <code>Parker</code>.BiCreates a new sharded reader-writer lock.CmCreates a new wait group and returns the single reference \xe2\x80\xa6BeCreate new value from fixed size key.CaCreate new value from fixed length key and nonce.>>>>>>>>AkCreate new hasher instance.CfCreate new hasher instance with the given output size.BnInitialize hasher state for given output size.BoInstantiates a singleton representing this bit.0CdInstantiates a singleton representing the integer 0.DjCreate a new <code>application/x-www-form-urlencoded</code> serializer \xe2\x80\xa6DcCreate a <code>LocalFutureObj</code> from a custom trait object \xe2\x80\xa6CnCreate a <code>FutureObj</code> from a custom trait object \xe2\x80\xa6DhCreates a new <code>Abortable</code> future/stream using an existing \xe2\x80\xa6BbCreate a new, empty pool of tasks.CcConstructs a new, empty <code>FuturesOrdered</code>CfConstructs a new, empty <code>FuturesUnordered</code>.BnConstructs a new, empty <code>SelectAll</code>BcCreate an <code>AtomicWaker</code>.DgCreate a new <code>WakerRef</code> from a <code>Waker</code> reference.EdCreates a new <code>Waker</code> from the provided <code>data</code> pointer and \xe2\x80\xa6EgCreates a new <code>RawWaker</code> from the provided <code>data</code> pointer and \xe2\x80\xa6FbCreates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>,BbCreates a new futures-aware mutex.CnCreates a new I/O error from a known kind of error as well \xe2\x80\xa6ClCreates a new <code>IoSliceMut</code> wrapping a byte slice.CiCreates a new <code>IoSlice</code> wrapping a byte slice.DaCreates a new <code>AllowStdIo</code> from an existing IO object.DhCreates a new <code>BufReader</code> with a default buffer capacity. \xe2\x80\xa6DhCreates a new <code>BufWriter</code> with a default buffer capacity. \xe2\x80\xa6DjCreate a new <code>LineWriter</code> with default buffer capacity. The \xe2\x80\xa6CiCreates a new cursor wrapping the provided underlying \xe2\x80\xa6DkCreates a new window around the buffer <code>t</code> defaulting to the \xe2\x80\xa6BbCreate a new, empty pool of tasks.DcCreate a <code>LocalFutureObj</code> from a custom trait object \xe2\x80\xa6CnCreate a <code>FutureObj</code> from a custom trait object \xe2\x80\xa6DgCreate a new <code>WakerRef</code> from a <code>Waker</code> reference.21DhCreates a new <code>Abortable</code> future/stream using an existing \xe2\x80\xa6:98765BcCreate an <code>AtomicWaker</code>.2CcConstructs a new, empty <code>FuturesOrdered</code>BnConstructs a new, empty <code>SelectAll</code>CfConstructs a new, empty <code>FuturesUnordered</code>.BbCreates a new futures-aware mutex.CjReturns a new client builder instance initialized with \xe2\x80\xa6CjReturns a new server builder instance initialized with \xe2\x80\xa6BhCreates an empty <code>HashTable</code>.CgAttempts to create a reader that reads the WAVE format.CgCreates a writer that writes the WAVE format to the \xe2\x80\xa6BhCreate an empty <code>Extensions</code>.BgCreate an empty <code>HeaderMap</code>.CfCreates a new blank <code>Request</code> with the bodyDiCreates a new default instance of <code>Builder</code> to construct a \xe2\x80\xa6CgCreates a new blank <code>Response</code> with the bodyDgCreates a new default instance of <code>Builder</code> to construct \xe2\x80\xa62CgReturns a new <code>SizeHint</code> with default valuesB`Create a new <code>Empty</code>.AoCreate a new <code>Full</code>.BbCreate a new <code>Limited</code>.BeCreate a new <code>StreamBody</code>.BeCreate a new <code>BodyStream</code>.BhCreate a new <code>BodyDataStream</code>BbCreate a new <code>BoxBody</code>.BhCreate a new <code>UnsyncBoxBody</code>.CgCreates a new Request, using a slice of headers you \xe2\x80\xa6EfCreates a new <code>Response</code> using a slice of <code>Header</code>s you have \xe2\x80\xa6BaCreates a new connection builder.0DdCreate a new <code>ReadBuf</code> with a slice of initialized bytes.<BgCreates a new empty <code>Bytes</code>.BlConstruct a new <code>HttpsConnector</code>.AhConstruct a new Builder.AnConstruct a new HttpConnector.CkCreate new <code>Connected</code> type with empty metadata.BgCreate a new SOCKSv5 handshake service.BfCreate a new SOCKSv4 handshake serviceAlCreate a new Tunnel service.BiConstruct a new <code>GaiResolver</code>.CkWraps the inner I/O in an <code>WithHyperIo&lt;I&gt;</code>CkWraps the inner I/O in an <code>WithTokioIo&lt;I&gt;</code>DkCreate new executor that relies on <code>tokio::spawn</code> to execute \xe2\x80\xa6CjWrap a type implementing Tokio\xe2\x80\x99s or hyper\xe2\x80\x99s IO traits.AgCreate a new TokioTimerDhReturns a new <code>Char16Trie</code> with ownership of the provided \xe2\x80\xa6DiReturns a new <code>Char16TrieIterator</code> backed by borrowed data \xe2\x80\xa6DjReturns a new empty map of extensions. Same as <code>default()</code>, \xe2\x80\xa6DjReturns a new empty set of attributes. Same as <code>default()</code>, \xe2\x80\xa6ChReturns a new empty list of key-value pairs. Same as \xe2\x80\xa6BiReturns a new <code>SubdivisionId</code>.CjReturns a new empty map of Unicode extensions. Same as \xe2\x80\xa62ClReturns a new empty map of Transform extensions. Same as \xe2\x80\xa6ClReturns a new empty list of private-use extensions. Same \xe2\x80\xa6DiReturns a new empty list of variants. Same as <code>default()</code>, \xe2\x80\xa6DgConstructs a new <code>CanonicalComposition</code> using compiled data.DdConstructs a new <code>CanonicalCompositionBorrowed</code> using \xe2\x80\xa6AmConstruct from compiled data.000AmConstruct with compiled data.0DjCreates a new instance of <code>PropertyNamesLongBorrowed&lt;T&gt;</code>.DkCreates a new instance of <code>PropertyNamesShortBorrowed&lt;T&gt;</code>.EhCreates a new <code>CodePointSetDataBorrowed</code> for a <code>BinaryProperty</code>\xe2\x80\xa6DnCreates a new <code>CodePointSetData</code> for a <code>BinaryProperty</code>.EbCreates a new <code>CodePointMapData</code> for a <code>EnumeratedProperty</code>.CmCreates a new <code>CodePointMapDataBorrowed</code> for a \xe2\x80\xa6DlCreates a new <code>EmojiSetDataBorrowed</code> for a <code>EmojiSet</code>.0EaCreates a new instance of <code>PropertyParser&lt;T&gt;</code> using compiled \xe2\x80\xa6E`Creates a new instance of <code>PropertyParserBorrowed&lt;T&gt;</code> using \xe2\x80\xa687DgCreates a new instance of <code>ScriptWithExtensionsBorrowed</code> \xe2\x80\xa60EgCreates a <code>DataProviderWithMarker</code> from a <code>DataProvider</code> with \xe2\x80\xa6C`Constructor using data compiled into the binary.CiComputes (preferably at compile time) an ASCII deny list.1AgReturns an empty slice.BfCreate a new map. (Does not allocate.)1BfCreate a new set. (Does not allocate.)DkCreates a new IP network address from an <code>IpAddr</code> and prefix \xe2\x80\xa6DhCreates a new IPv4 network address from an <code>Ipv4Addr</code> and \xe2\x80\xa6DhCreates a new IPv6 network address from an <code>Ipv6Addr</code> and \xe2\x80\xa6BbCreates a builder with empty data.BkCreates a new resolver with the given base.AeCreates a new string.BoCreates a <code>VarName</code> from the string.AlCreates a new empty context.222222CnThis is a cheap operation; you don\xe2\x80\x99t need to worry about \xe2\x80\xa6AnInitialisation for new streamsCaConstructs a new OggStreamReader from a given \xe2\x80\xa6BgCreate a new empty <code>LiteMap</code>BiConstruct new <code>RecordBuilder</code>.BmConstruct a new <code>MetadataBuilder</code>.CjReturns an iterator over all occurrences of the needle \xe2\x80\xa600ClCreate a new searcher that finds occurrences of the byte \xe2\x80\xa6CkCreate a new searcher that finds occurrences of the two \xe2\x80\xa6CmCreate a new searcher that finds occurrences of the three \xe2\x80\xa6CjCreate a new prefilter that reports possible locations \xe2\x80\xa6CcCreate a new pair of offsets from the given needle.CjCreate a new Rabin-Karp forward searcher for the given \xe2\x80\xa6CjCreate a new Rabin-Karp reverse searcher for the given \xe2\x80\xa6DkCreate a new Shift-Or forward searcher for the given <code>needle</code>\xe2\x80\xa6CiCreate a searcher that finds occurrences of the given \xe2\x80\xa60CnCreate a new searcher that finds occurrences of the needle \xe2\x80\xa600CiCreate a new pair searcher. The searcher returned can \xe2\x80\xa61110BiCreate a new finder for the given needle.CaCreate a new reverse finder for the given needle.CbCreate a new finder builder with default settings.BhA new iterator over mimes or media typesBfReturn a new <code>Poll</code> handle.B`Create a new <code>Waker</code>.BdCreate a new non-blocking Unix pipe.BnReturns a new connector with default settings.BiCreates a acceptor with default settings.EeCreates <code>Needed</code> instance, returns <code>Needed::Unknown</code> if the \xe2\x80\xa6Aicreates a new basic errorBnCreates and initializes a <code>BigInt</code>.BoCreates and initializes a <code>BigUint</code>.CiFor a given n, iterate over all binomial coefficients \xe2\x80\xa6BaCreates a new <code>Ratio</code>.AiCreates a new Page parserCeConstructs a new blank <code>BasePacketReader</code>.DjConstructs a new <code>PacketReader</code> with a given <code>Read</code>.AiCreates a new empty cell.ChCreates a new lazy value with the given initializing \xe2\x80\xa6111110DbCreates a new <code>Deriver</code> using the provided private key.CoCreates a new <code>Hasher</code> with the specified hash type.AeCreates a new hasher.0000BiReturns a new <code>BigNumContext</code>.CcCreates a new <code>BigNum</code> with the value 0.AfCreates a new context.AnCreate a configuration parser.BkCreates a new point on the specified curve.BeCreates a new <code>Encrypter</code>.BeCreates a new <code>Decrypter</code>.B`Creates a new <code>Seal</code>.B`Creates a new <code>Open</code>.CbThis corresponds to <code>OSSL_LIB_CTX_new</code>.7CbThis corresponds to <code>OCSP_REQUEST_new</code>.CbCreates a new pkey context using the provided key.C`Creates a new <code>RsaPrivateKeyBuilder</code>.BbCreates a new <code>Signer</code>.BdCreates a new <code>Verifier</code>.BmCreates a new <code>SslContextBuilder</code>.BeCreates a new <code>SslStream</code>.DaBegin creating an <code>SslStream</code> atop <code>stream</code>AoCreates a new <code>Ssl</code>.EgCreates a new <code>Crypter</code>.  The initialisation vector, <code>iv</code>, is \xe2\x80\xa6AfCreates a new builder.0BlReturns a builder for a certificate request.CeCreates a new <code>X509StoreContext</code> instance.DjConstructs an X509 extension value. See <code>man x509v3_config</code> \xe2\x80\xa6BjReturns a builder for a certificate store.AiCreate an X509VerifyParamChConstruct a new <code>BasicConstraints</code> extension.C`Construct a new <code>KeyUsage</code> extension.ChConstruct a new <code>ExtendedKeyUsage</code> extension.ClConstruct a new <code>SubjectKeyIdentifier</code> extension.CnConstruct a new <code>AuthorityKeyIdentifier</code> extension.CnConstruct a new <code>SubjectAlternativeName</code> extension.DdReturns an empty <code>TokenStream</code> containing no token trees.DgCreates a new <code>Group</code> with the given delimiter and token \xe2\x80\xa6DfCreates a new <code>Punct</code> from the given character and spacing.EfCreates a new <code>Ident</code> with the given <code>string</code> as well as the \xe2\x80\xa6DhConstruct a new <code>Bernoulli</code> with the given probability of \xe2\x80\xa6DjCreate a new <code>Choose</code> instance which samples uniformly from \xe2\x80\xa6ClConstruct self, with inclusive lower bound and exclusive \xe2\x80\xa6DgCreate a new <code>Uniform</code> instance, which samples uniformly \xe2\x80\xa6EeCreates a new a <code>WeightedIndex</code> <code>Distribution</code> using the valuesDjCreate a new <code>ReseedingRng</code> from an existing PRNG, combined \xe2\x80\xa6DkCreate a <code>StepRng</code>, yielding an arithmetic sequence starting \xe2\x80\xa6DhCreate a new <code>BlockRng</code> from an existing RNG implementing \xe2\x80\xa60CmDeprecated in favor of <code>ThreadPoolBuilder::build</code>.CnCreates and returns a valid rayon thread pool builder, but \xe2\x80\xa610C`Creates and return a valid rayon thread pool \xe2\x80\xa6BlConstructs a new <code>ClientBuilder</code>.AiConstructs a new request.BeConstructs a new <code>Client</code>.BgCreate an empty <code>HeaderMap</code>.AmWrap an existing bytes slice.AlConstruct a new empty bufferDeConstructs a new <code>Deserializer</code> by consuming the given \xe2\x80\xa6DjConstructs a new <code>MessagePack</code> serializer whose output will \xe2\x80\xa6CoCreates a <code>StructMapConfig</code> inheriting unchanged \xe2\x80\xa6DaCreates a <code>StructTupleConfig</code> inheriting unchanged \xe2\x80\xa6DcCreates a <code>HumanReadableConfig</code> inheriting unchanged \xe2\x80\xa6DjCreates a <code>BinaryConfig</code> inheriting unchanged configuration \xe2\x80\xa6AoBuilds a new <code>Sink</code>.BhBuilds a new <code>SamplesBuffer</code>.AiInitializes the iterator.AgBuilds a new converter.BaCreate new sample rate converter.BkBuilds a new decoder with default settings.CdCreates a new decoder builder with default settings.CmCreate an empty source that executes a callback function. \xe2\x80\xa6CjWrap the input source and make it mono. Play that mono \xe2\x80\xa6ClWhen the inner source is empty the AtomicUsize passed in \xe2\x80\xa6CfAn empty source that immediately ends without ever \xe2\x80\xa6BoCreates new limit settings with default values.AjThe frequency of the sine.DfCreate a new <code>SignalGenerator</code> object that generates an \xe2\x80\xa61DfBuilds a new <code>SpatialSink</code>, beginning playback on a stream.22DkWrap a <code>Source</code> and lazily convert its samples to a specific \xe2\x80\xa6CjCreate a new source that never ends and produces total \xe2\x80\xa6BnBuilds a new <code>StaticSamplesBuffer</code>.AfCreate a new iterator.0CnThis is a cheap operation; you don\xe2\x80\x99t need to worry about \xe2\x80\xa6CiCreate a new borrowed deserializer from the given string.BoCreate a new deserializer from the given bytes.CnCreate a new borrowed deserializer from the given borrowed \xe2\x80\xa6CiConstruct a new <code>MapDeserializer&lt;I, E&gt;</code>.CiConstruct a new <code>SeqDeserializer&lt;I, E&gt;</code>.ClConstruct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.ClConstruct a new <code>MapAccessDeserializer&lt;A&gt;</code>.CmConstruct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.76543210AfMakes a new empty Map.CgCreate a JSON deserializer from one of the possible \xe2\x80\xa6CnCreate a JSON stream deserializer from one of the possible \xe2\x80\xa6CkCreate a JSON input source to read from a std::io input \xe2\x80\xa6CiCreate a JSON input source to read from a slice of bytes.CgCreate a JSON input source to read from a UTF-8 string.AnCreates a new JSON serializer.CiConstruct a pretty printer formatter that defaults to \xe2\x80\xa6BhReturns a new <code>Deserializer</code>.BfReturns a new <code>Serializer</code>.AkCreate new hasher instance.BiConstruct a new, empty <code>Slab</code>.AiConstruct an empty vectorBkCreates a new socket and sets common flags.BcCreate new <code>SockFilter</code>.DbCreates a new <code>MaybeUninitSlice</code> wrapping a byte slice.ClCreate a new <code>MsgHdr</code> with all empty/zero fields.CoCreate a new <code>MsgHdrMut</code> with all empty/zero fields.DfCreate a <code>SockAddr</code> from the underlying storage and its \xe2\x80\xa6CeReturns a new, empty set of TCP keepalive parameters.DbInstantiates the <code>MetadataReader</code> with the provided \xe2\x80\xa6AnCreate a new <code>Tag</code>.BoInstantiate a new <code>MetadataBuilder</code>.AlCreate a new complex number.BlInstantiate a N-point IMDCT with no scaling.DjInstantiate a new <code>SampleBuffer</code> using the specified signal \xe2\x80\xa6DfInstantiate a new <code>RawSampleBuffer</code> using the specified \xe2\x80\xa6DiInstantiate a new <code>AudioBuffer</code> using the specified signal \xe2\x80\xa6DdInstantiate a <code>Crc16Ansi</code> instance with an initial state.DfInstantiate a <code>Crc16AnsiLe</code> instance with an initial state.DaInstantiates a <code>Crc32</code> instance with an initial state.DdInstantiate a <code>Crc8Ccitt</code> instance with an initial state.BmInstantiate a new <code>CodecRegistry</code>.BfCreate an empty <code>SeekIndex</code>DbInstantiate a new <code>BitStreamLtr</code> with the given source.DbInstantiate a new <code>BitReaderLtr</code> with the given buffer.DbInstantiate a new <code>BitStreamRtl</code> with the given buffer.DbInstantiate a new <code>BitReaderRtl</code> with the given buffer.DbInstantiate a new <code>BufReader</code> with a given byte buffer.DkInstantiates a new <code>ScopedStream</code> with an upper limit on the \xe2\x80\xa6DoInstantiates a new <code>ReadOnlySource&lt;R&gt;</code> by taking ownership \xe2\x80\xa6C`Instantiates a new <code>CodebookBuilder</code>.BgInstantiate an empty <code>Hint</code>.DjCreates a new <code>TimeBase</code>. Panics if either the numerator or \xe2\x80\xa6DcUsually the <code>ParseStream::error</code> method will be used \xe2\x80\xa6EfCreates a new <code>Ident</code> with the given <code>string</code> as well as the \xe2\x80\xa6fPanicsCcInterpret a Syn literal from a proc-macro2 literal.DiCreates a <code>TokenBuffer</code> containing all the tokens from the \xe2\x80\xa6BeCreates an empty punctuated sequence.CnCreates a punctuated pair out of a syntax tree node and an \xe2\x80\xa6CfCreates a new static mutex containing the given value.DiCreate a new <code>Structure</code> with the variants and fields from \xe2\x80\xa6BiMakes a new, empty <code>ArrayVec</code>.AgMakes a new, empty vec.CfCreates a new lock in an unlocked state ready for use.DlCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.CcCreates a new empty <code>OnceCell</code> instance.CbCreates a new empty <code>SetOnce</code> instance.CjCreates a new barrier that can block a given number of \xe2\x80\xa6CoCreate a new <code>Notify</code>, initialized without a permit.CkCreates a new semaphore with the initial number of permits.CoCreates the sending-half of the <code>broadcast</code> channel.CkCreates the sending-half of the <code>watch</code> channel.CkCreates a new set of options with default mode/security \xe2\x80\xa6CkCreates a blank new set of options ready for configuration.0DcCreates a new <code>ReadBuf</code> from a fully initialized buffer.DhCreates a new <code>BufWriter</code> with a default buffer capacity. \xe2\x80\xa6DgWraps a type in both <code>BufWriter</code> and <code>BufReader</code>.DhCreates a new <code>BufReader</code> with a default buffer capacity. \xe2\x80\xa6DjCreates an <code>AsyncFd</code> backed by (and taking ownership of) an \xe2\x80\xa6BbCreate a new <code>JoinSet</code>.AmReturns a new local task set.BnReturns a new connector with default settings.BiCreates a acceptor with default settings.DhCreates a new <code>CancellationToken</code> in the non-cancelled state.BhCreate a new <code>PollSemaphore</code>.E`Create a new <code>ReusableBoxFuture&lt;T&gt;</code> containing the provided \xe2\x80\xa6BfCreates a new <code>PollSender</code>.DdCreates a new <code>BytesCodec</code> for shipping around raw bytes.BoCreate a new, default, <code>FramedParts</code>DcReturns a <code>LinesCodec</code> for splitting up data into lines.DgReturns a <code>AnyDelimiterCodec</code> for splitting up data into \xe2\x80\xa6DkCreates a new <code>FramedWrite</code> with the given <code>encoder</code>.DjCreates a new <code>FramedRead</code> with the given <code>decoder</code>.EbProvides a <code>Stream</code> and <code>Sink</code> interface for reading and \xe2\x80\xa6CmCreates a new length delimited codec builder with default \xe2\x80\xa6DdCreates a new <code>LengthDelimitedCodec</code> with the default \xe2\x80\xa6CoConvert a stream of byte chunks into an <code>AsyncRead</code>.BfCreates a new <code>SinkWriter</code>.DoConvert an <code>AsyncRead</code> into a <code>Stream</code> with item type \xe2\x80\xa6FcCreate a new <code>InspectWriter</code>, wrapping <code>write</code> and calling <code>f</code> \xe2\x80\xa6FdCreate a new <code>InspectReader</code>, wrapping <code>reader</code> and calling <code>f</code> \xe2\x80\xa6BgCreates a new <code>CopyToBytes</code>.CjCreates a new <code>RetryLayer</code> from a retry policy.CnRetry the inner service depending on this <code>Policy</code>.BmCreate a new <code>ExponentialBackoff</code>.DhCreate a <code>TpsBudget</code> that allows for a certain percent of \xe2\x80\xa6B`Create a timeout from a durationBbCreates a new <code>Timeout</code>AmConstruct a new elapsed errorBcCreate a new <code>BoxLayer</code>.BoCreate a new <code>BoxCloneServiceLayer</code>.CcCreate a new <code>BoxCloneSyncServiceLayer</code>.BjCreate a new <code>BoxCloneService</code>.BnCreate a new <code>BoxCloneSyncService</code>.BkCreates a new <code>AndThen</code> service.BnCreates a new <code>AndThenLayer</code> layer.BkCreate new <code>CallAll</code> combinator.CdCreate new <code>CallAllUnordered</code> combinator.CnReturns a new <code>FutureService</code> for the given future.BjCreates a new <code>MapErr</code> service.BgCreates a new <code>MapErrLayer</code>.BnCreates a new <code>MapRequest</code> service.BkCreates a new <code>MapRequestLayer</code>.BoCreates a new <code>MapResponse</code> service.CbCreates a new <code>MapResponseLayer</code> layer.BmCreates a new <code>MapResult</code> service.C`Creates a new <code>MapResultLayer</code> layer.BmCreates a new <code>MapFuture</code> service.C`Creates a new <code>MapFutureLayer</code> layer.BcCreate a new <code>Optional</code>.BhCreates a new <code>Then</code> service.BkCreates a new <code>ThenLayer</code> layer.BlCreate a new default <code>HasherRng</code>.BiCreate a new <code>ServiceBuilder</code>.BhCreate a new <code>Identity</code> valueB`Create a new <code>Stack</code>.DnCreate a new <code>FollowRedirectLayer</code> with a <code>Standard</code> \xe2\x80\xa6EeCreate a new <code>FollowRedirect</code> with a <code>Standard</code> redirection \xe2\x80\xa6DhCreate a new <code>FilterCredentials</code> that removes blocklisted \xe2\x80\xa6E`Create a new <code>Limited</code> with a limit of <code>max</code> redirections.BeCreate a new <code>SameOrigin</code>.BoCreate a new <code>GrpcErrorsAsFailures</code>.CcCreates a new <code>StatusInRangeAsFailures</code>.DeCreate a new <code>SharedClassifier</code> from the given classifier.CaCreate a new <code>ServerErrorsAsFailures</code>.:9ClConstruct new metadata for a span or event, with a name, \xe2\x80\xa6EcReturns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.DbReturns a new <code>Event</code> in the current span, with the \xe2\x80\xa6DhConstructs a new <code>FieldSet</code> with the given array of field \xe2\x80\xa6BhReturns a new <code>NoSubscriber</code>.DiConstructs a new <code>Span</code> with the given metadata and set of \xe2\x80\xa6DfReturns <code>Attributes</code> describing a new child span of the \xe2\x80\xa6DbConstructs a new <code>Record</code> from a <code>ValueSet</code>.BfCreates a new <code>Once</code> value.5EdReturns a new <code>DefaultCallsite</code> with the specified <code>Metadata</code>.98732DdConstructs a new <code>Current</code> that indicates the current \xe2\x80\xa66BoCreate a <code>TryLock</code> around the value.BoInstantiates a singleton representing this bit.0CgInstantiates a singleton representing this strictly \xe2\x80\xa60CdInstantiates a singleton representing the integer 0.2CgInstantiates a singleton representing this unsigned \xe2\x80\xa60BgCreates the iterator from a byte slice.00BgCreate a new <code>want</code> channel.BfConstructs a new <code>Unalign</code>.CmConstructs a new value, possibly performing an endianness \xe2\x80\xa600000000000DgMove value inside a <code>Zeroizing</code> wrapper which ensures it \xe2\x80\xa6CfCreates a new, empty <code>ZeroMap&lt;K, V&gt;</code>.BlCreates a new, empty <code>ZeroMap2d</code>.CfCreates a new, empty <code>VarZeroVec&lt;T&gt;</code>.CmCreates a new, borrowed, empty <code>ZeroVec&lt;T&gt;</code>.DnNew <code>NichedOptionULE&lt;U, N&gt;</code> from <code>Option&lt;U&gt;</code>ElConstruct an <code>OptionULE&lt;U&gt;</code> from an equivalent <code>Option&lt;T&gt;</code>CnCreates a new, empty <code>ZeroMapBorrowed&lt;K, V&gt;</code>.DeCreates a new, empty <code>ZeroMap2dBorrowed&lt;K0, K1, V&gt;</code>.BbConstruct an empty VarZeroVecOwnedCjA collection of numerical identifiers for OpenSSL objects.BiReturns the NID associated with this OID.AkReturns the cipher\xe2\x80\x99s Nid.0Amnom, eating data byte by byteDgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6000BnSucceeds if the child parser returns an error.111111111111BlReturns the complement of this set of flags.BlThe current time, as a <code>UnixTime</code>BnReturns an instant corresponding to \xe2\x80\x9cnow\xe2\x80\x9d.CeReturns the <code>num</code> parameter of the cipher.BaOgg container decoder and encoderCdReturns the multiplicative identity, <code>1</code>.EaReturns the multiplicative identity element of <code>Self</code>, <code>1</code>.DjOptional parser, will return <code>None</code> on <code>Err::Error</code>.l&lt; nothing0AlEnables or disables padding.CfGenerates the pattern fragment for this field binding.CjGenerates the match-arm pattern which could be used to \xe2\x80\xa6CmThis module bypasses alsa-lib and directly read and write \xe2\x80\xa6AjAudio playback and captureAlLow-level PEM decoding APIs.BeGets PID (process ID) of the process.AhPins the current thread.A`Pins the handle.AjPins a value on the stack.CdRemove the last element in the vector and return it.CjRemoves the last character from the string and returns it.AkPops a task from the queue.AnRemove the last key-value pairAeRemove the last valueCgRemoves the last element from the stack and returns it.ClRemove an item from the end of the vector and return it, \xe2\x80\xa6DdIf there are newer <code>Metadata</code> revisions, advances the \xe2\x80\xa6CkRemoves the last punctuated pair from this sequence, or \xe2\x80\xa6CnRemove and return the last element of the vec, if there is \xe2\x80\xa600BmRemove the last segment of this URL\xe2\x80\x99s path.Ak&lt; channel position array0B`Gets the position of the stream.BeReturns <code>self ^ exponent</code>.0CjRaises the <code>Ratio</code> to the power of an exponent.DiRaises self to the power of <code>exp</code>, using exponentiation by \xe2\x80\xa6ClRaises a value to the power of exp, using exponentiation \xe2\x80\xa6ChReturns <code>self</code> to the power <code>rhs</code>.Bj&lt; pointer to data (note: can be 64-bit)0EfTransfer bytes into <code>self</code> from <code>src</code> and advance the cursor \xe2\x80\xa60DhCreates a new <code>Builder</code> initialized with a PUT method and \xe2\x80\xa6CdPushes the errors back onto the OpenSSL error stack.CcPushes the error back onto the OpenSSL error stack.CoConvenience method to make a <code>PUT</code> request to a URL.CaUnsafe functions that mirror the API of the C \xe2\x80\xa6CnProduces a new iterator with the elements of this iterator \xe2\x80\xa6AoSets the <code>rid</code> flag.AlThe Rust MessagePack LibraryBhAccess a fast, pre-initialized generatorBdPRNG utilities for tower middleware.BfRivest\xe2\x80\x93Shamir\xe2\x80\x93Adleman cryptosystemBgReturns a copy of the internal RSA key.BhRun all tasks in the pool to completion.0CiExecutes the main loop for this thread. This will not \xe2\x80\xa60Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsBbMIDI sequencer I/O and enumerationAnSequence-related functionalityBoGeneric data structure serialization framework.0BoSerialize a Rust data structure into JSON data.BaSerialization support for the \xe2\x80\xa6GkCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is \xe2\x80\xa6000FnCall <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> \xe2\x80\xa60BgSet buffer content and cursor position.ChChanges the range of this window to the range specified.0CmSets the specified keyword, returning the old value if it \xe2\x80\xa6CbA hash set implemented using <code>IndexMap</code>CeSets the contents of this cell to <code>value</code>.00000ChSets the ASN.1 value to the value of a signed 32-bit \xe2\x80\xa6777777777777CkInserts or removes the specified flags depending on the \xe2\x80\xa6DiSets the value of the <code>OnceCell</code> to the given value if the \xe2\x80\xa6DhSets the value of the <code>SetOnce</code> to the given value if the \xe2\x80\xa6C`Replace the future currently stored in this box.CkSets the inner <code>T</code>, dropping the previous value.ClUpdates the value in place as a primitive type, possibly \xe2\x80\xa600000000000AiThe SHA family of hashes.BkComputes the sine of a number (in radians).0CkPlaces the result of <code>a\xc2\xb2</code> in <code>self</code>.A`SSL/TLS support.DhReturns a shared reference to the <code>Ssl</code> object associated \xe2\x80\xa60DaReturns a shared reference to the <code>Ssl</code> of the stream.Bminternal std exports for no_std compatibilityBcParallel iterator types for stringsCeThe intersection of a source flags value with the \xe2\x80\xa6000CjReturns the instant in time one <code>duration</code> ago.DmReturns the difference of <code>self</code> and <code>rhs</code> as a new \xe2\x80\xa6CbReturns the set difference, cloned into a new set.333333333333CdReturns the set difference of the two sets of flags.BbSums up the items in the iterator.Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsBaMatches a tab character \xe2\x80\x98\\t\xe2\x80\x99.0h&lt; tag0BjReturns the tag stored within the pointer.0DkGenerates a parser taking <code>count</code> bits and comparing them to \xe2\x80\xa60AeRecognizes a pattern.AdRecognizes a pattern1ChRetrieves the calculated authentication tag from the \xe2\x80\xa6BnComputes the tangent of a number (in radians).0AbTCP utility types.BiSupport all versions of the TLS protocol.AkTLS configuration and typesDaGets the value of the <code>IP_TOS</code> option for this socket.0DaGets the value of the <code>IP_TTL</code> option for this socket.00000Blwill parse a number in text form to a number0BfRecognizes an unsigned 2 bytes integer00BeRecognizes an unsigned 3 byte integer00CfAn unsigned 24-bit integer sample with an internal \xe2\x80\xa6DkGet random <code>u32</code> from the system\xe2\x80\x99s preferred random number \xe2\x80\xa644BeRecognizes an unsigned 4 byte integer00DkGet random <code>u64</code> from the system\xe2\x80\x99s preferred random number \xe2\x80\xa666BeRecognizes an unsigned 8 byte integer00BbGets UID (user ID) of the process.ChTraits that data provider implementations can use to \xe2\x80\xa6CmTraits over unaligned little-endian data (ULE, pronounced \xe2\x80\xa6BjReturns a reference to the associated URI.AmSet the URI for this request.AcThe request\xe2\x80\x99s URIBkURI component of request and response linesCdGet the <code>http::Uri</code> for the target proxy.DeReturns the contents of this <code>GeneralName</code> if it is an \xe2\x80\xa6AoSets the <code>uri</code> flag.DkA builder method for the <code>http::response::Builder</code> type that \xe2\x80\xa6BmReturns a possible URL related to this error.lGet the url.CmGet the final <code>Url</code> of this <code>Response</code>.B`Get the next URL to redirect to.Cmrust-url is an implementation of the URL Standard for the \xe2\x80\xa6A`&lt; Event value0CoParallel iterator types for vectors (<code>Vec&lt;T&gt;</code>)Aastructure versionCmThe <code>vlc</code> module provides support for decoding \xe2\x80\xa6BlAn adapter for zipping two streams together.000DdCombines two <code>GenericSequence</code> instances and iterates \xe2\x80\xa6EeIterates over tuples <code>(A, B)</code>, where the items <code>A</code> are from \xe2\x80\xa6CjIterates tuples, repeating the element with items from \xe2\x80\xa6A`The ASN1 format.BcAlias to make it easy to add 1: \xe2\x80\xa6Afsnd_seq_addr_t wrapperCmTrait implemented by types which have a span <code>Id</code>.CmAutomatically detect whether a heuristic prefilter should \xe2\x80\xa6Aa<code>auto</code>AbThe Big5 encoding.CjEnable session caching on both the client and server side.BnThere is at least one right-to-left character.AiThe underlying bits type.CiA bits type that can be used as storage for a flags type.Ek<code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> \xe2\x80\xa6CgTrait representing a streaming body of a Request or \xe2\x80\xa60AmAn asynchronous request body.CjThe input contained a boolean value that was not expected.0AjRepresents a JSON boolean.0CkA boolean literal: <code>true</code> or <code>false</code>.AkAdd for fields and genericsBjA byte literal: <code>b&#39;f&#39;</code>.DaA nul-terminated C-string literal: <code>c&quot;foo&quot;</code>.CfA function call expression: <code>invoke(a, b)</code>.CeAn ALSA sound card, uniquely identified by its index.DdThe type of the \xe2\x80\x9ccart\xe2\x80\x9d that is used by <code>DataPayload</code>.BkA cast expression: <code>foo as f64</code>.BdRound up (towards positive infinity)B`Parser implementation for char()CnThe input contained a <code>char</code> that was not expected.0BnA character literal: <code>&#39;a&#39;</code>.ChA gRPC response was classified as a failure with the \xe2\x80\xa6AnParser implementation for condCnFuture wrapper to ensure cooperative scheduling created by \xe2\x80\xa6BlFuture for the <code>copy()</code> function.0BiType wrapped by <code>CoreWrapper</code>.BfCRC8 of interleaved PCM audio samples.BbAlias to make it easy to cube. \xe2\x80\xa6CgContains the date and time at which the message was \xe2\x80\xa60BmType corresponding to <code>SOCK_DCCP</code>.BlProtocol corresponding to <code>DCCP</code>.CmPunctuation characters explicitly called out as dashes in \xe2\x80\xa6CkA buffer of dynamically typed audio data, passed to raw \xe2\x80\xa6BhValues yielded by the <code>Body</code>.0CiRegular baked data: a trie for lookups and a slice of \xe2\x80\xa6ClThe error was caused by input data that was semantically \xe2\x80\xa6CfThe storage of a struct, enum or union data structure.CfAlias for the associated type of <code>Sub</code>: \xe2\x80\xa6BbThe output of the completed future00000CdWhen the inner source is empty this decrements a \xe2\x80\xa6C`Identifier for a specific version of a resource.0AfWraps snd_mixer_elem_tAgsnd_hctl_elem_t wrapperBgThe element type of the trailing slice.Aa<code>else</code>CkProduces a value. This is the default behaviour for parsersCbThe input contained an enum that was not expected.0DeAn enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.Aa<code>enum</code>o<code>==</code>BoExpression, with or without trailing semicolon.AbA Rust expression.dfontCkContains an Internet email address for a human user who \xe2\x80\xa60AnParser implementation for failCkRepresents the \xe2\x80\x9cfast\xe2\x80\x9d type code point tries for the \xe2\x80\xa6BhFuture for the <code>feed</code> method.00DiMarker type corresponding to the <code>X509_LOOKUP_file</code> lookup \xe2\x80\xa6BdA complete file of Rust source code.BnA reference to an open file on the filesystem.BmParser implementation for the fill combinatorBjTypes which may be filled with random dataCcA defined flags value that may be named or unnamed.ChA flag or indicator. A flag carries no data, but the \xe2\x80\xa6BhFuture for the <code>fold</code> method.00BmParser implementation for the fold combinatorDd<code>Fold</code> is an iterator that applies a function over an \xe2\x80\xa6ClSyntax tree traversal to transform the nodes of an owned \xe2\x80\xa6BgA body that consists of a single chunk.CiThe data could not be sent on the channel because the \xe2\x80\xa6BhFuture for the <code>fuse</code> method.BhStream for the <code>fuse</code> method.1010Bc410 Gone [RFC9110, Section 15.5.11]0CiA glob import in a <code>use</code> item: <code>*</code>.DkThe empty variant after the result of a <code>MaybeDone</code> has been \xe2\x80\xa6DiThe empty variant after the result of a <code>TryMaybeDone</code> has \xe2\x80\xa61010DcAlias for the associated type of <code>IsGreaterOrEqual</code>: \xe2\x80\xa6Absnd_hctl_t wrapperdHEAD0Fd<code>enabled!</code> callsite. <code>Subscriber</code>s can assume this <code>Kind</code> means \xe2\x80\xa6ClSpecifies the domain name of the server and (optionally) \xe2\x80\xa60dhtmlAdHTTP protocol schemeB`snd_device_name_get_hint wrapperDhA <code>Hint</code> provides additional information and context when \xe2\x80\xa6CoThe platform\xe2\x80\x99s dynamically dispatched <code>Host</code> type.AhThe host name of an URL.AiA stream over plain text.CiA 128-bit signed integer stored in big-endian byte order.CiA 128-bit signed integer stored in little-endian byte \xe2\x80\xa6CjA 128-bit signed integer stored in network-endian byte \xe2\x80\xa6CiA 128-bit signed integer stored in native-endian byte \xe2\x80\xa6CfA 128-bit signed integer stored in a given byte order.DcThe single <code>DataMarkerInfo</code> associated with this marker.AeThe \xe2\x80\x9cinfo\xe2\x80\x9d level.000DeDomain for IPv4 communication, corresponding to <code>AF_INET</code>.DfDomain for IPv6 communication, corresponding to <code>AF_INET6</code>.AlNo available work was found.0DdDeprecated. Use the crate-top-level functions or <code>Uts46</code>.CfAn impl block providing trait or associated items: \xe2\x80\xa6Aa<code>impl</code>Ccsnd_pcm_info_t wrapper - PCM generic info containerAjsnd_rawmidi_info_t wrapper8BoCorresponds to the <code>Info</code> log level.AjThe type for initializers.BkImplementation of <code>Parser::into</code>DiAn IPv4 address. <code>Url::host_str</code> returns the serialization \xe2\x80\xa6DiAn IPv6 address. <code>Url::host_str</code> returns the serialization \xe2\x80\xa6AmValues yielded by the stream.0000DdThe current input type is a sequence of that <code>Item</code> type.0BlResults element type, e.g. <code>u32</code>.CiThe type of item that the parallel iterator will produce.CmThe type of item that the parallel iterator will produce. \xe2\x80\xa6CmThe type of item that will be produced; this is typically \xe2\x80\xa6CnThe type of item that this parallel iterator produces. For \xe2\x80\xa622CkThe type of item that will be produced by this producer \xe2\x80\xa6BkThe type of item returned by this producer.BcThe type of the array\xe2\x80\x99s elements.AcAn item definition.CiThings that can appear directly inside of a module or \xe2\x80\xa6BcThe type of the items in the thing.AkThe type of decoded frames.BbIterator for all elements of mixerBbIterate over existing sound cards.BlIterator over Rawmidi devices and subdevicesAnAn iterator over flags values.BjStream for the <code>iter</code> function.CiImmutable iterator over all streams in the unordered set.ClImmutable iterator over all the futures in the unordered \xe2\x80\xa6210210DgAn iterator over the entries of a <code>HashMap</code> in arbitrary \xe2\x80\xa6CeAn iterator over the items of a <code>HashSet</code>.DiAn iterator over the entries of a <code>HashTable</code> in arbitrary \xe2\x80\xa6Bf<code>HeaderMap</code> entry iterator.CiAn iterator over the entries of an <code>IndexMap</code>.CgAn iterator over the items of an <code>IndexSet</code>.Am<code>Events</code> iterator.CcAn iterator over the input type, producing the itemBhAn iterator over the stack\xe2\x80\x99s contents.BlAn iterator over a <code>Distribution</code>C`The parallel iterator type that will be created.ChThe type of the parallel iterator that will be returned.BjThe type of iterator that will be created.CiThe draining parallel iterator type that will be created.0DiA parallel iterator over a reference to the <code>Some</code> variant \xe2\x80\xa6CiParallel iterator over an immutable reference to a resultCaParallel iterator over immutable items in a sliceCkParallel iterator over an immutable reference to a hash mapCkParallel iterator over an immutable reference to a hash setCmParallel iterator over an immutable reference to a binary \xe2\x80\xa6CmParallel iterator over an immutable reference to a B-Tree \xe2\x80\xa60CmParallel iterator over an immutable reference to a linked \xe2\x80\xa6CfParallel iterator over an immutable reference to a \xe2\x80\xa6CgParallel iterator over a range, implemented for all \xe2\x80\xa6CnParallel iterator over an inclusive range, implemented for \xe2\x80\xa6Bf<code>HeaderMap</code> entry iterator.BoAn iterator over a serde_json::Map\xe2\x80\x99s entries.CkAn iterator over the values stored in the <code>Slab</code>CmAn iterator over borrowed values of type <code>&amp;T</code>.BaAn iterator over a set of fields.0djpegdjsonBjFuture for the <code>join</code> function.00EdJoins two values implementing <code>AsyncRead</code> and <code>AsyncWrite</code> \xe2\x80\xa6ClSerialize using JavaScript Object Notation (JSON), using \xe2\x80\xa6DkAn iterator over the keys of a <code>HashMap</code> in arbitrary order. \xe2\x80\xa6BmAn iterator over <code>HeaderMap</code> keys.CfAn iterator over the keys of an <code>IndexMap</code>.1BlAn iterator over a serde_json::Map\xe2\x80\x99s keys.CbIndicates whether the callsite is a span or event.AhLow frequency channel 1.AhLow frequency channel 2.CnAllows the server to point an interested client to another \xe2\x80\xa60AlReturn <code>ln(2.0)</code>.ChLazy block buffer kind, which guarantees that buffer \xe2\x80\xa6BjFuture for the <code>lazy</code> function.00CaA value which is initialized on the first access.0D`Alias for the associated type of <code>IsLessOrEqual</code>: \xe2\x80\xa6CdTruncate left side, i.e. <code>&amp;out[..n]</code>.AoA value of type <code>L</code>.AhFirst branch of the type0AfPoll the first stream.010AnA value of type <code>L</code>3BmThe value set is the submitted value, or lessDiA potential output from <code>Cmp</code>, this is the type equivalent \xe2\x80\xa6eList.BoA structured list within an attribute, like \xe2\x80\xa6CmAlias for the associated type of <code>Logarithm2</code>: \xe2\x80\xa6BnConditionless loop: <code>loop { ... }</code>.Aa<code>loop</code>dmpegBmParser implementation for the many combinatorCa(<code>M</code>) The union of all mark categoriesBiCharacters used in mathematical notation.BoContent of a compile-time structured attribute.AlA parsed mime or media type.CdParser mode: influences how combinators build valuesAfSingle centre channel.Aa<code>move</code>n<code>x</code>AiThe name of this property0BnType-level signed integers with negative sign.CbDisables verification of the peer\xe2\x80\x99s certificate.BkA domain name to resolve into IP addresses.BaA section of a <code>Mime</code>.BjA name that must be resolved to addresses.DhAn identifier imported by a <code>use</code> item: <code>HashMap</code>.BhFuture for the <code>next</code> method.00iNo value.00000000000BiRepresents Bidi_Paired_Bracket_Type=None.BkNever used a prefilter in substring search.22222222222Ah<code>\xe2\x88\x85 ... \xe2\x88\x85</code>AhDo not impose any limit.dNoneDbError returned if the inner <code>Service</code> has not been set.6AmRepresents a JSON null value.0oAn OSCP status.CaA stream which emits single element and then EOF.00CfIterator adaptor for the <code>once()</code> function.CmA low-level synchronization primitive for one-time global \xe2\x80\xa6BiRepresents Bidi_Paired_Bracket_Type=Open.AoRepresents an EVP_Open context.o<code>|=</code>o<code>||</code>CbVerifies that the peer\xe2\x80\x99s certificate is trusted.BnType-level signed integers with positive sign.AhA public or private key.dPOST0CkA pair of byte offsets into a needle to use as a predicate.DdA single syntax tree node of type <code>T</code> followed by its \xe2\x80\xa6Da<code>Part</code>s are used as annotations for formatted strings.DjA path like <code>std::mem::replace</code> possibly containing generic \xe2\x80\xa6DkA path prefix of imports in a <code>use</code> item: <code>std::...</code>.DhA path pattern like <code>Color::Red</code>, optionally qualified with aDjA path like <code>std::slice::Iter</code>, optionally qualified with a \xe2\x80\xa6CbA path at which a named item is exported (e.g. \xe2\x80\xa6CbFuture for the <code>Peekable::peek</code> method.00AmParsr implementation for peekCfTypes that can be parsed by looking at just one token.CnSent via <code>PingPong</code> to send a PING frame to a peer.n<code>+</code>ClIndicates whether a value is available or if the current \xe2\x80\xa6CdPolls for readiness events on all registered values.E`Received via <code>PingPong</code> when a peer acknowledges a <code>Ping</code>.AlThe port component of a URI.Aa<code>priv</code>CfAlias for the associated type of <code>Mul</code>: \xe2\x80\xa6CfAlias for the associated type of <code>Div</code>: \xe2\x80\xa6BhFuture for the <code>read</code> method.0AjReads bytes from a source.ClTrait used by the deserializer for iterating over input. \xe2\x80\xa6CnA trait for real number types that do not necessarily have \xe2\x80\xa6CbSequence to be concatenated with <code>self</code>CnThe dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.BlProtocol corresponding to <code>SCTP</code>.CaA close notify message has been sent to the peer.Aj<code>Span</code> callsiteeSSLv3BkThe STD3 deny list. This corresponds to \xe2\x80\xa6FiA <strong>type operator</strong> that ensures that <code>Rhs</code> is the same as <code>Self</code>, \xe2\x80\xa6BhStream for the <code>scan</code> method.00AoRepresents an EVP_Seal context.AbA Sec1 private keyBkSeed type, which is restricted to types \xe2\x80\xa60BhFuture for the <code>seek</code> method.0n<code>;</code>BhFuture for the <code>send</code> method.00;CdAn object which calculates a SHA1 hash of some data.DcA <code>Sign</code> is a <code>BigInt</code>\xe2\x80\x99s composing element.AfA sinusoidal waveform.DgA <code>Sink</code> is a value into which other values can be sent, \xe2\x80\xa600BlWriter for the <code>sink()</code> function.101BgHandle to a device that outputs sounds.CcAn async writer which will move data into the void.BhContains the required data size in bytesBmA 2 dimensional (width and height) size type.BlThe conversion source was of incorrect size.0000BhStream for the <code>skip</code> method.00Eg<code>Skip</code> is an iterator that skips over the first <code>n</code> elements. \xe2\x80\xa6DkSkips missed ticks and tick on the next multiple of <code>period</code> \xe2\x80\xa6BmPre-allocated storage for a uniform data typeBbSome value of type <code>T</code>.00000000000000000000000CgA region of source code, along with macro expansion \xe2\x80\xa6CnA handle representing a span, with the capability to enter \xe2\x80\xa60AgA trait for spec types.CmAlias for the associated type of <code>SquareRoot</code>: \xe2\x80\xa6n<code>*</code>BkA statement, usually ending in a semicolon.CmDo not follow the redirection, and return the redirection \xe2\x80\xa6BhAlias to make it easy to subtract 1: \xe2\x80\xa6De<code>TArr</code> is a type that acts as an array of types. It is \xe2\x80\xa6dtextgTLSv1.0DbA <code>Buf</code> adapter which limits the bytes read from an \xe2\x80\xa6BhStream for the <code>take</code> method.BhReader for the <code>take</code> method.101AnParser implementation for takeE`<code>Take</code> is an iterator that iterates over the first <code>n</code> \xe2\x80\xa63BhFuture for the <code>then</code> method.BhStream for the <code>then</code> method.1010Db<code>Service</code> returned by the <code>then</code> combinator.CbSeek to a <code>Time</code> in regular time units.Df<code>Time</code> represents a duration of time in seconds, or the \xe2\x80\xa6CeSpecification of communication semantics on a socket.CmA generic type parameter: <code>T: Into&lt;String&gt;</code>.CdA type predicate in a <code>where</code> clause: \xe2\x80\xa6AaA type alias: \xe2\x80\xa6DgA foreign type in an <code>extern</code> block: <code>type void</code>.CdAn associated type within the definition of a trait.BhAn associated type within an impl block.CaA type ascription pattern: <code>foo: f64</code>.A`A type argument.AnA particular type is returned.C`The possible types that a Rust value could have.Aa<code>type</code>CkA 128-bit unsigned integer stored in big-endian byte order.CkA 128-bit unsigned integer stored in little-endian byte \xe2\x80\xa6ClA 128-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CkA 128-bit unsigned integer stored in native-endian byte \xe2\x80\xa6ChA 128-bit unsigned integer stored in a given byte order.Do<code>UInt</code> is defined recursively, where <code>B</code> is the least \xe2\x80\xa6CjDomain for Unix socket communication, corresponding to \xe2\x80\xa6DaA unary operator: <code>*</code>, <code>!</code>, <code>-</code>.DaThe input contained a unit <code>()</code> that was not expected.0CfUnit struct or unit variant such as <code>None</code>.CgDetermines how to match future requests with cached \xe2\x80\xa60C`Combine single vectors into a multi-lane vector.ClA vector composed of two elements, which may be words or \xe2\x80\xa6CmA vector composed of four elements, which may be words or \xe2\x80\xa6AeThe \xe2\x80\x9cwarn\xe2\x80\x9d level.000dwoff1BoCorresponds to the <code>Warn</code> log level.CaA pattern that matches any value: <code>_</code>.BfSink for the <code>with</code> method.00BlAn <code>X509</code> public key certificate.CkA Cow-like borrowed object \xe2\x80\x9cyoked\xe2\x80\x9d to its backing data.DbA constant <code>BigInt</code> with value 0, useful for static \xe2\x80\xa6DcA constant <code>BigUint</code> with value 0, useful for static \xe2\x80\xa6BbA constant <code>Ratio</code> 0/1.DcThe additive identity element of <code>Self</code>, <code>0</code>.AcRepresentation of 0oThe value zero.00000000000CkDefines an additive identity element for <code>Self</code>.CnAn source that produces samples with value zero (silence). \xe2\x80\xa6EkA <strong>marker trait</strong> to designate that a type is zero. Only <code>B0</code>, \xe2\x80\xa6BmBuild an ioctl number for an read-only ioctl.BnBuild an ioctl number for an write-only ioctl.CjComputes the arccosine of a number. Return value is in \xe2\x80\xa60CkReturns an Addr containing this PortInfo\xe2\x80\x99s client and \xe2\x80\xa6Aobase address of channel samples0l&lt; addressAdReturns the address.00B`Thin but safe wrappers for ALSA.ChA module with low-level architecture dependent routines.AaThe message body.AfSet <code>args</code>.ChComputes the arcsine of a number. Return value is in \xe2\x80\xa60BbDefines the format of certificatesCkComputes the arctangent of a number. Return value is in \xe2\x80\xa60DkAlgorithms for the <code>x86_64</code> target using 256-bit vectors via \xe2\x80\xa6n&lt; skew base0AaReturns the base.ClBinds a <code>DataMarker</code> to a provider supporting it.ChConvenience method to bind a new TCP listener to the \xe2\x80\xa6BlCreates a UDP socket from the given address.CgCreates a Unix datagram socket bound to the given path.DiCreates a new <code>UnixListener</code> bound to the specified socket \xe2\x80\xa6A`Produces a valueBkBinds this socket to the specified address.DfCreates a new <code>TcpListener</code>, which will be bound to the \xe2\x80\xa6BfBinds the socket to the given address.CmThis function will create a new UDP socket and attempt to \xe2\x80\xa6DdCreates a new <code>UnixDatagram</code> bound to the specified path.DdCreates a new <code>UnixListener</code> bound to the specified path.3AnGet the underlying bits value.0000AaBit level parsersCiConverts a byte-level input to a bit-level input, for \xe2\x80\xa6DhDetermines the fewest bits necessary to express the <code>BigInt</code>,DkDetermines the fewest bits necessary to express the <code>BigUint</code>\xe2\x80\xa64444AlReturns the size of the key.BoReturns the number of bits used for the cipher.66666666CdReturns the raw value of the flags currently stored.AoUtilities for bit manipulation.C`Returns a reference to the associated HTTP body.Dh\xe2\x80\x9cConsumes\xe2\x80\x9d this builder, using the provided <code>body</code> to \xe2\x80\xa610BkStreaming bodies for Requests and ResponsesmGet the body.AeSet the request body.BbParses one specific bit as a bool.0CjThe character\xe2\x80\x99s byte value between this node and its \xe2\x80\xa6CkProcess the request and return the response asynchronously.CjCalls the given parser function to parse a syntax tree \xe2\x80\xa611AfSound card enumerationBgCast <code>A</code> into <code>B</code>0DeConvert between two <code>DynamicDataMarker</code> types that are \xe2\x80\xa60BhCast from one machine scalar to another.EhCasts a <code>ZeroSlice&lt;T&gt;</code> to a compatible <code>ZeroSlice&lt;P&gt;</code>.EdCasts a <code>ZeroVec&lt;T&gt;</code> to a compatible <code>ZeroVec&lt;P&gt;</code>.DjReturns the truncated principal cube root of <code>self</code> \xe2\x80\x93 see \xe2\x80\xa60CkReturns the truncated principal cube root of an integer \xe2\x80\x9300B`Take the cubic root of a number.0AmRounds towards plus infinity.CkReturns the smallest integer greater than or equal to a \xe2\x80\xa600A`The certificate.CmGets an immutable reference to all the written samples in \xe2\x80\xa6AiRecognizes one character.00CfCreates a new <code>PKey</code> containing a CMAC key.BlThe response code, such as <code>200</code>.nnom error codeCbReturns the raw OpenSSL error code for this error.BiCalls the parser if the condition is met.CeInterface for processing OpenSSL configuration files.C`Take the complex conjugate of <code>self</code>.BbLower-level client connection API.CmPure functions and traits for converting between i8, i16, \xe2\x80\xa6DdThe <code>conv</code> module provides methods to convert samples \xe2\x80\xa6BnUtilities for improved cooperative scheduling.ChCreates a future which copies all the bytes from one \xe2\x80\xa60CeThis corresponds to <code>EVP_CIPHER_CTX_copy</code>.CmCopies the contents of one file to another. This function \xe2\x80\xa6CnAsynchronously copies the entire contents of a reader into \xe2\x80\xa6DmThe <em>core</em> part of the RNG, implementing the <code>generate</code> \xe2\x80\xa60AkHyperbolic cosine function.0oHow to use cpalBaRecognizes the string \xe2\x80\x9c\\r\\n\xe2\x80\x9d.0BeGets a list of all <code>Cue</code>s.Ab&lt; event data\xe2\x80\xa60DjGets the <code>data</code> pointer used to create this <code>Waker</code>.AhGet the next data frame.CgCreate a DATA frame with the provided <code>Buf</code>.0BiThe data the <code>Packet</code> containsBmReturns additional data describing the error.CiReturns the field value of an <code>X509NameEntry</code>.DlThe data of the <code>Visual</code>, encoded as per <code>media_type</code>.A`The vendor data.AbThe packet buffer.AbDifference in daysAh&lt; destination address000BaFind difference between two timesCjReturns a reference to the first exponent used for CRT \xe2\x80\xa6CkReturns a reference to the second exponent used for CRT \xe2\x80\xa6CaDrops the object pointed to by the given pointer.CfDrops the future represented by the given fat pointer.00000BjSupport all versions of the DTLS protocol.CjRuns the passed-in function once for each bound field, \xe2\x80\xa60BdRecords that a span has been exited.00ClExits this span, returning the underlying <code>Span</code>.111AnReturns <code>2^(self)</code>.0AlA parser which always fails.CiA future that completes after the given item has been \xe2\x80\xa600BgThe source file containing the message.AeSet <code>file</code>CmReturns the name of the source file which encountered the \xe2\x80\xa6ClLookup method loads all the certificates or CRLs present \xe2\x80\xa6CkReturns the name of the source code file where the span \xe2\x80\xa60DjFill <code>dest</code> with random bytes from the system\xe2\x80\x99s preferred \xe2\x80\xa6CjRuns the embedded parser repeatedly, filling the given \xe2\x80\xa6CmFill any type implementing <code>Fill</code> with random dataAjFill self with random data11CmClears, and then renders the entire buffer using the fill \xe2\x80\xa6CdFill the vector until its capacity has been reached.0CiReturns a reference to an entry in the table with the \xe2\x80\xa6CjReturn the first occurrence of the needle in the given \xe2\x80\xa6CmReturn the first occurrence of one of the needle bytes in \xe2\x80\xa60EgReturn the first occurrence of the <code>needle</code> in the <code>haystack</code> \xe2\x80\xa6CfReturn the first occurrence of the needle given to \xe2\x80\xa6DdReturns the first occurrence of <code>needle</code> in the given \xe2\x80\xa6333CaExecute a search using SSE2 vectors and routines.444CaExecute a search using AVX2 vectors and routines.CjReturns the index of the first occurrence of the given \xe2\x80\xa6ClReturns the index of the first occurrence of this needle \xe2\x80\xa6DaReturn <code>true</code> if this is backed by a FIPS-approved \xe2\x80\xa6CeReaders for FLAC comment and picture metadata blocks.DkConvert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.0CkExecute an accumulating asynchronous computation over a \xe2\x80\xa6000CjFolds (or reduces) a sequence of data into a single value.CnApplies a parser and accumulates the results using a given \xe2\x80\xa6CkParallel fold is similar to sequential fold except that theClSyntax tree traversal to transform the nodes of an owned \xe2\x80\xa6CjRuns the passed-in function once for each bound field, \xe2\x80\xa60CmForks a parse stream so that parsing tokens out of either \xe2\x80\xa6AaSend a form body.AoReturns the argument unchanged.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CnCreate a new <code>ArrayString</code> from a <code>str</code>.11111111111111111111111111111BhConvert self into <code>BytesMut</code>.22222222222222222222222222222222222222222222222222222222222222ClReturns a new atomic pointer pointing to <code>owned</code>.3CjReturns a new atomic pointer pointing to <code>raw</code>.CjReturns a new atomic pointer pointing to <code>ptr</code>.CgReturns a new owned pointer pointing to <code>b</code>.66CcReturns a new pointer pointing to <code>raw</code>.77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777CjUse a <code>Wake</code>-able type as a <code>Waker</code>.EeMoves the value into a <code>Poll::Ready</code> to make a <code>Poll&lt;T&gt;</code>.9CmUse a <code>Wake</code>-able type as a <code>RawWaker</code>.:0:::::::::::::::::::CjConverts <code>TryReserveError</code> to an error with \xe2\x80\xa6DgConverts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.CnConverts an <code>ErrorKind</code> into an <code>Error</code>.===============================================================================================================================================================================================================================================================================CkConverts mutable slice to a mutable generic array referenceCmConverts slice to a generic array reference with inferred \xe2\x80\xahExamplesAoReturns the argument unchanged.0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ClConverts a <code>RawFd</code> to a <code>TcpListener</code>.1CjConverts a <code>RawFd</code> to a <code>TcpStream</code>.2CjConverts a <code>RawFd</code> to a <code>UdpSocket</code>.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333CmCreates a number from another value that can be converted \xe2\x80\xajConvert 32-bit floating point number to <code>Value::Number</code>, or \xe2\x80\xa6CdConvert <code>()</code> to <code>Value::Null</code>.6DjConvert 64-bit floating point number to <code>Value::Number</code>, or \xe2\x80\xa6BlConvert boolean to <code>Value::Bool</code>.CjConvert <code>String</code> to <code>Value::String</code>.CcConvert string slice to <code>Value::String</code>.CkConvert copy-on-write string to <code>Value::String</code>.CjConvert <code>Number</code> to <code>Value::Number</code>.CmConvert map (with string keys) to <code>Value::Object</code>.ChConvert a <code>Vec</code> to <code>Value::Array</code>.BmConvert a slice to <code>Value::Array</code>.??????????????????????????????????????????????CkThe caller must ensure <code>S</code> is actually a socket.AoReturns the argument unchanged.00000000000000000000000000000000000000000000000000000000000CgInstantiate a noise sample from a random 32-bit source.1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111C`The output has a length equal to the full array.2222DdCalls <code>AsRef::as_mut</code> then uses the full slice as the \xe2\x80\xa6BjUses the full slice as the initial length.44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444CeInfallibly discards the alignment error from this \xe2\x80\xa6555EcInfallibly extracts the <code>SizeError</code> from this <code>CastError</code> \xe2\x80\xa6666666666666666666666666666666666666666DiHint whether this <code>Consumer</code> would like to stop processing \xe2\x80\xa6DgHint whether this <code>Folder</code> would like to stop processing \xe2\x80\xa6AjThe function which failed.DhFuse a future such that <code>poll</code> will never again be called \xe2\x80\xa60DfFuse a stream such that <code>poll_next</code> will never again be \xe2\x80\xa601100FcGets a cursor for <code>key0</code>. If <code>None</code>, then <code>key0</code> is not in the \xe2\x80\xa60DgGets the value for a key1 from this cursor, or <code>None</code> if \xe2\x80\xa6CjMark the state as idle, if the Taker currently is wanting.BfRe-allocate to set the capacity to \xe2\x80\xa6BjMessage digest (hash) computation support.EbComputes the hash of the <code>data</code> with the non-XOF hasher <code>t</code>.BoHCtl API - for mixer control and jack detectionDiCreates a new <code>Builder</code> initialized with a HEAD method and \xe2\x80\xa6D`Convenience method to make a <code>HEAD</code> request to a URL.BkSets that this <code>Kind</code> is a hint.CgCreates a new <code>PKey</code> containing an HMAC key.BlGet the host of this <code>Authority</code>.BfGet the host of this <code>Uri</code>.CiSets the reg-name or IP address (i.e. host) without port.BcReturns the <code>host</code> part.CnReturn the parsed representation of the host for this URL. \xe2\x80\xa60BnA general purpose library of common HTTP typesBkSet the target proxy for HTTP destinations.BiProxy all HTTP traffic to the passed URL.Blwill parse a number in text form to a number0BcRecognizes a signed 16 byte integer00i16-bit ID0i32-bit ID0CnThis Rust crate implements IDNA per the WHATWG URL Standard\xe2\x80\xa6AjCalculate the inverse FFT.BaLogs a message at the info level.BfConstructs an event at the info level.AoResets both encoder and decoderBiInitializes a with the given initializer.DeAllocates <code>value</code> on the heap and returns a new atomic \xe2\x80\xa6DdAllocates <code>value</code> on the heap and returns a new owned \xe2\x80\xa6ChInitializes this context with the given certificate, \xe2\x80\xa6AjAn instantiation function.BaCalls <code>U::from(self)</codejautomatically converts the parser\xe2\x80\x99s output and error \xe2\x80\xa6011111111111111111Ciautomatically converts the child parser\xe2\x80\x99s result to \xe2\x80\xahConverts a <code>TinyVec</code> into a <code>Vec</code>.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333CgReturns a reference to the coefficient used for CRT \xe2\x80\xa6CeReturns the longest slice of the matches the pattern.00BhRead samples from the kernel ringbuffer.0BfYield a set of contained flags values.000CfYield the bits of a source flags value in a set of \xe2\x80\xa611BfBorrow the inner value as an iterator.EfConverts an <code>Iterator</code> into a <code>Stream</code> which is always ready \xe2\x80\xa60CmReturns an iterator that allows inspecting each future in \xe2\x80\xa6CmReturns an iterator that allows inspecting each stream in \xe2\x80\xa6201Cb<code>GenericArray</code> iterator implementation.CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6CmAn iterator visiting all elements in arbitrary order. The \xe2\x80\xa60BiAn iterator visiting all key-value pairs.CkReturns an iterator visiting all values associated with \xe2\x80\xa60DiReturns a new <code>Char16TrieIterator</code> backed by borrowed data \xe2\x80\xa6C`Produce an ordered iterator over key-value pairsBcGets an iterator over the elements.CjReturn an iterator over the key-value pairs of the map \xe2\x80\xa6CnReturn an iterator over the key-value pairs of the map, in \xe2\x80\xa6CdReturn an iterator over the values of the set slice.CkReturn an iterator over the values of the set, in their \xe2\x80\xa65BmIterate through all supported logging levels.BoIterate through all supported filtering levels.CjReturns an iterator over all occurrences of the needle \xe2\x80\xa6CjReturns an iterator over all occurrences of one of the \xe2\x80\xa60111111CgReturns an iterator over the <code>Event</code> values.BfYield a set of contained flags values.00000000000DcIterate over the indices as a sequence of <code>usize</code> valuesCaTraits for writing parallel programs using an \xe2\x80\xa6BfBorrow the inner value as an iterator.BiAn iterator visiting all key-value pairs.CkReturns an iterator visiting all values associated with \xe2\x80\xa60BmGets an iterator over the entries of the map.BaReturn an iterator over the slab.BjGets an iterator over individual channels.DfGet an iterator over the borrowed <code>Field</code> items in this \xe2\x80\xa6CjReturns an iterator over borrowed syntax tree nodes of \xe2\x80\xa6DoReturns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.0C`Produce an ordered iterator over key-value pairsBoObtain an iterator over this slice\xe2\x80\x99s elementsBcGets an iterator over the elements.2Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsCfWaits for the thread to finish and returns its result.ClPolls multiple futures simultaneously, returning a tuple \xe2\x80\xa6CmJoins the result of two futures, waiting for them both to \xe2\x80\xa60110DhCreate a new span encompassing <code>self</code> and <code>other</code>.CcReturns a span covering the entire delimited group.DfTakes two closures and <em>potentially</em> runs them in parallel. \xe2\x80\xa6EeExecute <code>oper_a</code> and <code>oper_b</code> in the thread pool and return \xe2\x80\xa610ChParse a string as an URL, with this URL as the base URL.DnWaits on multiple concurrent branches, returning when <strong>all</strong> \xe2\x80\xa6EhJoin two values implementing <code>AsyncRead</code> and <code>AsyncWrite</code> into \xe2\x80\xa62CoConstruct a <code>serde_json::Value</code> from a JSON literal.CfReturns the key0 corresponding to the cursor position.CiAn iterator visiting all keys in arbitrary order. The \xe2\x80\xa6AnAn iterator visiting all keys.CbReturn an iterator over the keys of the map slice.CkReturn an iterator over the keys of the map, in their orderBeProduce an ordered iterator over keys3BjGets an iterator over the keys of the map.D`Returns the corresponding <code>ErrorKind</code> for this error.AlBroad category of the error.DbThe <code>LanguageIdentifier</code> specified with this locale \xe2\x80\xa6AlGet the last key-value pair.AkGet the last key-value pairAcGet the last value.AbGet the last valueDiGet the highest-rank key/value pair from the <code>LiteMap</code>, if \xe2\x80\xa6BjBorrows the last element in this sequence.CjGets the last element. Returns <code>None</code> if empty.CkCreates a new future that allows delayed execution of a \xe2\x80\xa600ElConvert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.0Chlibc - Raw FFI bindings to platforms\xe2\x80\x99 system librariesB`The line containing the message.AeSet <code>line</code>CmReturns the line in the source file which encountered the \xe2\x80\xa6Bcline that contains the syntax errorCfOne-based line number at which the error was detected.CmReturns the line number in the source code file where the \xe2\x80\xa60CdLoads a <code>Shared</code> from the atomic pointer.BcLoads a value from the atomic cell.CbQuery the provider for data, returning the result.ClLoads a new provider into the specified library context, \xe2\x80\xa6BkFutures-powered synchronization primitives.B`Acquire the lock asynchronously.10CmLocks this mutex, causing the current task to yield until \xe2\x80\xa6BkReturns the base 2 logarithm of the number.0ClMarks async function to be executed by selected runtime. \xe2\x80\xa6CgMarks async function to be executed by the selected \xe2\x80\xa6DfSearches the registry for a <code>Decoder</code> that supports the \xe2\x80\xa6DfConstruct a <code>Codebook</code> using the given codewords, their \xe2\x80\xa6EbThis method can be used to cast away <code>Self&lt;&#39;a&gt;</code>\xe2\x80\x99s lifetime.CmRepeats the embedded parser and collects the results in a \xe2\x80\xa6ClThis module contains additional utility types and traits \xe2\x80\xa6DbGets the value for the <code>SO_MARK</code> option on this socket.BdMath utilities for audio processing.DhThe <code>mdct</code> module implements the Modified Discrete Cosine \xe2\x80\xa6DeThe <code>meta</code> module defines basic metadata elements, and \xe2\x80\xa6CmFacility for interpreting structured content inside of an \xe2\x80\xa6dMimeCjWrapper around snd_pcm_mmap_begin and snd_pcm_mmap_commit.AlMock random number generatorBmSets the mode to create new directories with.ChSets the mode bits that a new file will be created with.CnA multi-producer, single-consumer queue for sending values \xe2\x80\xa600Ag&lt; Device name string0AjGet the name of this flag.BfThe human-readable name of the device.BaSets the name for the new thread.BbReturns the name of this encoding.AmThe name portion of a header.DgThe <code>friendlyName</code> used for the certificate and private key.AoReturns the name of the cipher.BiGets the string that was specified by \xe2\x80\xa606AmReturns the name of the span.CdReturns a string representing the name of the field.01DiCreates a <code>TokenBuffer</code> containing all the tokens from the \xe2\x80\xa6Aa&lt; Next pointer0CjCreates a future that resolves to the next item in the \xe2\x80\xa6000ClTraverses the trie from the current state for this input \xe2\x80\xa6BlReturns the next sample in the audio stream.BaProvides the next limited sample.DjSearches the provided <code>MediaSourceStream</code> for metadata or a \xe2\x80\xa6CoCreate a <code>Policy</code> that does not follow any redirect.DcReturns a new <code>Dispatch</code> that discards events and spans.CkConstructs a new span that is <em>completely disabled</em>.1DdConstructs a new <code>Current</code> that indicates the current \xe2\x80\xa6DhReturns a reference to a <code>Waker</code> that does nothing when used.i&lt; note0Ae&lt; note informationBbReturns a new null atomic pointer.AkReturns a new null pointer.BeCreates a stream of a single element.00ChCreates a parallel iterator that produces an element \xe2\x80\xa6ClOpen does not support async mode (it\xe2\x80\x99s not very Rustic \xe2\x80\xa60AdOpens the sequencer.CmAttempts to create a reader that reads from the specified \xe2\x80\xa6CkReturns a span for the opening punctuation of the group \xe2\x80\xa6BjAttempts to open a file in read-only mode.EbOpens a file at <code>path</code> with the options specified by <code>self</code>.CiReturns the pair of offsets (into the needle) used to \xe2\x80\xa600BlCreate an unnamed pair of connected sockets.BmCreates an unnamed pair of connected sockets.CkGets an object from the first parser, then gets another \xe2\x80\xa6CiCreates a pair of sockets which are connected to each \xe2\x80\xa622CeBlocks the current thread until the token is made \xe2\x80\xa6AjReturns the path componentBfGet the path of this <code>Uri</code>.CaThe request path, such as <code>/about-us</code>.nSets the path.AcValidates IRI path.ClReturn the path for this URL, as a percent-encoded ASCII \xe2\x80\xa6CjReturns the path that identifies the interpretation of \xe2\x80\xa6CgReturns the path that begins this structured meta item.FdThe <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>CeReturns the full path to the file that this entry \xe2\x80\xa64EdReturns <code>Some</code> containing a reference to this <code>Shared</code>\xe2\x80\x99s \xe2\x80\xa6CmProduces a future which retrieves a reference to the next \xe2\x80\xa610CjReceives data on the socket from the remote address to \xe2\x80\xa6CkReceives data from the socket, without removing it from \xe2\x80\xa6CfTries to apply its parser without consuming the input.CiReceives data on the socket from the remote adress to \xe2\x80\xa6CmReturns whether the next token in the parse stream is one \xe2\x80\xa6ClLooks at the next token in the parse stream to determine \xe2\x80\xa605CiReceives a single datagram from the connected address \xe2\x80\xa666BmConvert the wrapper type into the inner type.0CiSend a PING frame and wait for the peer to send the pong.jUnix pipe.A`Unix pipe types.BbCreates a new anonymous Unix pipe.AnPublic/private key processing.AmThe signature\xe2\x80\x99s public-key.A`The private key.oRun the stream.BbResumes playback of a paused sink.BcResumes playback of a paused sound.DkA convenience function. Plays a sound once. Returns a <code>Sink</code> \xe2\x80\xa6mTiny poll ffiBbWrapper around the libc poll call.CmA macro which returns the result of polling a future once \xe2\x80\xa60CdAttempts to resolve the future to a final value, \xe2\x80\xa60011AiWait for readiness eventsBgPoll the future stored inside this box.0l&lt; Port id0CaGet the port part of this <code>Authority</code>.BkGet the port part of this <code>Uri</code>.nSets the port.DkReturns the <code>port</code> part, excluding the following <code>:</code>.BlReturn the port number for this URL, if any.0DiCreates a new <code>Builder</code> initialized with a POST method and \xe2\x80\xa6D`Convenience method to make a <code>POST</code> request to a URL.BiRaise a number to a floating point power.BfRaise a number to a real number power.BcRaise a number to an integer power.00ChThis function isn\xe2\x80\x99t used in this crate, but may be \xe2\x80\xa6CcPush <code>element</code> to the end of the vector.BmAdds the given char to the end of the string.AmPushes a task into the queue.0AmPush a future into the queue.AkPush a future into the set.AkPush a stream into the set.201BiPushes a value onto the top of the stack.AmAppend an item to the vector.CiPushes a new <code>Metadata</code> revision onto the log.CnAppends a syntax tree node onto the end of this punctuated \xe2\x80\xa6BiPlace an element onto the end of the vec.00CiAppend the given segment at the end of this URL\xe2\x80\x99s path.BkInsert an element at the end of this vectorCmThread-safe, non-blocking, \xe2\x80\x9cfirst one wins\xe2\x80\x9d flavor of \xe2\x80\xa6BnUtilities for secure random number generation.DkGenerates a cryptographically strong pseudo-random <code>BigNum</code>, \xe2\x80\xa6BfUtilities for random number generationClReturn the heuristic frequency rank of the given byte. A \xe2\x80\xa6BgThe signal sampling rate in hertz (Hz).n&lt; raw8 dataDhImplementations of <code>io::Read</code> to transparently decode base64.BeDecode input from the wrapped reader.CnLocks with shared read access, blocking the current thread \xe2\x80\xa6DhRead output into the <code>buffer</code>. Can be called an unlimited \xe2\x80\xa6DhTries to read some bytes directly into the given <code>buf</code> in \xe2\x80\xa60C`Reads the audio sample from the WAVE data chunk.DgLocks this <code>RwLock</code> with shared read access, causing the \xe2\x80\xa6ChReads the entire contents of a file into a bytes vector.B`Sets the option for read access.ChPulls some bytes from this source into the specified \xe2\x80\xa60AoReads a copy of <code>T</code>.CgReceives data from the socket previously bound with \xe2\x80\xa6AnReceives data from the socket.CjReceives data on the socket from the remote address to \xe2\x80\xa6BjReceives the next value for this receiver.00CmReceives a single datagram message on the socket from the \xe2\x80\xa63AkReturn the remaining input.AlA RIFF INFO metadata reader.BeRandom number generators and adaptersDjCombinator similar to <code>StreamExt::fold</code> that holds internal \xe2\x80\xa6000AfDifference in seconds.CkCreates a future which will seek an IO object, and then \xe2\x80\xa60BgSeek to the given time within the file.ClSeek, as precisely as possible depending on the mode, to \xe2\x80\xa622CiA future that completes after the given item has been \xe2\x80\xa60C`Completes this oneshot with a successful result.01ClSends data on the socket to the address previously bound \xe2\x80\xa6C`Sends data on the socket to the socket\xe2\x80\x99s peer.CjConstructs the Request and sends it to the target URL, \xe2\x80\xa6BmSends data on the socket to a connected peer.BoSends a value, waiting until there is capacity.BjSends a value using the reserved capacity.0DkAttempts to send a message on this <code>UnboundedSender</code> without \xe2\x80\xa6DiAttempts to send a value to all active <code>Receiver</code> handles, \xe2\x80\xa6CjAttempts to send a value on this channel, returning it \xe2\x80\xa6CkSends a new value via the channel, notifying all receivers.CkSends data on the socket to the remote address that the \xe2\x80\xa69BdComputes the SHA1 hash of some data.CeAn implementation of the SHA-2 cryptographic hash \xe2\x80\xa6DcReturns the sign of the <code>BigInt</code> as a <code>Sign</code>.AcMessage signatures.E`Given a signing cert <code>signcert</code>, private key <code>pkey</code>, a \xe2\x80\xa6DjComputes a digital signature of the hash value <code>data</code> using \xe2\x80\xa6CoCreates and returns a PKCS#7 <code>signedData</code> structure.BhSigns the contents of <code>data</code>.ClWrites the signature into the provided buffer, returning \xe2\x80\xa6BiSigns the certificate with a private key.BeSign the request using a private key.AiHyperbolic sine function.0AcAsynchronous sinks.0CkCreates an instance of a writer which will successfully \xe2\x80\xa601CeCreates an instance of an async writer which will \xe2\x80\xa6BlReturn size of the internal buffer in bytes.BiReturns the number of elements of the \xe2\x80\xa6CcReturns the number of elements in this set (its \xe2\x80\xa6B`The size of the digest in bytes.DiReturns the maximum size of the signature output by <code>self</code> \xe2\x80\xa6BhReturns the size of the digest in bytes.ClReturns the size of the message digest, i.e. the size of \xe2\x80\xa6CaReturns the maximum size of a signature in bytes.BiReturns the size of the modulus in bytes.A`Byte array size.BoReturns the number of items the array can hold.AhGet the size of the FFT.o&lt; queue skewDkCreates a new stream which skips <code>n</code> items of the underlying \xe2\x80\xa6000DaCreates an iterator that skips the first <code>n</code> elements.AhSkips the current sourceBnPre-allocated storage for a uniform data type.CbSort the set\xe2\x80\x99s values by their default ordering.CfReturns the end of the initial substring where the \xe2\x80\xa6DfReturns the span of this tree, delegating to the <code>span</code> \xe2\x80\xa6CmReturns the span for the delimiters of this token stream, \xe2\x80\xa6C`Returns the span for this punctuation character.BlReturns the span of this <code>Ident</code>.BkReturns the span encompassing this literal.CeSpan associated with this <code>IdentFragment</code>.0BaThe source location of the error.3EhReturns the <code>Span</code> of the current token, or <code>Span::call_site()</code>\xe2\x80\xa6DkReturns the <code>Span</code> of the next token in the parse stream, or \xe2\x80\xa6DfReturns a <code>Span</code> covering the complete contents of this \xe2\x80\xa6AfConstructs a new span.D`Borrows the <code>Span</code> that this type is instrumented by.CjSpans represent periods of time in which a program was \xe2\x80\xa6CiSpans represent periods of time in the execution of a \xe2\x80\xa6BhReturns information about the WAVE file.CfReturns information about the WAVE file being written.BlThe normal information about the audio data.jIRI specs.BmGets the signal specification for the buffer.0AnBacks off in a lock-free loop.DhReturns the truncated principal square root of <code>self</code> \xe2\x80\x93 \xe2\x80\xa60CmReturns the truncated principal square root of an integer \xe2\x80\xa600BaTake the square root of a number.0DkAlgorithms for the <code>x86_64</code> target using 128-bit vectors via \xe2\x80\xa6Ahsamples distance in bits0CgSpeculatively parses tokens from this parse stream, \xe2\x80\xa6CmSteps the cursor one character into the trie based on the \xe2\x80\xa6BhSteps the cursor one byte into the trie.Ce\\brief PCM has been stopped \\param scope scope handle0CkReturns an action meaning reqwest should not follow the \xe2\x80\xa6BeStops the sink by emptying the queue.0A`Stops the sound.EgStores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, \xe2\x80\xa6DiStores <code>val</code> into the atomic cell and returns the previous \xe2\x80\xa6CbHigh level interface to certain symmetric ciphers.BbThread synchronization primitives.CgThread-safe, blocking version of <code>OnceCell</code>.CfSynchronization primitives for use in asynchronous \xe2\x80\xa6AjSynchronization primitivesDbGets an immutable slice to the <code>Tag</code>s in this revision.CaAny tags associated with the <code>Visual</code>.DaA list of <code>Tag</code>s associated with the <code>Cue</code>.DfA list of <code>Tag</code>s associated with the <code>CuePoint</code>.CkReturns the ArrayVec, replacing the original with a new \xe2\x80\xa6EdReturns the last <code>Waker</code> passed to <code>register</code>, so that the \xe2\x80\xa6DgCreates an adaptor which will read at most <code>limit</code> bytes \xe2\x80\xa60BoTakes the value of the atomic cell, leaving \xe2\x80\xa6DjCreates a new stream of at most <code>n</code> items of the underlying \xe2\x80\xa603DkCreates an AsyncRead adapter which will read at most <code>limit</code> \xe2\x80\xa60411CmRemoves and returns the value in the set, if any, that is \xe2\x80\xa640DhReturns a slice of <code>index</code> bytes. panics if index &gt; lengthCaGenerates a parser taking <code>count</code> bits0CgReturns an input slice containing the first N input \xe2\x80\xa600DkTakes the value out of this <code>OnceCell</code>, moving it back to an \xe2\x80\xa60DbCreates an iterator that yields the first <code>n</code> elements.DhTakes only <code>n</code> repeats of the element, similar to the generalEeTakes the value out of the <code>Value</code>, leaving a <code>Null</code> in its \xe2\x80\xa6CjTakes ownership of the current value, leaving the cell \xe2\x80\xa6DkReturns a new <code>ReadBuf</code> comprised of the unfilled section up \xe2\x80\xa6DhCreates an adaptor which reads at most <code>limit</code> bytes from it.0AlHyperbolic tangent function.0CmCreate a new type-level array. Only usable on Rust 1.13.0 \xe2\x80\xa6AmTools for working with tasks.AbTask notification.1AkAsynchronous green-threads.ClMarks async function to be executed by runtime, suitable \xe2\x80\xa60AkGet the full response text.CnChain on a computation for when a future finished, passing \xe2\x80\xa60CfComputes from this stream\xe2\x80\x99s items new items of a \xe2\x80\xa601100CnComposes an asynchronous function <em>after</em> this service.0CeApply an asynchronous function after the service, \xe2\x80\xa6n&lt; tick-time0ClCompletes when the next instant in the interval has been \xe2\x80\xa6n&lt; real-timeAb&lt; schedule time1i&lt; time1n&lt; timestampCmReturns the time at which the session was established, in \xe2\x80\xa6BaThe <code>Time</code> to seek to.AlUtilities for tracking time.AgTrie for decomposition.CgTrie for the supplementary non-recursive decompositionsDkNote: The <code>ScriptWithExt</code> values in this array will assume a \xe2\x80\xa6CcTrims samples from the start and end of the buffer.EeReturns the <code>Type</code> of this socket by checking the <code>SO_TYPE</code> \xe2\x80\xa6Blwill parse a number in text form to a number0BfRecognizes an unsigned 16 byte integer00DfCompare the absolute values of <code>self</code> and <code>oth</code>.AmType-level unsigned integers.AeUnix only extensions.EcConstructs a <code>SockAddr</code> with the family <code>AF_UNIX</code> and the \xe2\x80\xa6AlUnix specific network types.CnAsynchronous IO structures specific to Unix-like operating \xe2\x80\xa6DgThe <code>util</code> module provides a repository of commonly used \xe2\x80\xa6CmHelper utilities for implementing <code>FormatReader</code>s.AnUtilities for combining layersCjVarious utility types and functions that are generally \xe2\x80\xa6CmThis module contains additional utility types for working \xe2\x80\xa6CmDrops this reference and waits until all other references \xe2\x80\xa6ClGets the reference to the underlying value, blocking the \xe2\x80\xa6AmWaits until the value is set.ChDoes not resolve until all tasks have rendezvoused here.CfBlocks the current thread until initialization has \xe2\x80\xa6EgCalls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.CgIndicates that the associated task is ready to make \xe2\x80\xa61CjWakes up the task associated with this <code>Waker</code>.1112DfWake up the <code>Poll</code> associated with this <code>Waker</code>.ClA Futures channel-like utility to signal when a value is \xe2\x80\xa6EdReturns a <code>Future</code> that fulfills when the <code>Taker</code> has done \xe2\x80\xa6ChSignal to the <code>Giver</code> that a value is wanted.BaLogs a message at the warn level.BfConstructs an event at the warn level.CbComposes a function <em>in front of</em> the sink.00CiAccesses the current task-local and runs the provided \xe2\x80\xa6BmConvert the inner type into the wrapper type.0CoWrap a <code>HttpBody</code> in a box inside <code>Body</code>.CbThe standard defining the format of public key \xe2\x80\xa6EaThis crate provides <code>Yoke&lt;Y, C&gt;</code>, which allows one to \xe2\x80\x9cyoke\xe2\x80\xa6BnReturns the additive identity, <code>0</code>.DkReturns the additive identity element of <code>Self</code>, <code>0</code>.BhOverwrites <code>self</code> with zeros.AiThe alignment of pointer.BoLists the set of methods support by a resource.0BeThe terminating type for type arrays.eaudioDmAlias for an <code>Iterator</code> trait object over <code>SocketAddr</code>.De<em>CheckHyphens=false</em>: Do not place positional restrictions \xe2\x80\xa6EdCharacters with the <code>Alphabetic</code> or <code>Decimal_Number</code> property.FgE.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.Ac<code>&amp;=</code>AhRepresents a JSON array.0DhTypes that can be used as the backing store for a <code>SmallVec</code>.CfA slice literal expression: <code>[a, b, c, d]</code>.BmA fixed size array type: <code>[T; n]</code>.BdA trait for types that are an array.CgA trait for any type that has a 1:1 mapping with an \xe2\x80\xa6AbAssociative array.BkAn async block: <code>async { ... }</code>.Ab<code>async</code>BlAn await expression: <code>fut.await</code>.Ab<code>await</code>ebasicjBaked data0DgA binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.BhThe <code>|</code> operator (bitwise or)B`Horizontal whitespace charactersCaBlock on which <code>BlockBuffer</code> operates.CoBlock on which <code>BlockSizeUser</code> implementors operate.0BfA blocked scope: <code>{ ... }</code>.BjA braced block containing Rust statements.Ad<code>{ ... }</code>Ao<code>{</code>\xe2\x80\xa6<code>}</code>DiA <code>break</code>, with an optional label to break and an optional \xe2\x80\xa6Ab<code>break</code>Bk<code>Display</code>-able IRI build result.BjTicks as fast as possible until caught up.CiA cheaply cloneable and sliceable chunk of contiguous \xe2\x80\xa600BlParallel iterator over the bytes of a stringDaA wrapper around <code>&amp;[u8]</code> to read more efficiently.EkThe input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not \xe2\x80\xa60FhThe <code>crypt(3)</code> alphabet (with <code>.</code> and <code>/</code> as the <em>first</em> two \xe2\x80\xa6oThe raw C type.000n<code>^</code>BoUppercase, lowercase, and titlecase characters.BkA <code>Chain</code> sequences two buffers.BiStream for the <code>chain</code> method.BiReader for the <code>chain</code> method.101Ek<code>Chain</code> is an iterator that joins <code>b</code> after <code>a</code> in one \xe2\x80\xa62CaParallel iterator over the characters of a stringDe<em>CheckHyphens=true</em>: Prohibit hyphens in the first, third, \xe2\x80\xa6C`Applies the parser, but do not a produce a valueCmGenerate a sine wave with an instantaneous frequency that \xe2\x80\xa6Agsnd_pcm_chmap_t wrapperBiFuture for the <code>close</code> method.0000BjRepresents Bidi_Paired_Bracket_Type=Close.n<code>:</code>n<code>,</code>BjA const block: <code>const { ... }</code>.ClA const generic parameter: <code>const LENGTH: usize</code>.CeA constant item: <code>const MAX: u16 = 65535</code>.ChAn associated constant within the definition of a trait.BlAn associated constant within an impl block.4BnA const expression. Must be inside of a block.Ab<code>const</code>BiFuture for the <code>count</code> method.00BnParser implementation for the count combinatorAb<code>crate</code>BgCRC16 of interleaved PCM audio samples.BgCRC32 of interleaved PCM audio samples.Di<code>Crc32</code> implements the CRC-32 checksum algorithm using the \xe2\x80\xa6BiStream for the <code>cycle</code> method.00AfThe \xe2\x80\x9cdebug\xe2\x80\x9d level.000BnType corresponding to <code>SOCK_DGRAM</code>.hDTLSv1.02C`Corresponds to the <code>Debug</code> log level.CjA source that delays the given source by a certain amount.EdTick at multiples of <code>period</code> from when <code>tick</code> was called, \xe2\x80\xa6BmThe <code>*</code> operator for dereferencingBnA draining iterator for <code>ArrayVec</code>.BiSink for the <code>drain</code> function.00DeA draining iterator over the entries of a <code>HashMap</code> in \xe2\x80\xa6CmA draining iterator over the items of a <code>HashSet</code>.CoA draining iterator over the items of a <code>HashTable</code>.BlA drain iterator for <code>HeaderMap</code>.DaA draining iterator over the entries of an <code>IndexMap</code>.CoA draining iterator over the items of an <code>IndexSet</code>.CjDraining parallel iterator that moves a range out of a \xe2\x80\xa6ClDraining parallel iterator that moves out of a hash map, \xe2\x80\xa6ClDraining parallel iterator that moves out of a hash set, \xe2\x80\xa6CkDraining parallel iterator that moves out of a binary heap,3CdDraining parallel iterator that moves a range of \xe2\x80\xa67BiA draining iterator for <code>Slab</code>DgAn iterator that removes the items from a <code>SmallVec</code> and \xe2\x80\xa6BbThis value is obsolete and unused.0AlA value with all bits unset.BkNo ASCII deny list. This corresponds to \xe2\x80\xa6nAn empty storemAn empty set.BiReturns the empty <code>Ready</code> set.AiInterest in error events.CjReturns a <code>Ready</code> representing error readiness.AfThe \xe2\x80\x9cerror\xe2\x80\x9d level.000DkA part that should annotate error segments in <code>TryWriteable</code> \xe2\x80\xa6Ak<code>Event</code> callsiteCiEager block buffer kind, which guarantees that buffer \xe2\x80\xa6CcPublic and optional private key on the given curve.AjCharacters that are emoji.BlThe queue was empty at the time of stealing.BkStream for the <code>empty</code> function.BmReader for the <code>empty()</code> function.101AlA body that is always empty.AbError: empty sliceCgIterator adaptor for the <code>empty()</code> function.A`An empty source.EmThis <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have \xe2\x80\xa6CjThe channel is currently empty. There are still active \xe2\x80\xa6CfThe send half of the channel has not yet sent a value.Ee<code>Empty</code> ignores any data written via <code>AsyncWrite</code>, and will \xe2\x80\xa6oAn empty field.0AoRepresents an executor context.0ClA view into a single entry in a map, which may either be \xe2\x80\xa6ClA view into a single entry in a set, which may either be \xe2\x80\xa6CnA view into a single entry in a table, which may either be \xe2\x80\xa6DkA view into a single location in a <code>HeaderMap</code>, which may be \xe2\x80\xa6DiEntry for an existing key-value pair in an <code>IndexMap</code> or a \xe2\x80\xa6DgAn entry in a <code>LiteMap</code>, which may be either occupied or \xe2\x80\xa625CnA type whose byte sequence equals the byte sequence of its \xe2\x80\xa6DiA potential output from <code>Cmp</code>, this is the type equivalent \xe2\x80\xa6jALSA errorAcBlock buffer error.BkThe type of failures yielded by this futureChThe type of value produced by the sink when an error \xe2\x80\xa61111010FdThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>\xe2\x80\xa6221212CeA small and <code>no_std</code> compatible error typeBcRepresents HTTP/2 operation errors.EcThe error type for operations on <code>WavReader</code> and <code>WavWriter</code>.BjA generic \xe2\x80\x9cerror\xe2\x80\x9d for HTTP connectionsCeThe error type this <code>Body</code> might generate.AdAn error in parsing.1CoThe error type that can occur within this <code>Service</code>.AoErrors produced by the service.CgRepresents errors that can occur handling HTTP streams.mClient errorsBjTemplate construction and expansion error.BgIRI normalization and resolution error.BeResource identifier validation error.AfThe \xe2\x80\x9cerror\xe2\x80\x9d level.C`Corresponds to the <code>Error</code> log level.BnAn error returned from the TLS implementation.BeThe parser had an error (recoverable)AaComparison failedClDefines the Mode for the output type. Emit will generate \xe2\x80\xa6AiError type of this parserCldefault error type, only contains the error\xe2\x80\x99s location \xe2\x80\xa6AoAn error reported from OpenSSL.mAn SSL error.BnThe type returned in the event of a RNG error.EbError type returned from <code>Uniform::new</code> and <code>new_inclusive</code>.AeInvalid weight errors2DaThe Errors that may occur when processing a <code>Request</code>.CbAn alias to the \xe2\x80\x9cdefault\xe2\x80\x9d error handling type.0CjEnum representing errors that can occur while decoding \xe2\x80\xa6CkThis type represents all possible errors that can occur \xe2\x80\xa6ClErrors that may arise when parsing the contents of a PEM \xe2\x80\xa6ClThe error type that can be returned if some error occurs \xe2\x80\xa6CkThe error type when some error occurs during serialization.111110DfMust match the <code>Error</code> type of our <code>Serializer</code>.000000EcThe <code>Error</code> trait allows <code>Deserialize</code> implementations to \xe2\x80\xa6ClA minimal representation of all possible errors that can \xe2\x80\xa6DgTrait used by <code>Serialize</code> implementations to generically \xe2\x80\xa6545555543333333210771BiErrors returned during serializing to \xe2\x80\xa6De<code>Error</code> provides an enumeration of all possible errors \xe2\x80\xa6CkError returned when a Syn parser cannot parse the input \xe2\x80\xa60BoErrors encountered by the timer implementation.BnAn error returned from the TLS implementation.C`The type of unrecoverable frame decoding errors.AlThe type of encoding errors.AoErrors produced by the service.CgA gRPC response was classified as an error with the \xe2\x80\xa6CbA response was classified as an error with the \xe2\x80\xa602Agsnd_seq_event_t wrapperAbA readiness event.Dg<code>Event</code>s represent single points in time where something \xe2\x80\xa6000AiThe set of defined flags.Bc302 Found [RFC9110, Section 15.4.3]0DhAccess of a named struct field (<code>obj.k</code>) or unnamed tuple \xe2\x80\xa6BdA field of a struct or enum variant.EcAn opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>\xe2\x80\x99\xe2\x80\xa600Ab<code>final</code>BgFirst part of the resulting split arrayCdA set of defined flags using a bits type as storage.ClWhen multiplying two samples of a signal together, it is \xe2\x80\xa60DfWave files with the <code>WAVE_FORMAT_IEEE_FLOAT</code> format tag \xe2\x80\xa6BhGeneric trait for floating point numbersClA floating point number, f32 or f64, that can be written \xe2\x80\xa6EfThe input contained a floating point <code>f32</code> or <code>f64</code> that was \xe2\x80\xa60AhA floating point number.DfA floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.BfRound down (towards negative infinity)BiFuture for the <code>flush</code> method.0000DeAn argument in a function signature: the <code>n: usize</code> in \xe2\x80\xa6CeA frame of any kind related to an HTTP stream (body).D`Future that resolves to the next frame from a <code>Body</code>.1BiAn entity that gives a value when wanted.AeInvisible characters.C`A token stream surrounded by bracket delimiters.AiA delimited token stream.CdAn expression contained within invisible delimiters.DmA braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.BmA type contained within invisible delimiters.AdNone-delimited groupBmA guard that keeps the current thread pinned.AgHTTP protocol over TLS.AlA stream protected with TLS.eimagenAn identifier.ChA word of Rust code, which may be a keyword or legal \xe2\x80\xa6CjA type parameter or const generic parameter in precise \xe2\x80\xa6BhA pattern that binds a new variable: \xe2\x80\xa62C`The Inverse Modified Discrete Transform (IMDCT).C`A slot in a type\xe2\x80\x99s \xe2\x80\x9cextra data\xe2\x80\x9d structure.DgA type that can be used to index into a <code>serde_json::Value</code>.AcAn interface index.CoA square bracketed indexing expression: <code>vector[2]</code>.BkThe index of an unnamed tuple struct field.DgThe inferred value of a const generic argument, denoted <code>_</code>.CnIndication that a type should be inferred by the compiler: \xe2\x80\xa6kInner type.CkStruct for receiving input events from a sequencer. The \xe2\x80\xa6BlParser input types must implement this traitEaProvides a <code>saturating_add()</code> method for <code>Ipv4Addr</code> and \xe2\x80\xa6BkAn IP network address, either IPv4 or IPv6.EaProvides a <code>saturating_sub()</code> method for <code>Ipv4Addr</code> and \xe2\x80\xa6CiA word-sized signed integer stored in a given byte order.BkFuture for the <code>join3</code> function.00BkFuture for the <code>join4</code> function.00BkFuture for the <code>join5</code> function.00H`E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.AmReturn <code>ln(10.0)</code>.EaA lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.DhDecorates a <code>Service</code>, transforming either the request or \xe2\x80\xa600CnAn enum representing the available verbosity levels of the \xe2\x80\xa6CdDescribes the level of verbosity of a span or event.00DkA <code>BufMut</code> adapter which limits the amount of bytes that can \xe2\x80\xa6CjA source filter that applies audio limiting to prevent \xe2\x80\xa6Dg<code>Limit</code> defines an upper-bound on how much of a resource \xe2\x80\xa6BiStream for the <code>lines</code> method.0BhParallel iterator over lines in a stringBnReads lines from an <code>AsyncBufRead</code>.AfA local (let) binding.DhA local <code>let</code> binding: <code>let x: u64 = s.parse()?;</code>.ChThe desired timestamp can be found at, or after, the \xe2\x80\xa6emodelBmProtocol corresponding to <code>MPTCP</code>.DgA macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.D`A macro invocation, which includes <code>macro_rules!</code> \xe2\x80\xa6BjA macro invocation within an extern block.CdA macro invocation within the definition of a trait.BhA macro invocation within an impl block.AlA macro in pattern position.BiA macro invocation in statement position.AmA macro in the type position.CoA macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.Ab<code>macro</code>BnParser implementation for the many0 combinatorBnParser implementation for the many1 combinatorBjFuture for the <code>map_ok</code> method.BjStream for the <code>map_ok</code> method.1010EjA <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.Ab<code>match</code>BbA reference to an <code>Md</code>.n<code>-</code>Aawraps snd_mixer_tAgThe input of the mixer.AfA futures-aware mutex.0BmAn asynchronous <code>Mutex</code>-like type.CeDo not select a protocol, but continue the handshake.CfNamed fields of a struct or struct variant such as \xe2\x80\xa6BgA named field like <code>self.x</code>.A`Use nanoseconds.AoA type with no possible values.0AoThe never type: <code>!</code>.CmAlias for the associated type of <code>IsNotEqual</code>: \xe2\x80\xa6CjAn interface over the operating-system\xe2\x80\x99s random data \xe2\x80\xa60CiA custom error that does not fall under any other I/O \xe2\x80\xa6AjAll other extension types.CmA list of <code>Other Use Extensions</code> as defined in \xe2\x80\xa6Da(<code>C</code>) The union of all control code, reserved, and \xe2\x80\xa6BkAny other error probably in a custom SourceChA message stating what uncategorized thing the input \xe2\x80\xa60BbCodec defined, up-to 16-byte code.AoAn owned heap-allocated object.ePATCH0eplainE`An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.CaA parenthesized expression: <code>(a + b)</code>.BnA parenthesized pattern: <code>(A | B)</code>.CbA parenthesized type equivalent to the inner type.Ao<code>(</code>\xe2\x80\xa6<code>)</code>BhThe return type of <code>parse()</code>.CjParsing interface implemented by all types that can be \xe2\x80\xa6C`Component parts of an HTTP <code>Response</code>AkThe various parts of a URI.BoComponent parts of an HTTP <code>Request</code>CaDeconstructed parts of a <code>Connection</code>.CiThe deconstructed parts of an <code>Upgraded</code> type.CaA pattern that matches any one of a set of cases.AbAn RSA private keyAcA PKCS#7 structure.AdA PKCS#8 private keyn<code>#</code>CiPrintable characters (visible characters and whitespace).Eh<code>Probe</code> scans a <code>MediaSourceStream</code> for metadata and container \xe2\x80\xa6DcConfiguration of a proxy that a <code>Client</code> should pass \xe2\x80\xa6EfA single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).FmA <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.DeThe explicit Self type in a qualified path: the <code>T</code> in \xe2\x80\xa6BdAn escaped quote <code>&quot;</code>CkIndicates the part of a document that the server should \xe2\x80\xa60BeReturn from the handshake with an \xe2\x80\xa6ClThe desired timestamp can be found within the range. The \xe2\x80\xa6GaA range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.BdA range pattern: <code>1..=2</code>.BiRepresents the ratio between two numbers.BkFuture for the <code>ready</code> function.BmRepresents that a value is immediately ready.11CbDescribes the readiness state of an I/O resources.CkA future that yields a mutable reference to the service \xe2\x80\xa6CcThe response was able to be classified immediately.AaResettable types.00BhThe steal operation needs to be retried.CfConfigure retrying requests of \xe2\x80\x9cfailed\xe2\x80\x9d responses.CfA borrowed string of an absolute IRI possibly with \xe2\x80\xa6CeTruncate right side, i.e. <code>&amp;out[m..]</code>.AoA value of type <code>R</code>.AiSecond branch of the type0AgPoll the second stream.010AnA value of type <code>R</code>3CkProvides methods to compute an integer\xe2\x80\x99s square root, \xe2\x80\xa6C`Rounding mode (used in some mixer related calls)AmA scope for spawning threads.CkRepresents a fork-join scope which can be used to spawn \xe2\x80\xa60AhWraps an Elem as a SelemAf<code>&lt;&lt;=</code>Af<code>&gt;&gt;=</code>n<code>/</code>BjA future returned by a <code>Timer</code>.DcFuture returned by <code>sleep</code> and <code>sleep_until</code>.DkA dynamically-sized slice of key-value pairs in an <code>IndexMap</code>\xe2\x80\xa6D`A dynamically-sized slice of values in an <code>IndexSet</code>.DkA dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>\xe2\x80\xa6CaA dynamically sized slice type: <code>[T]</code>.ClRepresents the \xe2\x80\x9csmall\xe2\x80\x9d type code point tries for the \xe2\x80\xa6DcThe <code>Spawn</code> trait allows for pushing futures onto an \xe2\x80\xa600CbFilter that modifies each sample by a given value.DkDefines a <code>GenericSequence</code> that can be split into two parts \xe2\x80\xa6Dh<code>Split</code> is a parallel iterator using arbitrary data and a \xe2\x80\xa6CfParallel iterator over slices separated by a predicateChParallel iterator over substrings separated by a patternBkSplitter for the <code>split</code> method.DfA <code>T</code> that has been split into two possibly-overlapping \xe2\x80\xa6AeThe SSL 3.0 protocol.0BaAn owned stack of <code>T</code>.BaTwo middlewares chained together.0C`Sets the offset to the provided number of bytes.AkSND_PCM_STATE_xxx constantsBgPossible outcomes of a steal operation.BoTrait to enable pluggable backends for LiteMap.Ab<code>super</code>eTRACE0AfThe \xe2\x80\x9ctrace\xe2\x80\x9d level.000AmAn entity that wants a value.CcFinds all occurrences of three bytes in a haystack.00n<code>~</code>BlA timer which provides timer-like functions.DoA <strong>type operator</strong> for taking a concrete integer value from a \xe2\x80\xa6BeInvalid byte where token is required.CmAssociates readiness events with <code>event::Source</code>s.CjA type-macro that expands to the name of the Rust type \xe2\x80\xa6CdMarker trait for types that represent single tokens.9C`Corresponds to the <code>Trace</code> log level.DkA <code>Track</code> is an independently coded media bitstream. A media \xe2\x80\xa6ClA trait definition: <code>pub trait Iterator { ... }</code>.Ab<code>trait</code>BfHelper trait for the tuple combinator.BnA tuple expression: <code>(a, b, c, d)</code>.BeA tuple pattern: <code>(a, b)</code>.BmA tuple type: <code>(A, B, C, String)</code>.BmConsists of the URL\xe2\x80\x99s scheme, host and portCaA function argument accepted by pattern and type.AiCredentials of a process.AcThe UTF-8 encoding.eutf-8DiThe terminating type for <code>UInt</code>; it always comes after the \xe2\x80\xa6CdA unary operation: <code>!x</code>, <code>*x</code>.DjA lazy iterator producing elements in the union of <code>HashSet</code>\xe2\x80\xa6DkA lazy iterator producing elements in the union of <code>IndexSet</code>\xe2\x80\xa6DfA union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.Ab<code>union</code>BiFuture for the <code>unzip</code> method.00DjThe desired timestamp can be found before, the <code>SeekPoint</code>. \xe2\x80\xa6CkA word-sized unsigned integer stored in a given byte order.AmAn implementation of UTS #46.evcardevideoCjDomain for low-level VSOCK interface, corresponding to \xe2\x80\xa6C`A value used in a list of <code>Keywords</code>.BnA value used in a list of <code>Fields</code>.fValue.BeThe type produced by using this seed.BcThe value produced by this visitor.10B`Represents any valid JSON value.0AiA <code>Tag</code> value.B`A field value of an erased type.00CmSyntax tree traversal to walk a shared borrow of a syntax \xe2\x80\xa6AdVisits typed values.0ewoff2DjA <code>Waker</code> is a handle for waking up a task by notifying its \xe2\x80\xa6CfWaker allows cross-thread waking of <code>Poll</code>.Ab<code>where</code>BnA while loop: <code>while expr { ... }</code>.Ab<code>while</code>BiFuture for the <code>write</code> method.0AkWrite bytes asynchronously.AgUnderlying writer type.DaResult of <code>yield_now()</code> or <code>yield_local()</code>.0BlA yield expression: <code>yield expr</code>.Ab<code>yield</code>DkAn <code>IndexedParallelIterator</code> that iterates over two parallel \xe2\x80\xa6BmBuild an ioctl number for a read-write ioctl.DgAbort the <code>Abortable</code> stream/future associated with this \xe2\x80\xa60BjAbort the task associated with the handle.0BcInverse hyperbolic cosine function.0CkReturns this certificate\xe2\x80\x99s \xe2\x80\x9calias\xe2\x80\x9d. This field is \xe2\x80\xa6ChParallel iterator types for arrays (<code>[T; N]</code>)BiA type-level array of type-level numbers.EeReturns the <code>Id</code> of the span that <code>self</code> corresponds to, or \xe2\x80\xa6BaInverse hyperbolic sine function.0FeComputes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>\xe2\x80\xa60BdInverse hyperbolic tangent function.0AeAudio packet decodingDfThe <code>audio</code> module provides primitives for working with \xe2\x80\xa6BkNumber of frames available to read / write.CiThis module contains scaffolding for baked providers, \xe2\x80\xa6AkReturns the basic response.BcRecognizes a signed 1 byte integer.00BfRecognizes an unsigned 1 byte integer.00CnCreates a cursor referencing the first token in the buffer \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.000FfReturns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.BmReturns the set union, cloned into a new set.222222222222BkReturns the union of the two sets of flags.DdReturns a new hint that is correct wherever <code>self</code> is \xe2\x80\xa6CnThe <code>BlockRngCore</code> trait and implementation helpersBeWrap the future in a Box, pinning it.0BeWrap the stream in a Box, pinning it.01100BiTurn this body into a boxed trait object.EaConvert the service into a <code>Service</code> + <code>Send</code> trait object.0DhThis wraps the inner service with the <code>Layer</code> returned by \xe2\x80\xa6DjConsumes this builder, and tries to construct a valid <code>Uri</code> \xe2\x80\xa6CnCombine the configuration of this builder with a connector \xe2\x80\xa6CmConstruct a <code>Matcher</code> using the configured values.A`URI/IRI builder.ChBuilds the proxy object that can be converted to the \xe2\x80\xa6CcInvoke the builder and return a <code>Record</code>BgReturns a <code>Metadata</code> object.BhCreates a new <code>TlsConnector</code>.BgCreates a new <code>TlsAcceptor</code>.kDeprecated.AdReturns the Rsa key.CmConsumes the builder, returning an <code>SslConnector</code>.CkConsumes the builder, returning a <code>SslAcceptor</code>.CnConsumes the builder, returning a new <code>SslContext</code>.C`Consumes the builder, returning the certificate.B`Return an <code>X509Name</code>.BaReturns the <code>X509Req</code>.BfConstructs the <code>X509Store</code>.EdReturn the <code>BasicConstraints</code> extension as an <code>X509Extension</code>.DlReturn the <code>KeyUsage</code> extension as an <code>X509Extension</code>.EdReturn the <code>ExtendedKeyUsage</code> extension as an <code>X509Extension</code>.EhReturn a <code>SubjectKeyIdentifier</code> extension as an <code>X509Extension</code>\xe2\x80\xa6D`Return a <code>AuthorityKeyIdentifier</code> extension as an \xe2\x80\xa6D`Return a <code>SubjectAlternativeName</code> extension as an \xe2\x80\xa6D`Creates a new <code>ThreadPool</code> initialized using this \xe2\x80\xa60CmDeprecated in favor of <code>ThreadPoolBuilder::build</code>.DkReturns a <code>Client</code> that uses this <code>ClientBuilder</code> \xe2\x80\xa6DfBuild a <code>Request</code>, which can be inspected, modified and \xe2\x80\xa6CjCreates a new decoder with previously configured settings.BlCreates the configured <code>Runtime</code>.BhCreates a new <code>TlsConnector</code>.BgCreates a new <code>TlsAcceptor</code>.BmProvides abstractions for working with bytes.CmThe raw slice of memory representing the underlying audio \xe2\x80\xa6BaParsers recognizing bytes streamsEhCounterpart to <code>bits</code>, <code>bytes</code> transforms its bit stream input \xe2\x80\xa6CaGet the full response body as <code>Bytes</code>.B`Implementation of the Bytes typeAjGets the underlying bytes.DkThe lower-level cause of this error, in the case of a <code>Utf8</code> \xe2\x80\xa6ChCreates an adaptor which will chain this buffer with \xe2\x80\xa60BfDigest input data in a chained manner.BaAdapter for chaining two streams.0ChCreates an adaptor which will chain this stream with \xe2\x80\xa60113DiReturns a reference to a complete valid <code>X509</code> certificate \xe2\x80\xa6CiTakes two iterators and creates a new iterator over both.DiCreates a new <code>AsyncRead</code> instance that chains this stream \xe2\x80\xa60CoConvenience function to create a new <code>Chirp</code> source.CkReturns a slice starting at the current position and of \xe2\x80\xa60BdStream a chunk of the response body.BjA value bounded by a minimum and a maximum0BeClamps a value between a min and max.CiUtilities for clamping numeric values to a defined range.BbRemove all elements in the vector.AfMake the string empty.AmUnsets all bits in the flags.0BeClears the buffer, removing all data.CnClears the buffer, removing all data. Existing capacity is \xe2\x80\xa61BdRemove any existing name/value pair.BeClears the set, removing all futures.BeClears the set, removing all streams.01CkClears the map, removing all key-value pairs. Keeps the \xe2\x80\xa6BdClears the set, removing all values.BfClears the table, removing all values.CmClear the <code>Extensions</code> of all inserted extensions.38BiEmpties the <code>Attributes</code> list.CjClears all Unicode extension keywords, leaving Unicode \xe2\x80\xa6CiClears all Unicode extension keywords and attributes, \xe2\x80\xa6BeEmpties the <code>Fields</code> list.CkClears the transform extension, effectively removing it \xe2\x80\xa6BfEmpties the <code>Private</code> list.BgEmpties the <code>Variants</code> list.CkRemove all key-value pairs in the map, while preserving \xe2\x80\xa6ChRemove all elements in the set, while preserving its \xe2\x80\xa6BcRemoves all entries in the context.CaRemove all elements from the <code>LiteMap</code>DaClearing all <code>Event</code> values from container explicitly.DkErases the memory used by this <code>BigNum</code>, resetting its value \xe2\x80\xa6CkClears the map, removing all key-value pairs. Keeps the \xe2\x80\xa6EeRemoves all currently loaded <code>Source</code>s from the <code>Sink</code>, and \xe2\x80\xa6EgRemoves all currently loaded <code>Source</code>s from the <code>SpatialSink</code> \xe2\x80\xa6CmRemoves all the sounds from the queue. Returns the number \xe2\x80\xa6BdClears the map, removing all values.AmClear the slab of all values.BdRemove all elements from the vector.CnClears all written frames from the buffer. This is a cheap \xe2\x80\xa6AkClears all written samples.0CmClears the sequence of all values and punctuation, making \xe2\x80\xa6CeTruncates the <code>ArrayVec</code> down to length 0.CeTruncates the <code>SliceVec</code> down to length 0.BbRemoves all elements from the vec.ChClears the buffer, resetting the filled region to empty.ChRemove all segments in the path, leaving the minimal \xe2\x80\xa6CaRemove all elements from the <code>ZeroMap</code>CcRemove all elements from the <code>ZeroMap2d</code>ClRemove all elements from this ZeroVec and reset it to an \xe2\x80\xa6A`Empty the vectorBcReturns a copy of the atomic value.ChCreates another reference to the same garbage collector.DjReturns a cloned <code>AbortHandle</code> that can be used to remotely \xe2\x80\xa6DhCreates a clone of the <code>CancellationToken</code> which will get \xe2\x80\xa6BdClones this <code>PollSender</code>.Bo\\brief PCM is closing \\param scope scope handle0oClose the sink.0ClCloses the receiving half of a channel, without dropping \xe2\x80\xa60CmGracefully close this receiver, preventing any subsequent \xe2\x80\xa6DhCreates a future which will entirely close this <code>AsyncWrite</code>.22103CkReturns a span for the closing punctuation of the group \xe2\x80\xa6AeCloses the semaphore.CkCloses the receiving half of a channel without dropping it.5DhPrevents the associated <code>Sender</code> handle from sending a value.2AcCloses this sender.oThe codec type.BfThe <code>CodecType</code> identifier.DkAdaptors from <code>AsyncRead</code>/<code>AsyncWrite</code> to Stream/SinkCjReturns a reference to the underlying codec wrapped by \xe2\x80\xa6iThe codecCkDrives the stream to completion, counting the number of \xe2\x80\xa6000CjCounts all occurrences of this byte in the given haystack.00DdRuns the embedded parser <code>count</code> times, gathering the \xe2\x80\xa6CeCounts the number of items in this parallel iterator.AlGets the number of channels.AkRepeats a stream endlessly.000BbLogs a message at the debug level.BgConstructs an event at the debug level.EeWraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be0BgRemoves consecutive duplicate elements.CnStores a function so that it can be executed at some point \xe2\x80\xa6BgDelays the sound by a certain duration.CmThe number of leading frames inserted by the encoder that \xe2\x80\xa6BoGets an immutable reference to the denominator.A`The denominator.Anreturns the elem of this selemAoDereferences the given pointer.AiDereferences the pointer.ChGenerating random samples from probability distributionsCiCreate a draining iterator that removes the specified \xe2\x80\xa6CkCreate a sink that will just discard all items given to it.00CgClears the map, returning all key-value pairs as an \xe2\x80\xa6CfClears the set, returning all elements in an iterator.0CeClears the map, returning all entries as an iterator.DhClears the <code>IndexMap</code> in the given index range, returning \xe2\x80\xa6DhClears the <code>IndexSet</code> in the given index range, returning \xe2\x80\xa62CmReturn a draining iterator that removes all elements from \xe2\x80\xa6CjCreates a draining iterator that removes the specified \xe2\x80\xa6000CgInternal method used to define the behavior of this \xe2\x80\xa6ChLow level Elliptic Curve Digital Signature Algorithm \xe2\x80\xa6DeReturns the contents of this <code>GeneralName</code> if it is an \xe2\x80\xa6BaSets the <code>email</code> flag.BfGet a flags value with all bits unset.CnReturns an empty (zeroed) SelemId. This id is not a usable \xe2\x80\xa6CcCreates a new PortInfo with all fields set to zero.ChCreates a new PortSubscribe with all fields set to zero.CeCreates a new QueueTempo with all fields set to zero.CfCreates a new QueueStatus with all fields set to zero.55555BlCreates a stream which contains no elements.0BkConstructs a new handle to an empty reader.01AfReturn the empty groupCcCreates an empty <code>DataMarkerAttributes</code>.999999999999CbCreates a parallel iterator that produces nothing.CeReturns true if this sink has no more sounds to play.0AnReturns an empty set of flags.ChCreates a cursor referencing a static empty TokenStream.ChCreates a value that is always at EOF for reads, and \xe2\x80\xa6ChMarks the current thread as being within the dynamic \xe2\x80\xa60ClEnters the runtime context. This allows you to construct \xe2\x80\xa6AkEnters the runtime context.CaEnters the context of this <code>LocalSet</code>.BeRecords that a span has been entered.BgRecords that a span has been can_enter.1CjEnters this span, returning a guard that will exit the \xe2\x80\xa6212CmGets the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa6CkGets the given value\xe2\x80\x99s corresponding entry in the set \xe2\x80\xa6DjReturns an <code>Entry</code> for an entry in the table with the given \xe2\x80\xa6BoThe entry in the map that was already occupied.3ClGet the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa6ClGets the entry for the given key in the map for in-place \xe2\x80\xa655A`Underlying errorBgReturns a reference to the inner error.BbLogs a message at the error level.A`Error managementBcErrors returned by OpenSSL library.CgReturns the underlying error which interrupted this \xe2\x80\xa6BfReturns the error code of the context.CeReturns an action failing the redirect with an error.CbWhen serializing or deserializing JSON goes wrong.ClReport that the attribute\xe2\x80\x99s content did not conform to \xe2\x80\xa6CjTriggers an error at the current position of the parse \xe2\x80\xa600AdChannel error types.AeBroadcast error typesBa<code>Oneshot</code> error types.AbWatch error types.AaTime error types.kError types0BgConstructs an event at the error level.BaTypes related to error reporting.A`&lt; Timer event0Ai&lt; processed event type0BdReadiness event types and utilities.CeEvents represent single points in time during the \xe2\x80\xa6C`Records that an <code>Event</code> has occurred.0BdConstructs a new <code>Event</code>.11112DoReturns the exact size of data that will be yielded <strong>if</strong> the \xe2\x80\xa60Bo<code>write_to</code> will use exactly n bytes.CeSet extra connection information to be set in the \xe2\x80\xa6CnItems which do not have a correspondence to any API in the \xe2\x80\xa6CjFetches a cipher object corresponding to the specified \xe2\x80\xa6DdFetches an <code>Md</code> object corresponding to the specified \xe2\x80\xa6Ch<code>Span</code> and <code>Event</code> key-value data.FaReturns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field \xe2\x80\xa6EgReturns a <code>Field</code> for the field with the given <code>name</code>, if one \xe2\x80\xa612Anoffset to first sample in bits0AmGet the first key-value pair.AlGet the first key-value pairAdGet the first value.AcGet the first valueDkGet the lowest-rank key/value pair from the <code>LiteMap</code>, if it \xe2\x80\xa6BkBorrows the first element in this sequence.CkGets the first element. Returns <code>None</code> if empty.A`&lt; event flags0AhGets verification flags.BaReturns the flags of the message.Cgsingle precision floating point number parser from textCgRecognizes floating point number in text format and \xe2\x80\xa60AnRounds towards minus infinity.CkReturns the largest integer less than or equal to a number.00CjBecause this is usually treated as OK to call multiple \xe2\x80\xa6CmClears up the thread-local cache of deferred functions by \xe2\x80\xa6BmFlush the sink, processing all pending items.0DhCreates a future which will entirely flush this <code>AsyncWrite</code>.01CjUpdates the WAVE header and flushes the underlying writer.CcFlush the internal buffer to the underlying writer.AmFlushes any buffered records.CaFlushes this output stream, ensuring that all \xe2\x80\xa60CjForces the evaluation of this lazy value and returns a \xe2\x80\xa60CjReturns the fractional part of a number, with division \xe2\x80\xa6BhReturns the fractional part of a number.00DfReturns a future that resolves to the next <code>Frame</code>, if any.DhReturns the value that is associated with <code>code_point</code> in \xe2\x80\xa6AkSee <code>Self::get</code>.AmA type representing group ID.AjReturns the key\xe2\x80\x99s group.DdIf the cursor is pointing at a <code>Group</code> with the given \xe2\x80\xa6AfGetting started guide.DhReturn an <code>Iterator</code> over the host addresses in this network.00BkHound, a wav encoding and decoding library.AiHTTP/1 client connectionsAiHTTP/2 client connectionsBlSet the target proxy for HTTPS destinations.BjProxy all HTTPS traffic to the passed URL.ehyperCkCalculate the length of the hypotenuse of a right-angle \xe2\x80\xa60AiAn ID3v1 metadata reader.AiAn ID3v2 metadata reader.CgA text representation of the vendor\xe2\x80\x99s application \xe2\x80\xa6AdName of the variant.AjName of the field, if any.DfThe <code>example</code> in <code>macro_rules! example { ... }</code>.DgIf the cursor is pointing at a <code>Ident</code>, returns it along \xe2\x80\xa6CmPerforms the the N-point Inverse Modified Discrete Cosine \xe2\x80\xa6DaHelper functions for implementing <code>RngCore</code> functions.CiReturns a reference to the value corresponding to the \xe2\x80\xa6fPanicsClReturn the index where the key-value pair exists or will \xe2\x80\xa6BfReturn the index of the key-value pairChReturn the index where a key-value pair may be inserted.1DbReturns a reference to the key at the supplied <code>index</code>.DdReturns a reference to the value at the supplied <code>index</code>.6CnReturn the index where the key-value pair exists or may be \xe2\x80\xa6431BbLow-level API for sampling indicesCaReturn the value at the given <code>index</code>.BeGet the index into the result buffer.0ChOur index amongst the broadcast threads (ranges from \xe2\x80\xa6CeGets the index of this thread in the pool, within \xe2\x80\xa610;EeIndex into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> orBhA unique index for the <code>Cue</code>.CmReturns the index of this field in its <code>FieldSet</code>.0DcAccess the element(s) at <code>index</code>, without bounds checks!CjReturn the internal value used to represent the sample \xe2\x80\xa600000000000BfReturns a reference to the inner type.0AfBorrow the inner type.AjAccess the interior writerC`Returns a mutable reference to the inner source.BhReturns a reference to the inner source.0000000BnReturns a reference to the inner audio source.BiReturns a reference to the innner source.22222222CcReturns an immutable reference to the inner stream.DbGet the underlying <code>u32</code> backing this <code>u24</code>.DbGet the underlying <code>i32</code> backing this <code>i24</code>.AiBorrows the wrapped type.0DeCall this function to obtain an instance of <code>Input</code> to \xe2\x80\xa6Bgposition of the error in the input dataBjTypes for IPv4 and IPv6 network addresses.BiReturns true if the error is an io::ErrorCnReturns true if this error was caused by a failure to read \xe2\x80\xa6Blwill parse a number in text form to a number0CmProduce an ordered iterator over keys0, which can then be \xe2\x80\xa6BfProduce an ordered iterator over keys0CjBorrow an ordered iterator over keys1 and values for a \xe2\x80\xa6CaSame as <code>join</code>, but with more futures.00000000BaSets the <code>keyid</code> flag.CgA collection of <code>Layer</code> based tower servicesCkWrap the given service with the middleware, returning a \xe2\x80\xa6FaReturns a <code>Layer</code> for wrapping a <code>Service</code> in a <code>BoxService</code> \xe2\x80\xa6DjReturns a <code>Layer</code> for wrapping a <code>Service</code> in an \xe2\x80\xa6FbReturns a <code>Layer</code> for wrapping a <code>Service</code> in a <code>BoxCloneService</code>DiReturns a <code>Layer</code> for wrapping a <code>Service</code> in a \xe2\x80\xa6DmReturns a new <code>Layer</code> that produces <code>AndThen</code> services.DlReturns a new <code>Layer</code> that produces <code>MapErr</code> services.E`Returns a new <code>Layer</code> that produces <code>MapRequest</code> services.EaReturns a new <code>Layer</code> that produces <code>MapResponse</code> services.DoReturns a new <code>Layer</code> that produces <code>MapResult</code> services.DoReturns a new <code>Layer</code> that produces <code>MapFuture</code> services.DjReturns a new <code>Layer</code> that produces <code>Then</code> services.DdAdd a new layer <code>T</code> into the <code>ServiceBuilder</code>.<CoReturns a new <code>Layer</code> that wraps services with a \xe2\x80\xa6=BcRecognizes a signed 1 byte integer.00BfRecognizes an unsigned 1 byte integer.00BcThe verbosity level of the message.BaSet <code>Metadata::level</code>.1AnSetter for <code>level</code>.CkReturns the level of verbosity of the described span or \xe2\x80\xa60DjCreates an adaptor which can write at most <code>limit</code> bytes to \xe2\x80\xa60CgReturns the maximum number of bytes that can be writtenCeReturns the maximum number of bytes that can be read.CjReturns the remaining number of bytes that can be read \xe2\x80\xa60ClApplies limiting to prevent audio peaks from exceeding a \xe2\x80\xa61ChReturns a stream over the lines of this reader. This \xe2\x80\xa6000DhReturns <code>ln(1+n)</code> (natural logarithm) more accurately than if0BlReturns the base 10 logarithm of the number.0DiReturns the lower bound of data that the <code>Body</code> will yield \xe2\x80\xa60DkRepeats the embedded parser, gathering the results in a <code>Vec</code>\xe2\x80\xa6DfRuns the embedded parser, gathering the results in a <code>Vec</code>.DhMerge two <code>SemaphorePermit</code> instances together, consuming \xe2\x80\xa6DcMerge two <code>OwnedSemaphorePermit</code> instances together, \xe2\x80\xa6BnMixer API - Simple Mixer API for mixer controlCbMixer that plays multiple sounds at the same time.BcAccess the output stream\xe2\x80\x99s mixer.AcBuilds a new mixer.CfCombinators applying their child parser multiple timesCgReturns a reference to the original <code>Mutex</code>.DbReturns a reference to the original <code>Arc&lt;Mutex&gt;</code>.Ch\xf0\x9f\x9a\xa7 [Unstable] Property names-related data for this \xe2\x80\xa6CaThis module contains the <code>Never</code> type.0ChCreate a retry policy that will never retry any request.DfReturns an <code>Interest</code> indicating that the subscriber is \xe2\x80\xa60EbPlaces the result of <code>a mod m</code> in <code>self</code>.  As opposed to \xe2\x80\xa6BmGets an immutable reference to the numerator.nThe numerator.DbPlaces the order of the curve in the provided <code>BigNum</code>.ChCreates a new I/O error from an arbitrary error payload.CkOther Use Extensions is a list of extensions other than \xe2\x80\xa6CnA sequence of any other extensions that are present in the \xe2\x80\xa6B`Sets a flag not already defined.CmReturns an iterator over the contents of this sequence as \xe2\x80\xa6Af&lt; control parameterAe&lt; data value union10B`Convert a byte string in the \xe2\x80\xa6C`Try to parse a buffer of bytes into the Request.CoTry to parse a buffer of bytes into this <code>Response</code>.DcA parser takes in input type, and returns a <code>Result</code> \xe2\x80\xa60kDeprecated.BdParse an absolute URL from a string.DiParse the RIFF INFO block into a <code>Tag</code> using the block\xe2\x80\x99s \xe2\x80\xa6CnParsing interface for parsing a token stream into a syntax \xe2\x80\xa6CkParse tokens of source code into the chosen syntax tree \xe2\x80\xa6ClParse a syntax tree node from the content of this string \xe2\x80\xa6DcParses a syntax tree node of type <code>T</code>, advancing the \xe2\x80\xa62CeParse a host: either an IPv6 address in [] square \xe2\x80\xa66CbParse an URL string with the configuration so far.BjConstruct a parse error for the given typeAlgithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsDjCreates a new <code>Builder</code> initialized with a PATCH method and \xe2\x80\xa6DaConvenience method to make a <code>PATCH</code> request to a URL.CnSome devices support pausing the audio stream. This can be \xe2\x80\xa6AmPauses playback of this sink.0CcLooks at the second-next token in the parse stream.CbLooks at the third-next token in the parse stream.CbA type representing process and process group IDs.CkProbe the current system for the \xe2\x80\x9ccert file\xe2\x80\x9d and \xe2\x80\x9c\xe2\x80\xa6DhThe <code>probe</code> module provides methods and traits to support \xe2\x80\xa6ClSteps the cursor one character into the trie based on an \xe2\x80\xa6BcProbes the next byte in the cursor.BmThis module defines all available properties.oProxy utilitiesmProxy helpersChSet whether the connected transport is to an HTTP proxy.EaAdd a <code>Proxy</code> to the list of proxies the <code>Client</code> will use.DgIf the cursor is pointing at a <code>Punct</code>, returns it along \xe2\x80\xa6CmBorrows the punctuation from this punctuated pair, unless \xe2\x80\xa6BbReturns the query string componentEaGet the query string of this <code>Uri</code>, starting after the <code>?</code>.oSets the query.AbReturns the query.0000AdValidates IRI query.BcModify the query string of the URL.CbReturn this URL\xe2\x80\x99s query string, if any, as a \xe2\x80\xa6AnReturns a list of descriptors.1Ac&lt; affected queueAc&lt; schedule queue10Ab&lt; queue controlBlQueue that plays sounds one after the other.CjBuilds a new queue. It consists of an input and an output.Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsA`The whole point.CcRange of code points from start to end (inclusive).CkParallel iterator types for ranges, the type for values \xe2\x80\xa6o&lt; raw32 dataCmRayon is a data-parallelism library that makes it easy to \xe2\x80\xa6DfOn success, returns number of <em>frames</em> read. (Multiply with \xe2\x80\xa6CmExtracts the successful type of a <code>Poll&lt;T&gt;</code>.ChCreates a future that is immediately ready with a value.0110EfConsumes <code>self</code>, returning a future that returns <code>self</code> back \xe2\x80\xa6BcWaits until the dispatcher is ready0BlWaits for any of the requested ready states.000BkWait for any of the requested ready states.111111111ClWaits for any of the requested ready states, returning a \xe2\x80\xa6ClGet the <code>Ready</code> value associated with this guard.0CnYields a mutable reference to the service when it is ready \xe2\x80\xa60AgReturns the reciprocal.ClTake the reciprocal (inverse) of a number, <code>1/x</code>.CjReturns the reciprocal (multiplicative inverse) of the \xe2\x80\xa61BoUnpins and then immediately re-pins the thread.Bm\\brief Reset status \\param scope scope handle0C`Reset buffer by setting cursor position to zero.B`Resets the <code>Backoff</code>.BaReset state to its initial value.0BkReset hasher instance to its initial state.01CoReset a future to resolve at <code>new_deadline</code> instead.0BiResets the underlying EVP_MD_CTX instanceClReset the number of available results. This will force a \xe2\x80\xa603AoReset the <code>Decoder</code>.ChResets the interval to complete one period after the \xe2\x80\xa6CiResets the <code>Sleep</code> instance to a new deadline.nRetry requestsAkSet a request retry policy.BnMiddleware for retrying \xe2\x80\x9cfailed\xe2\x80\x9d requests.ChCheck the policy if a certain request should be retried.CjRetry failed requests according to the given retry policy.CiReturn the last occurrence of the needle in the given \xe2\x80\xa6ClReturn the last occurrence of one of the needle bytes in \xe2\x80\xa60EfReturn the last occurrence of the <code>needle</code> in the <code>haystack</code> \xe2\x80\xa6EhReturns the last occurrence of <code>needle</code> in the given <code>haystack</code>\xe2\x80\xa6222222CiReturns the index of the last occurrence of the given \xe2\x80\xa6CnReturns the index of the last occurrence of this needle in \xe2\x80\xa6EmConvert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.0AgAudio playback library.CmRounds to the nearest integer. Rounds half-way cases away \xe2\x80\xa6CkReturns the nearest integer to a number. Round half-way \xe2\x80\xa600AiScale the complex number.BiCreates a new scope for spawning threads.DjCreates a \xe2\x80\x9cfork-join\xe2\x80\x9d scope <code>s</code> and invokes the closure \xe2\x80\xa6CjCreates a scope that executes within this thread pool. \xe2\x80\xa610EbSets a value <code>T</code> as the task-local value for the future <code>F</code>.CjUsing the provided context buffer, score calculate and \xe2\x80\xa6BeA function to score a context buffer.eSerdeCkShifts the contents of the buffer back by the number of \xe2\x80\xa6ClReturn a future that resolves in <code>duration</code> time.BnWaits until <code>duration</code> has elapsed.BoReturns a slice of self for the provided range.00AiDistributions over slicesBbParallel iterator types for slicesAgSpawns a scoped thread.BoSpawns a scoped thread with this configuration.DhSpawns a task that polls the given future with output <code>()</code> to00CmPuts the task into the Rayon thread pool\xe2\x80\x99s job queue in \xe2\x80\xa6DjSpawns a job into the fork-join scope <code>self</code>. This job will \xe2\x80\xa6CnSpawns an asynchronous task in this thread pool. This task \xe2\x80\xa6210BgSpawns a future onto the Tokio runtime.0DkSpawns a new asynchronous task, returning a <code>JoinHandle</code> for \xe2\x80\xa6DeSpawn the provided task on the <code>JoinSet</code>, returning an \xe2\x80\xa6AlGets the speed of the sound.ClChanges the play speed of the sound. Does not adjust the \xe2\x80\xa60CnRemoves the bytes from the current view, returning them in \xe2\x80\xa6EeSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and \xe2\x80\xa60CkHelper method for splitting this read/write object into \xe2\x80\xa6011CnSplits an array at the given index, returning the separate \xe2\x80\xa6DkThe <code>split</code> function takes arbitrary data and a closure that \xe2\x80\xa6CkSplit midway into a new producer if possible, otherwise \xe2\x80\xa6DjSplits <code>n</code> permits from <code>self</code> and returns a new \xe2\x80\xa60DfSplits a <code>TcpStream</code> into a read half and a write half, \xe2\x80\xa6DgSplits a <code>UnixStream</code> into a read half and a write half, \xe2\x80\xa6DjSplits a single value implementing <code>AsyncRead + AsyncWrite</code> \xe2\x80\xa6ClReturns a stream of the contents of this reader split on \xe2\x80\xa60Ce\\brief PCM has been started \\param scope scope handle0CfReturns the starting index of this window into the \xe2\x80\xa60AbCurrent PCM state.AmSteals a task from the queue.0AeStatements in a blockEcStores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.BmStores <code>val</code> into the atomic cell.BfTraits for pluggable LiteMap backends.DgDescribe a context in which to verify an <code>X509</code> certificate.DdThe type of binding which this <code>BindingInfo</code> will create.Al&lt; count of happened ticks0CbProvide a timer to execute background HTTP2 tasks.BaProvide a timer to be used for h2DgConvert <code>self</code> to big endian from the target\xe2\x80\x99s endianness.BnConverts the integer to a <code>BigNum</code>.EeConverts the value of <code>self</code> to an <code>i8</code>. If the value cannot beDbConvert <code>self</code> to little endian from the target\xe2\x80\x99s \xe2\x80\xa6EhConverts the value of <code>self</code> to a <code>u8</code>. If the value cannot be \xe2\x80\xa6CkConverts a marker object into a single-byte representation.AlReturns the event\xe2\x80\x99s token.CgTokens representing Rust punctuation, keywords, and \xe2\x80\xa6Di<code>tokio</code> runtime components integration for <code>hyper</code>.CgA runtime for writing reliable network applications \xe2\x80\xa6Db<code>async fn(Request) -&gt; Result&lt;Response, Error&gt;</code>DjCreates a new <code>Builder</code> initialized with a TRACE method and \xe2\x80\xa6BbLogs a message at the trace level.BgConstructs an event at the trace level.ClReturns a copy of the network with the address truncated \xe2\x80\xa600AdRounds towards zero.BdReturn the integer part of a number.00CkApplies a tuple of parsers one by one and returns their \xe2\x80\xa6AeULE impls for tuples.Ae&lt; channel map typeo&lt; event type10ChGet the top level media type for this <code>Mime</code>.AgThe name of the digest.BkReturns the <code>Nid</code> of the digest.CfReturn the type of a PKCS#7 structure as an Asn1ObjectCnA collection of custom, non-std <strong>Sample</strong> types.AbURI and IRI types.AlA type representing user ID.D`The bitwise or (<code>|</code>) of the bits in two flags values.00000CkVisits the values representing the union, i.e., all the \xe2\x80\xa6AlTake the union of two groupsDgReturn an iterator over all values that are in <code>self</code> or \xe2\x80\xa6333333333333AmReturn the union of two sets.EcReturns the union of between the flags in <code>self</code> and <code>other</code>.DdThe <code>units</code> module provides definitions for common units.DkStrips the raw marker <code>r#</code>, if any, from the beginning of an \xe2\x80\xa6ClConverts a stream of pairs into a future, which resolves \xe2\x80\xa6000CjUnzips the items of a parallel iterator into a pair of \xe2\x80\xa6DkReturns the upper bound of data the <code>Body</code> will yield before \xe2\x80\xa60CdThe usage and/or content of the <code>Visual</code>.Blwill parse a number in text form to a number0ClBundles the part of UTS 46 that makes sense to implement \xe2\x80\xa6CdThis module provides the lower-level API for UTS 46.Ab&lt; control valueo&lt; skew value10B`&lt; affected value (e.g. tempo)BaGet the flags value of this flag.CkThe value which was not inserted, because the entry was \xe2\x80\xa6AnThe value portion of a header.BfTrie value associated with this range.CkA macro allowing for compile-time construction of valid \xe2\x80\xa6ChReturns the provided value if the child parser succeeds.ClBuilding blocks for deserializing basic values using the \xe2\x80\xa60CkThe Value enum, a loosely typed way of representing any \xe2\x80\xa6BbThe value of the <code>Tag</code>.oGets the value.CnUsed when parsing <code>key = &quot;value&quot;</code> syntax.CgBorrows the syntax tree node from this punctuated pair.AbVisits a variable.CmSyntax tree traversal to walk a shared borrow of a syntax \xe2\x80\xa6EdConstructs a <code>SockAddr</code> with the family <code>AF_VSOCK</code> and the \xe2\x80\xa6DjCreates a <code>Waker</code> from an <code>Arc&lt;impl ArcWake&gt;</code>.DcReturns a reference to the <code>Waker</code> for the current task.11CnA multi-producer, multi-consumer channel that only retains \xe2\x80\xa6AdThe width in pixels.BgWrite samples to the kernel ringbuffer.0DeImplementations of <code>io::Write</code> to transparently handle \xe2\x80\xa6CcEncode input and then write to the delegate writer.CkLocks with exclusive write access, blocking the current \xe2\x80\xa6DjCreates a future which will write bytes from <code>buf</code> into the \xe2\x80\xa60BoWrites the audio sample to the WAVE data chunk.CnSerialize the given data structure as MessagePack into the \xe2\x80\xa6DkLocks this <code>RwLock</code> with exclusive write access, causing the \xe2\x80\xa6CjCreates a future that will open a file for writing and \xe2\x80\xa6BaSets the option for write access.CnWrites a buffer into this writer, returning how many bytes \xe2\x80\xa60DcWrites the bytes of <code>t</code> and then forgets <code>t</code>.ChAdvertises which content types the client is able to \xe2\x80\xa60CfAlias for the associated type of <code>Abs</code>: \xe2\x80\xa6AlSND_PCM_ACCESS_xxx constantsCjAn action to perform when a redirect status code is found.DiA value returned by <code>Policy::redirect</code> which indicates the \xe2\x80\xa6CaThe key used to encrypt or decrypt cipher blocks.Ag<code>&amp;&amp;</code>CiTransforms common types to a char for basic token parsingCeAn assignment expression: <code>a = compute()</code>.CgAn atomic pointer that can be safely shared between \xe2\x80\xa6AdThe bcrypt alphabet.ChA bare function type: <code>fn(usize) -&gt; bool</code>.Ac<code>become</code>AjA big signed integer type.BmDynamically sized large number implementationA`A binary buffer.ClA binary operation: <code>a + b</code>, <code>a += b</code>.BmThe <code>&amp;</code> operator (bitwise and)BiThe <code>^</code> operator (bitwise xor)DhFor more info about <code>Budget</code>, please see the module-level \xe2\x80\xa6CnA trait for values that provide sequential write access to \xe2\x80\xa6DfBuffer type used by type which implements <code>BufferKindUser</code>.BhSink for the <code>buffer</code> method.00ChA correctly sized stack allocation for the formatted \xe2\x80\xa6CgSafe API for formatting floating point numbers to text.CjUsed by the endpoint to indicate that the stream is no \xe2\x80\xa6BjEnable session caching on the client side.CnContains stored HTTP cookies previously sent by the server \xe2\x80\xa60CjWrapping structure for the alt() combinator implementationCfA distribution to uniformly sample elements of a sliceBjStream for the <code>chunks</code> method.00Da<code>Chunks</code> is an iterator that groups elements of an \xe2\x80\xa6CnParallel iterator over immutable non-overlapping chunks of \xe2\x80\xa6AcA symmetric cipher.BiRepresents a particular cipher algorithm.BhA Client to make outgoing HTTP requests.CjAn asynchronous <code>Client</code> to make Requests with.De<code>Cloned</code> is an iterator that clones the elements of an \xe2\x80\xa6BcInclusive at the beginning and end.CkThe semaphore has been closed and cannot issue new permits.ClThe receive half of the channel was explicitly closed or \xe2\x80\xa60ChThere are no more active senders implying no further \xe2\x80\xa60CnThe send half of the channel was dropped without sending a \xe2\x80\xa6ClThe <code>Taker</code> has canceled its interest in a value.ClCoarse seek mode is a best-effort attempt to seek to the \xe2\x80\xa6BjFuture for the <code>concat</code> method.00DgDefines <code>GenericSequence</code>s which can be joined together, \xe2\x80\xa6BcThe config type used by this engineChThe minimal level of configuration that engines must \xe2\x80\xa6AmDeprecated configuration API.De<code>Copied</code> is an iterator that copies the elements of an \xe2\x80\xa6CaThe reference is pointed at data that was copied.DjA <code>Cursor</code> wraps an in-memory buffer and provides it with a \xe2\x80\xa60CjA cheaply copyable cursor into a <code>TokenBuffer</code>.AnAn unspecified error occurred.fDELETE0CaThe <code>Device</code> type yielded by the host.DkThe <code>Device</code> implementation associated with the platform\xe2\x80\x99s \xe2\x80\xa60CgConvenience wrapper trait covering functionality of \xe2\x80\xa60B`Parser implementation for digit1De<code>Dither</code> is a trait for implementing dithering algorithms.n<code>$</code>CgSpecification of the communication domain for a socket.CgA DNS domain name, as \xe2\x80\x98.\xe2\x80\x99 dot-separated labels. \xe2\x80\xa6o<code>..</code>BkAlias to make it easy to multiply by 2. \xe2\x80\xa6AnReference to <code>Dsa</code>.BbObject representing DSA signature.DkSample types which may be converted to and from some type <code>S</code>\xe2\x80\xa6AdThe EUC-JP encoding.AdThe EUC-KR encoding.CkIndicates expectations that need to be fulfilled by the \xe2\x80\xa60FdThe enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general \xe2\x80\xa6ClCombines two different futures, streams, or sinks having \xe2\x80\xa600EeSum type with two cases: <code>Left</code> and <code>Right</code>, used if a body \xe2\x80\xa621CgCombine two different service types into a single type.Aisnd_ctl_elem_id_t wrapperDcAn <code>Engine</code> provides low-level encoding and decoding \xe2\x80\xa6CiType indicating that there were errors during UTS #46 \xe2\x80\xa6BaA collection of readiness events.CeA visit for template expansion to retrieve the value.DkAn <code>if</code> expression with an optional <code>else</code> block: \xe2\x80\xa6Ac<code>extern</code>ClA unique enum value representing the sample format. This \xe2\x80\xa6CnFilter that modifies raises the volume from silence over a \xe2\x80\xa6ClSink that clones incoming items and forwards them to two \xe2\x80\xa600DoA list of <code>Key</code>-<code>Value</code> pairs representing functional \xe2\x80\xa6BmData stored within an enum variant or struct.kFields onlyBjStream for the <code>filter</code> method.00E`<code>Filter</code> takes a predicate <code>filter_op</code> and filters out \xe2\x80\xa6CfA forward substring searcher that uses the Two-Way \xe2\x80\xa6CeA forward substring searcher using the Rabin-Karp \xe2\x80\xa6CeAn architecture independent \xe2\x80\x9cpacked pair\xe2\x80\x9d finder.CjA forward substring searcher using the Shift-Or algorithm.CgA \xe2\x80\x9cpacked pair\xe2\x80\x9d finder that uses 128-bit vector \xe2\x80\xa6CgA \xe2\x80\x9cpacked pair\xe2\x80\x9d finder that uses 256-bit vector \xe2\x80\xa6CiA single substring searcher fixed to a particular needle.CiHelper trait to convert a parser\xe2\x80\x99s result to a more \xe2\x80\xa6CjThe type of folder that this consumer can be converted \xe2\x80\xa6DkThe <code>Folder</code> trait encapsulates the standard fold operation. \xe2\x80\xa6AgFollow the redirection.AlSND_PCM_FORMAT_xxx constantsBl(<code>Cf</code>) A format control character0CgInstantiation function for a <code>FormatReader</code>.EfA unified <code>Stream</code> and <code>Sink</code> interface to an underlying I/O \xe2\x80\xa6Aasnd_pcm_sframes_tCmA future represents an asynchronous computation, commonly \xe2\x80\xa6AjA not-yet-completed future0100100CnThe <code>Future</code> returned by this <code>Service</code>.AjThe future response value.0DdThe <code>Future</code> type returned by <code>Policy::retry</code>.CnThe future associated with each backoff. This usually will \xe2\x80\xa62BnA view to all values stored in a single entry.0Ae<code>HTTP/2.0</code>0Ae<code>HTTP/3.0</code>0CfPerforms both compressed and uncompressed conversions.AfHandle to the runtime.BkProvides message digest (hash) computation.AkRepresents a parsed header.CfUnique identifier for available hosts on the platform.AdDeprecated property.AdThe IBM866 encoding.BnProtocol corresponding to <code>ICMPv4</code>.BnProtocol corresponding to <code>ICMPv6</code>.Dc<em>VerifyDNSLength=false</em>. (Possibly relevant for allowing \xe2\x80\xa6DhThis is a <code>VarZeroVecFormat</code> that stores u8s in the index \xe2\x80\xa6CiJSON input source that reads from a std::io input stream.Dd<code>no_std</code> implementation of <code>std::net::IpAddr</code>.EjA type alias for <code>RiStr</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.FlA <strong>type operator</strong> that returns <code>True</code> if <code>Self &lt; Rhs</code>, otherwise \xe2\x80\xa6AmA free-standing function: \xe2\x80\xa6BdInitialization vector size in bytes.AdThe KOI8-R encoding.AdThe KOI8-U encoding.Ab<code>&lt;-</code>Bb423 Locked [RFC4918, Section 11.3]0AlReturn <code>log2(e)</code>.CmThe receiver lagged too far behind. Attempting to receive \xe2\x80\xa6ClThe receiver lagged too far behind and has been forcibly \xe2\x80\xa6B`Every character is below U+0100.Db<code>Layout</code> describes common audio channel configurations.Bk<code>GenericArray</code> associated lengthCfAlias for the associated type of <code>Len</code>: \xe2\x80\xa6Cc(<code>L</code>) The union of all letter categoriesChAn integer literal: <code>1</code> or <code>1u16</code>.CeA UTF-8 string literal: <code>&quot;foo&quot;</code>.mLittle endianDdA core struct representing a <code>Unicode Locale Identifier</code>.CdA locked value acquired from a <code>TryLock</code>.Dm<code>GenericSequence</code> that has one more element than <code>Self</code>CaParser implementation for the many_m_n combinatorBkFuture for the <code>map_err</code> method.BkStream for the <code>map_err</code> method.1010CeBody returned by the <code>map_err</code> combinator.ChService returned by the <code>map_err</code> combinator.BnImplementation of <code>Parser::map_opt</code>BnImplementation of <code>Parser::map_res</code>AdMapped sequence typeoFormat markers.Dg<code>MaxLen</code> is an iterator that imposes a maximum length on \xe2\x80\xa6CgA struct or tuple struct field accessed in a struct \xe2\x80\xa6CjAn iterator over all occurrences of a single byte in a \xe2\x80\xa6AiThe Request Method (VERB)0AaUse microseconds.AaUse milliseconds.Dg<code>MinLen</code> is an iterator that imposes a minimum length on \xe2\x80\xa6CiStruct containing direct I/O functions shared between \xe2\x80\xa6CgConfiguration of a <code>sendmsg(2)</code> system call.DjFused multiply-add. Computes <code>(self * a) + b</code> with only one \xe2\x80\xa6CmDon\xe2\x80\x99t add padding when encoding, and require no padding \xe2\x80\xa6BbWill match the host\xe2\x80\x99s endiannessClContains information on needed data if a parser returned \xe2\x80\xa6CfAlias for the associated type of <code>Neg</code>: \xe2\x80\xa6CeFuture for the <code>Peekable::next_if</code> method.00CnUse bytes only when Serde requires it (typically only when \xe2\x80\xa6BbNotifies a single task to wake up.CfGeneric trait for types implementing basic numeric \xe2\x80\xa6DeThe trait for <code>Num</code> types which also implement numeric \xe2\x80\xa6Cc(<code>N</code>) The union of all number categoriesCiRepresents a JSON number, whether integer or floating \xe2\x80\xa6000BhIndicates where a fetch originates from.0AiRepresents a JSON object.0CkUseful functions to calculate the offset between slices \xe2\x80\xa6BkFuture for the <code>ok_into</code> method.00D`An opaque type used to define <code>ForeignTypeRef</code> types.0AlA globally unique identifierCmA distribution to sample floating point numbers uniformly \xe2\x80\xa6DjThe input contained an <code>Option&lt;T&gt;</code> that was not expected.0BkFuture for the <code>or_else</code> method.BkStream for the <code>or_else</code> method.1010AdThe origin of an URLAdsnd_output_t wrapperCiOutput array of <code>OutputSizeUser</code> implementors.0BiThe type of value produced on completion.00A`Resulting lengthBoResulting sequence formed by the concatenation.BeThe output type that may be generatedClDefines the Mode for the output type. Emit will generate \xe2\x80\xa6AjType of the produced valueBgThe result after applying the operator.CiThe resulting type after applying the fused multiply-add.1CmThe type of value returned by this callback. Analogous to \xe2\x80\xa6BbShould always be <code>Self</code>AcThe absolute value.BaThe result of the exponentiation.ClThe result of the comparison. It should only ever be one \xe2\x80\xa6BlThe length as a type-level unsigned integer.BaThe type of the result of the sumBeThe type of the result of the productBfThe type of the result of the divisionDaThe type of the minimum of <code>Self</code> and <code>Rhs</code>DaThe type of the maximum of <code>Self</code> and <code>Rhs</code>DdThe type representing either <code>True</code> or <code>False</code>00000BfThe result of the integer square root.BkThe result of the integer binary logarithm.AlThe greatest common divisor.FlThis type MUST be <code>Self</code> with the <code>&#39;static</code> replaced with <code>&#39;a</code>, \xe2\x80\xa6CkDomain for low-level packet interface, corresponding to \xe2\x80\xa6CiHTTP/1.0 header usually used for backwards compatibility.0AjOgg packet representation.DjA <code>Packet</code> contains a discrete amount of encoded data for a \xe2\x80\xa6BjAn iterator over the parameters of a MIME.CeA tag type indicating that a key only has parameters.AkA thread parking primitive.BdAll nom parsers implement this traitCnParser that can parse Rust tokens into a particular syntax \xe2\x80\xa6EbA literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.BkPermits to send one value into the channel.o<code>+=</code>ChA type that controls the policy on how to handle the \xe2\x80\xa6CkA \xe2\x80\x9cretry policy\xe2\x80\x9d to classify if a request should be \xe2\x80\xa6CgTrait for the policy on handling redirection responses.BmFuture for the <code>poll_fn</code> function.BmStream for the <code>poll_fn</code> function.1010CdA tag type indicating that a key only has public \xe2\x80\xa6BlA public visibility level: <code>pub</code>.Ab<code>-&gt;</code>EcA <code>Buf</code> adapter which implements <code>io::Read</code> for the inner \xe2\x80\xa6fReaderAcHTTP/2 error codes.BcThe \xe2\x80\x9cpayload\xe2\x80\x9d of a log message.BcA set of fields recorded by a span.0Af<code>ref mut x</code>DeThe trait for <code>Num</code> references which implement numeric \xe2\x80\xa6GfA region subtag (examples: <code>&quot;US&quot;</code>, <code>&quot;CN&quot;</code>, <code>&quot;AR&quot;</code> etc.)ChA future which sends its output to the corresponding \xe2\x80\xa600AlSND_SEQ_REMOVE_xxx constantsCnAn renamed identifier imported by a <code>use</code> item: \xe2\x80\xa6BlStream for the <code>repeat</code> function.BnReader for the <code>repeat()</code> function.101ChIterator adaptor for the <code>repeat()</code> function.BgA source that repeats the given source.CkAn array literal constructed from one repeated element: \xe2\x80\xa6CkAn async reader which yields one byte over and over and \xe2\x80\xa6CjA specialized <code>Result</code> type for I/O operations.CnA type for results generated by Hound where the error type \xe2\x80\xa6DkA <code>Result</code> typedef to use with the <code>http::Error</code> typeAoA Result of any parsing action.CiResult type often returned from methods that can have \xe2\x80\xa6AdResult of the visit.00CfA typedef of the result-type returned by many methods.CiThe type of result that this consumer will ultimately \xe2\x80\xa6CnThe type of result that will ultimately be produced by the \xe2\x80\xa6EkA <code>Result</code> alias where the <code>Err</code> case is <code>reqwest::Error</code>.EcAlias for a <code>Result</code> with the error type <code>serde_json::Error</code>.0AkThe result of a Syn parser.05CmA <code>return</code>, with an optional value to be returned.Ac<code>return</code>AmReference to <code>RSA</code>BcAn asynchronous reader-writer lock.CnContains information about the software used by the origin \xe2\x80\xa6BjEnable session caching on the server side.1AnReturn <code>sqrt(2.0)</code>.BoType corresponding to <code>SOCK_STREAM</code>.DlA trait for working generically across different <strong>Sample</strong> \xe2\x80\xa60CcA type that can be used to represent audio samples.BbTrait representing a single sampleClRepresents value of a single sample. Silence corresponds \xe2\x80\xa6Dj<code>Sample</code> provides a common interface for manipulating sample\xe2\x80\xa6BhRepresents the scheme component of a URIEnA script subtag (examples: <code>&quot;Latn&quot;</code>, <code>&quot;Arab&quot;</code>, etc.)AkEnumerated property Script.BhSecond part of the resulting split arrayCd<code>SeekTo</code> specifies a position to seek to.BnFuture for the <code>select()</code> function.BnStream for the <code>select()</code> function.1010BoThe transmission end of a bounded mpsc channel.CgA means of transmitting a single value to another task.10AlSending end of an Unix pipe.CeSends values to the associated <code>Receiver</code>.CcSending-half of the <code>broadcast</code> channel.CfSends a value to the associated <code>Receiver</code>.2AkWriting end of a Unix pipe.DhA <strong>type operator</strong> that, when implemented for unsigned \xe2\x80\xa6CfAn object which calculates a SHA224 hash of some data.oSHA-224 hasher.CfAn object which calculates a SHA256 hash of some data.oSHA-256 hasher.CfAn object which calculates a SHA384 hash of some data.oSHA-384 hasher.CfAn object which calculates a SHA512 hash of some data.oSHA-512 hasher.CaA pointer to an object protected by the epoch GC.BjFuture for the <code>shared</code> method.00CfAlias for the associated type of <code>Shl</code>: \xe2\x80\xa6DdThe <code>Signal</code> trait provides methods for rendering and \xe2\x80\xa6ChWhen summing two samples of a signal together, it is \xe2\x80\xa60CnUseful functions for signed numbers (i.e. numbers that can \xe2\x80\xa6G`The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> \xe2\x80\xa60CgA type which computes cryptographic signatures of data.BeOwned wrapper around a system socket.DbAn event source that may be registered with <code>Registry</code>.AdA source of samples.BnA splicing iterator for <code>IndexMap</code>.BnA splicing iterator for <code>IndexSet</code>.BbA square wave, rising edge at t=0.BdAlias to make it easy to square. \xe2\x80\xa6BaReference to an <code>Ssl</code>.o<code>*=</code>CiA static item: <code>static BIKE: Shed = Shed(42)</code>.EcA foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.Ac<code>static</code>CiRead PCM status directly from memory, bypassing alsa-lib.Ahsnd_pcm_status_t wrapperAjsnd_rawmidi_info_t wrapperB`Invalid byte in Response status.BfThe result of a successful parse pass.BlA strong, fast (amortized), non-portable RNGEf<code>StepBy</code> is an iterator that skips <code>n</code> elements between each \xe2\x80\xa6AhLeft and Right channels.DfThe stream type created by <code>build_input_stream_raw</code> and \xe2\x80\xa6DkThe <code>Stream</code> implementation associated with the platform\xe2\x80\x99s \xe2\x80\xa6BkA stream of values produced asynchronously.00002DjThe <code>SeekIndex</code> is empty so the desired timestamp could not \xe2\x80\xa6mString value.AiRepresents a JSON string.0CkA string. This is also the catch-all type for tags with \xe2\x80\xa6CoA struct literal expression: <code>Point { x: 1, y: 1 }</code>.CoA struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.DfA struct or struct variant pattern: <code>Variant { x, y, .. }</code>.Ac<code>struct</code>D`A single item used in a list of <code>Private</code> extensions.AaA generic subtag.ChExchange neigboring ranges of bits of the specified sizeCc(<code>S</code>) The union of all symbol categoriesCmA general error occurred while deserializing the expected \xe2\x80\xa6BcCatchall for syntax error messages.ClThe error was caused by input that was not syntactically \xe2\x80\xa6gTLSv1.1gTLSv1.2gTLSv1.3AgConversion target type.AeThe TLS 1.0 protocol.0AeThe TLS 1.1 protocol.0AeThe TLS 1.2 protocol.0BkFuture for the <code>try_all</code> method.00BkFuture for the <code>try_any</code> method.00AmTunnel Proxy via HTTP CONNECTAc<code>typeof</code>BlStream for the <code>unfold</code> function.BjSink for the <code>unfold</code> function.0101BmAn unsafe block: <code>unsafe { ... }</code>.Ac<code>unsafe</code>BoTypes which consume data with byte granularity.Df<code>Update</code> is an iterator that mutates the elements of an \xe2\x80\xa6EjA type alias for <code>RiStr</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.oA vacant entry.000nA vacant entryBkVacant slot (no equivalent key in the map).01oA vacant Entry.DfAn iterator over the values of a <code>HashMap</code> in arbitrary \xe2\x80\xa6Bf<code>HeaderMap</code> value iterator.ChAn iterator over the values of an <code>IndexMap</code>.1BnAn iterator over a serde_json::Map\xe2\x80\x99s values.BgCustom derive for [<code>VarULE</code>]CmVariable-width, byte-aligned data that can be cast to and \xe2\x80\xa6DjFull docs for this proc macro can be found on the <code>zerovec</code> \xe2\x80\xa6Df<em>VerifyDNSLength=true</em>. (The trailing root label dot is not \xe2\x80\xa6AoParser iplementation for verifyCcA <code>Visual</code> is any 2 dimensional graphic.AbBounds on a weightBlAn owned window around an underlying buffer.0CmA vector composed of four words; depending on their size, \xe2\x80\xa6oA worker queue.EgA <code>BufMut</code> adapter which implements <code>io::Write</code> for the inner \xe2\x80\xa6AbHexadecimal digitsCdAccept the next incoming request on this connection.BeAccepts a new <code>TcpStream</code>.CcAccepts a new incoming connection to this listener.AjInitiates a TLS handshake.BfInitiates a server-side TLS handshake.AlSee <code>Ssl::accept</code>C`Initiates a server-side TLS session on a stream.2CdAccept a new incoming connection from this listener.CeAccepts a new incoming connection from this listener.6CiAccepts a new client connection with the provided stream.6CfThis corresponds to <code>OCSP_request_add0_id</code>.DbThe PKIX <code>AlgorithmIdentifier</code> type, and common values.CiRecognizes zero or more lowercase and uppercase ASCII \xe2\x80\xa60ChRecognizes one or more lowercase and uppercase ASCII \xe2\x80\xa60DhReturns an <code>Interest</code> indicating the subscriber is always \xe2\x80\xa60CnReturns a new array with the given element appended to the \xe2\x80\xa6CjCreates a writer that appends samples to an existing file.BfInserts a key-value pair into the map.B`Insert the value into the entry.EeMoves all key-value pairs from <code>other</code> into <code>self</code>, leaving \xe2\x80\xa6FbMoves all values from <code>other</code> into <code>self</code>, leaving <code>other</code> empty.AlAppends the template string.CnCombines an existing error with a new one created from the \xe2\x80\xa6CaFor use by <code>ToTokens</code> implementations.65BoAppends a sound to the queue of sounds to play.0BjAdds a new source to the end of the queue.CjMoves all elements from other into self, leaving other \xe2\x80\xa6FcMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> \xe2\x80\xa6CfMove all values from <code>other</code> into this vec.0BdSets the option for the append mode.DkIf the <code>Value</code> is a number, represent it as f64 if possible. \xe2\x80\xa6CjRepresents the number as f64 if possible. Returns None \xe2\x80\xa6BcCast the sample to a 16-bit sample.DcIf the <code>Value</code> is an integer, represent it as i64 if \xe2\x80\xa6DdIf the <code>Number</code> is an integer, represent it as i64 if \xe2\x80\xa6FfConvert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.BgAccess the unfilled part of the buffer.1BnReturn a raw pointer to the vector\xe2\x80\x99s buffer.BnReturn a raw pointer to the string\xe2\x80\x99s buffer.ChReturns a raw pointer to the underlying data in this \xe2\x80\xa6BkReturns a raw pointer to the wrapped value.000AgConvert to raw pointer.BkReturns a pointer to the raw OpenSSL value.CbReturns a pointer to the underlying OpenSSL value.BoReturns a raw pointer to the vector\xe2\x80\x99s buffer.BeReturns a raw pointer to the address.CcA <code>*const</code> pointer to the backing array.CcA <code>*const</code> pointer to the backing slice.BeA const pointer to the backing array.ChConverts the pointer to a raw pointer (without the tag).CgReturns the raw OpenSSL value represented by this type.ChReturn the integer representation of a <code>Nid</code>.CjReturns the integer representation of the <code>Id</code>.CkReturns the integer representation of <code>Padding</code>.DaReturns the integer representation of <code>SrtpProfileId</code>.4444DfReturn the integer representation of an <code>X509VerifyResult</code>.5BdConverts the pointer to a reference.EjConvert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.BnConvert this finder into its borrowed variant.01C`Borrows as an <code>Option&lt;&amp;U&gt;</code>.CcObtain this as an <code>Option&lt;&amp;U&gt;</code>ClReturn a string slice of the whole <code>ArrayString</code>.DlCreate a <code>&amp;str</code> from the symbols in the <code>Alphabet</code>BkReturns a str representation of the header.ChReturns a <code>str</code> representation of the header.CcReturn a &amp;str representation of the HTTP methodD`Returns a &amp;str representation of the <code>StatusCode</code>BnReturns the port number as a <code>str</code>.BlReturn a str representation of the authorityCaReturns the path and query as a string component.BiReturn a str representation of the scheme7BdView the hostname as a string slice.ClA helper function for displaying as a <code>&amp;str</code>.000000000DjReturns this <code>DataMarkerAttributes</code> as a <code>&amp;str</code>.CfReturns the template as a plain <code>&amp;str</code>.AjReturns the varibale name.AnReturns <code>&amp;str</code>.00000ClReturns the string representation of the <code>Level</code>.DbReturns the string representation of the <code>LevelFilter</code>.CdGet the value of this <code>Name</code> as a string.BeReturn the serialization of this URL.?>ChReturns a <code>str</code> representation of the header.AjView the name as a string.DfIf the <code>Value</code> is a String, returns the associated str. \xe2\x80\xa6663DkReturns the <code>u16</code> corresponding to this <code>StatusCode</code>.BnReturns the port number as a <code>u16</code>.1DhReturns the <code>u32</code> corresponding to this <code>StreamId</code>DcIf the <code>Value</code> is an integer, represent it as u64 if \xe2\x80\xa6DdIf the <code>Number</code> is an integer, represent it as u64 if \xe2\x80\xa6CgConverts an IRI into a URI without modification, if \xe2\x80\xa600000000000BeGet a reference to this type as a VecmAtomic types.BbTime to respond to level increasesCgCorrect, fast, and configurable base64 decoding and \xe2\x80\xa6AhBase64 encoding support.CfRecognizes a big endian 4 bytes floating point number.00CfRecognizes a big endian 8 bytes floating point number.00BoRecognizes a big endian signed 2 bytes integer.00BoRecognizes a big endian signed 3 bytes integer.00BoRecognizes a big endian signed 4 bytes integer.00BoRecognizes a big endian signed 8 bytes integer.00CaRecognizes a big endian unsigned 2 bytes integer.00C`Recognizes a big endian unsigned 3 byte integer.00CaRecognizes a big endian unsigned 4 bytes integer.00CaRecognizes a big endian unsigned 8 bytes integer.00DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.000DoReturns the intersection of <code>self</code> and <code>rhs</code> as a new \xe2\x80\xa6CdReturns the set intersection, cloned into a new set.222222222222CgReturns the intersection between the two sets of flags.DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6000EgReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new \xe2\x80\xa6CkReturns the set symmetric-difference, cloned into a new \xe2\x80\xa6222222222222ChReturns the left flags, but with all the right flags \xe2\x80\xa6DfImmutably borrows from an owned value. See <code>Borrow::borrow</code>DmProduce a borrowed <code>DnsName</code> from this owned <code>DnsName</code>.CdReturns a reference to the most recently sent value.CcReturns a reference to the most recently sent valuemTrait aliasesBaReturns the bounds of this range.CoTrait and lifetime bounds (<code>Clone+Send+&#39;static</code>)CkParse a set of curly braces and expose their content to \xe2\x80\xa6AbChoice combinatorsClThis helper function is used to \xe2\x80\x9cconnect\xe2\x80\x9d a parallel \xe2\x80\xa6CnA retry \xe2\x80\x9cbudget\xe2\x80\x9d for allowing only a certain amount of \xe2\x80\xa6BmAdds a fixed-size buffer to the current sink.0CdReturns a reference to the internally buffered data.0DjReturns a reference to <code>buf_writer</code>\xe2\x80\x99s internally buffered \xe2\x80\xa61102BoImplementation of the <code>ByteBuf</code> typeC`A simple source of samples coming from a buffer.ChA stably addressed token buffer supporting efficient \xe2\x80\xa644AjBuilds the PKCS#12 object.BkBorrows a stream, rather than consuming it.000DbEquivalent to C\xe2\x80\x99s <code>void</code> type when used as a pointer.DhCancel the <code>CancellationToken</code> and all child tokens which \xe2\x80\xa6CkSignal to the <code>Giver</code> that the want is canceled.ClA macro for defining <code>#[cfg]</code> if-else statements.CdThe main macro provided by this crate. See crate \xe2\x80\xa6AlUniformly sample one element000CkAn adaptor for chunking up items of the stream inside a \xe2\x80\xa6000BmSplits an iterator up into fixed-size chunks.AbSymmetric ciphers.n&lt; Client id0BmClient implementation of the HTTP/2 protocol.kHTTP ClientAeHTTP client utilitiesFjMaps an <code>Either&lt;&amp;L, &amp;R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by cloning the \xe2\x80\xa6FfMaps an <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by \xe2\x80\xa6EmConverts <code>Error&lt;&amp;I&gt;</code> into <code>Error&lt;I::Owned&gt;</code> by cloning.FaConverts <code>Error&lt;&amp;mut I&gt;</code> into <code>Error&lt;I::Owned&gt;</code> by cloning.32CjCreates an iterator which clones all of its elements.  \xe2\x80\xa6BhCompletes when the receiver has dropped.0CiA future which completes when the number of Receivers \xe2\x80\xa6CoWaits for the associated <code>Receiver</code> handle to close.BjCompletes when all receivers have dropped.DcThe <code>codecs</code> module re-exports all enabled Symphonia \xe2\x80\xa6DaThe <code>codec</code> module provides the traits and support \xe2\x80\xa6ChOne-based column number at which the error was detected.ChNotifies the kernel that frames have now been read / \xe2\x80\xa6CnConcatenate all items of a stream into a single extendable \xe2\x80\xa6000BdConcatenate, or join, two sequences.DoReturns a <code>TinyAsciiStr&lt;Q&gt;</code> with the concatenation of this \xe2\x80\xa6BcReturns the config for this engine.ChChange MessagePack behavior with configuration wrappers.BdAccess the output stream\xe2\x80\x99s config.DdGets the value for the <code>SO_COOKIE</code> option on this socket.FfMaps an <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by \xe2\x80\xa6FjMaps an <code>Either&lt;&amp;L, &amp;R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by copying the \xe2\x80\xa6EfConverts <code>Error&lt;&amp;I&gt;</code> into <code>Error&lt;I&gt;</code> by copying.EjConverts <code>Error&lt;&amp;mut I&gt;</code> into <code>Error&lt;I&gt;</code> by copying.23CjCreates an iterator which copies all of its elements.  \xe2\x80\xa6CgCreates a writer that writes the WAVE format to a file.FdCreates a new <code>Nid</code> for the <code>oid</code> with short name <code>sn</code> and long \xe2\x80\xa6CkCreates an OCSP response from the status and optional body.B`Opens a file in write-only mode.CgCreates the specified directory with the configured \xe2\x80\xa6BhSets the option for creating a new file.BdGets a cursor into the current trie.CiProvides low-level access to the token representation \xe2\x80\xa6BjTypes for walking stepwise through a trie.22CiReturns a new, empty DataError with kind Custom and a \xe2\x80\xa6BhSets the salt length to the given value.CjProvide a custom function to determine what traffic to \xe2\x80\xa6CnCreate a custom <code>Policy</code> using the passed function.CkRaised when there is general error when deserializing a \xe2\x80\xa60DjUsed when a <code>Serialize</code> implementation encounters any error \xe2\x80\xa610CbDocumentation on implementing custom VarULE types.CeDecode base64 using the <code>STANDARD</code> engine.BmDecode the input into a new <code>Vec</code>.EkDecode complete input to <code>Cow&lt;&#39;a, str&gt;</code> <em>with BOM sniffing</em> \xe2\x80\xa6AlConvert Punycode to Unicode.CjProvides various functions and structs for MessagePack \xe2\x80\xa6BdGeneric MessagePack deserialization.DkDecodes a <code>Packet</code> of audio data and returns a copy-on-write \xe2\x80\xa6CjAttempts to decode a frame from the provided buffer of \xe2\x80\xa6B`Returns the degree of the curve.DkCreates a new <code>Builder</code> initialized with a DELETE method and \xe2\x80\xa6DbConvenience method to make a <code>DELETE</code> request to a URL.AiShared secret derivation.ClDerives a shared secret between the two keys, writing it \xe2\x80\xa6BiDerives a shared secret between two keys.CjDestroys the sink without stopping the sounds that are \xe2\x80\xa60Cfv1: device name (must be NULL when playback_pcm or \xe2\x80\xa6DfGets the value for the <code>SO_BINDTODEVICE</code> option on this \xe2\x80\xa600CnThis crate provides traits which describe functionality of \xe2\x80\xa6BbCompute hash of <code>data</code>.AiThe signature\xe2\x80\x99s digest.CeReturns a digest of the DER representation of the \xe2\x80\xa62CgRecognizes zero or more ASCII numerical characters: 0-90CfRecognizes one or more ASCII numerical characters: 0-900CkFunctions that bypass alsa-lib and talk directly to the \xe2\x80\xa6CkReturns stored cancellation token and removes this drop \xe2\x80\xa60DjThe <code>dither</code> module provides methods to apply a dither to a \xe2\x80\xa6EhDithers a <code>Sample</code> of source sample format <code>F</code> for an eventual \xe2\x80\xa6CmIf this URL has a host and it is a domain name (not an IP \xe2\x80\xa6EhReturns the <code>Domain</code> of this socket by checking the <code>SO_DOMAIN</code>\xe2\x80\xa6BmReturns this address\xe2\x80\x99s <code>Domain</code>.2Cgdouble precision floating point number parser from textCgRecognizes floating point number in text format and \xe2\x80\xa60DkCreate a new pair of <code>DuplexStream</code>s that act like a pair of \xe2\x80\xa6C`Generates a new EC key using the provided curve.CbReturns a copy of the internal elliptic curve key.FdThe enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general \xe2\x80\xa6CnApply one of two functions depending on contents, unifying \xe2\x80\xa60AoModule defining an Either type.BbTypes to enable polymorphic carts.Cl\\brief Enable and prepare it using current params \\param \xe2\x80\xa60CmAdds this future to the list of futures that are ready to \xe2\x80\xa60CjIn case of success, returns a tuple of (bytes consumed \xe2\x80\xa6DkEncode arbitrary octets as base64 using the <code>STANDARD</code> engine\xe2\x80\xa6DkEncode arbitrary octets as base64 using the provided <code>Engine</code>\xe2\x80\xa6EkEncode complete input to <code>Cow&lt;&#39;a, [u8]&gt;</code> using the <em>output </em>\xe2\x80\xa6AlConvert Unicode to Punycode.CjProvides various functions and structs for MessagePack \xe2\x80\xa6CfSerialize a Rust data structure into MessagePack data.BiEncodes a frame into the buffer provided.CfProvides the Engine abstraction and out of the box \xe2\x80\xa6CiThis module contains helper types for erasing Cart types.BiErrors related to parsing of Preferences.B`Returns the errors in the stack.CmThe <code>errors</code> module defines the common error type.DkReturns <code>e^(self) - 1</code> in a way that is accurate even if the \xe2\x80\xa60BlExpands the template with the given context.D`The bitwise or (<code>|</code>) of the bits in each flags value.000CbExtend the <code>ArrayVec</code> with an iterator.ClInserts all new key-values from the iterator to existing \xe2\x80\xa600CoExtends <code>self</code> with another <code>Extensions</code>.EdExtend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.ClExtends the preferences with the values from another set \xe2\x80\xa6ChExtend the map with all key-value pairs in the iterable.06666666666662CmAppend each segment from the given iterator at the end of \xe2\x80\xa6B`Returns this address\xe2\x80\x99s family.AoFanout items to multiple sinks.00CnThe key-value pairs present in this locale extension, with \xe2\x80\xa6AnContent stored in the variant.ClReturns the names of the fields on the described span or \xe2\x80\xa6DfReturns an iterator over the set of values on this <code>Event</code>.CjReturns the set of all fields defined by this span\xe2\x80\x99s \xe2\x80\xa6210CjGet a slice of the buffer that has been filled in with \xe2\x80\xa6CkReturns a shared reference to the filled portion of the \xe2\x80\xa6CkFilters the values produced by this stream according to \xe2\x80\xa6000DkApplies <code>filter_op</code> to each item of this iterator, producing \xe2\x80\xa6DiFilter the bindings created by this <code>Variant</code> object. This \xe2\x80\xa6DkFilter the bindings created by this <code>Structure</code> object. This \xe2\x80\xa6CnEncode all remaining buffered data and write it, including \xe2\x80\xa6CnIf this serializer was constructed with a string, take and \xe2\x80\xa6AkFinishes visiting the list.BhFinishes visiting the associative array.Ciconverts the parser\xe2\x80\x99s result to a type that is more \xe2\x80\xa6CmReturns the remaining input if parsing was successful, or \xe2\x80\xa6CgReturns the hash of the data written and resets the \xe2\x80\xa6AmReturns the hash of the data.0000ClReturns an action meaning reqwest should follow the next \xe2\x80\xa6DcDrops this handle <em>without</em> canceling the underlying future.0DhForgets the permit <strong>without</strong> releasing it back to the \xe2\x80\xa60CmDestroys the write half, but don\xe2\x80\x99t close the write half \xe2\x80\xa60DaUtilities for formatting (especially <code>Display</code> trait).ClPrint an integer into this buffer and return a reference \xe2\x80\xa6CmPrint a floating point number into this buffer and return \xe2\x80\xa6DhSearches the provided <code>MediaSourceStream</code> for a container \xe2\x80\xa6D`An instance of a <code>FormatReader</code> for the probed formatEbProvides a <code>Stream</code> and <code>Sink</code> interface for reading and \xe2\x80\xa60CkGets the number of actual frames written to the buffer. \xe2\x80\xa6BhGets the number of frames in the buffer.D`Converts <code>self</code> into an immutable <code>Bytes</code>.AdAsynchronous values.0hFutures.1CmAn extension trait for Futures that provides a variety of \xe2\x80\xa6lFuture types00CiCreates settings optimized for gaming and interactive \xe2\x80\xa6EdGet the value associated with <code>key0</code> and <code>key1</code>, if it exists.0DdBinary search the map with <code>predicate</code> to find a key, \xe2\x80\xa600CcGets a signed 8 bit integer from <code>self</code>.00BnReturns the error if the error is an io::ErrorCfGets an unsigned 8 bit integer from <code>self</code>.00CiLook up the canonical combining class for a scalar value.EaCreate an <code>AbortHandle</code> from the given <code>AbortRegistration</code>.0BlReturns a handle to the runtime\xe2\x80\x99s spawner.D`Gets a platform-independent hash of a <code>DataMarkerId</code>.ClReturns a reference to the map\xe2\x80\x99s <code>BuildHasher</code>.ClReturns a reference to the set\xe2\x80\x99s <code>BuildHasher</code>.CkReturn a reference to the map\xe2\x80\x99s <code>BuildHasher</code>.CkReturn a reference to the set\xe2\x80\x99s <code>BuildHasher</code>.AaHTTP header typesBiAppends a header to this request builder.BjAppends a header to this response builder.oHeader decoding3BjAdd a <code>Header</code> to this Request.AeThe height in pixels.BmNumber of frames hardware has read or writtenChRead current number of frames read / written by hardwareClStructure used in SIOCGIFCONF request.  Used to retrieve \xe2\x80\xa6CgIgnores the remainder of the <code>ScopedStream</code>.BeReturns the first offset of the pair.BfReturns the second offset of the pair.Ac<code>(A, B)</code>D`The bitwise or (<code>|</code>) of the bits in two flags values.000CkInsert <code>element</code> at position <code>index</code>.11BfInserts a key-value pair into the map.AhAdds a value to the set.DgSets the value of the entry, and returns an <code>OccupiedEntry</code>.CnSets the value of the entry, and returns the entry\xe2\x80\x99s old \xe2\x80\xa6DjSets the value of the entry with the <code>VacantEntry</code>\xe2\x80\x99s key, \xe2\x80\xa62DhSets the value of the entry with the <code>VacantEntryRef</code>\xe2\x80\x99s \xe2\x80\xa63DhSets the value of the entry with the <code>VacantEntry</code>\xe2\x80\x99s value.CmSets the value of the entry, replacing any existing value \xe2\x80\xa6CkInserts a new element into the table with the hash that \xe2\x80\xa6C`Insert a type into this <code>Extensions</code>.9B`Insert the value into the entry.AlSets the value of the entry.DkSets the value of the entry to <code>value</code>, and returns the entry\xe2\x80\xa6CjInserts the entry\xe2\x80\x99s key and the given value into the \xe2\x80\xa61BcInsert a key-value pair in the map.;CmInserts the given key and value into the map, and returns \xe2\x80\xa6AnInsert the value into the set.AcInserts a variable.>=EgInsert <code>value</code> with <code>key</code>, returning the existing value if it \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.00000000000BfInserts a key-value pair into the map.:90CmSets the value of the entry with the VacantEntry\xe2\x80\x99s key, \xe2\x80\xa6DgSets the value of the entry with the <code>OccupiedEntry</code>\xe2\x80\x99s \xe2\x80\xa6CmInsert a value in the slab, returning key assigned to the \xe2\x80\xa6CnInsert a value in the entry, returning a mutable reference \xe2\x80\xa6DkInsert an element at position <code>index</code>, shifting all elements \xe2\x80\xa6BeInserts the specified flags in-place.BoInsert a <code>SeekPoint</code> into the index.CbInserts an element at position <code>index</code>.CeInserts an item at the position given, moving all \xe2\x80\xa600;;BkInsert an element at index <code>idx</code>AjInverts <code>self</code>.CmReturns true if <code>Interest</code> contains AIO readiness.CaReturns true if the event contains AIO readiness.CcWhether all known bits in this flags value are set.00000000000000000CiReturns <code>true</code> if all flags are currently set.ChReturns true if this error was caused by prematurely \xe2\x80\xa6DbReturns true if the <code>Value</code> is a number that can be \xe2\x80\xa6DbReturns true if the <code>Number</code> can be represented by f64.EfReturns true if the <code>Value</code> is an integer between <code>i64::MIN</code> \xe2\x80\xa6EgReturns true if the <code>Number</code> is an integer between <code>i64::MIN</code> \xe2\x80\xa6CmReturns true if <code>Interest</code> contains LIO readiness.CaReturns true if the event contains LIO readiness.Ca<code>true</code> iff this value is Left_To_RightE`Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.BoReturns <code>true</code> if the number is NaN.BfParse till certain characters are met.00DkReturns <code>true</code> if the number is not divisible by <code>2</code>.0BoReturns <code>true</code> if the number is odd.CfReturns <code>true</code> is <code>self</code> is odd.EaReturns <code>true</code> if <code>self</code> is equal to the multiplicative \xe2\x80\xa6DiReturns true if the <code>Value</code> is an integer between zero and \xe2\x80\xa6DjReturns true if the <code>Number</code> is an integer between zero and \xe2\x80\xa6CiChecks that this certificate issued <code>subject</code>.BbSets the <code>issuer</code> flag.AhiTunes metadata support.DkReturns the length of the IV used with this cipher, or <code>None</code>\xe2\x80\xa6BgGet the key for an element in the slab.BgGenerates a new public/private keypair.CkA macro allowing for compile-time construction of valid \xe2\x80\xa6CaThe layout of the allocation request that failed.BkThe layout that was passed to the allocatorCiRecognizes a little endian 4 bytes floating point number.00CiRecognizes a little endian 8 bytes floating point number.00CbRecognizes a little endian signed 2 bytes integer.00CbRecognizes a little endian signed 3 bytes integer.00CbRecognizes a little endian signed 4 bytes integer.00CbRecognizes a little endian signed 8 bytes integer.00CdRecognizes a little endian unsigned 2 bytes integer.00CdRecognizes a little endian unsigned 3 bytes integer.CcRecognizes a little endian unsigned 3 byte integer.1CdRecognizes a little endian unsigned 4 bytes integer.00CdRecognizes a little endian unsigned 8 bytes integer.00DmLegacy implementations of <code>connect</code> module and <code>Client</code>CnConstruct an \xe2\x80\x9cinvalid length\xe2\x80\x9d error for the given type \xe2\x80\xa6BoA <code>vorbis</code> decoder, written in Rust.DbGet the value of the <code>SO_LINGER</code> option on this socket.ClReads the linger duration for this socket by getting the \xe2\x80\xa60ChMark a socket as ready to accept incoming connection \xe2\x80\xa6CdConverts the socket into a <code>TcpListener</code>.CeConverts the socket into a <code>UnixListener</code>.BmGets a key/value pair at the specified index.BlReturns the number of elements in the store.CkA macro allowing for compile-time construction of valid \xe2\x80\xa6oThe CLDR localeCgThe resolved locale of the returned data, if locale \xe2\x80\xa6BbReturns a reference to the logger.EmPlaces <code>a &lt;&lt; n</code> in <code>self</code>.  Equivalent to <code>a * 2 ^ n</code>.AgMAC message digest typeChMaps this future\xe2\x80\x99s success value to a different value.0CkWraps the current stream in a new stream which maps the \xe2\x80\xa60DgMaps a <code>Poll&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to \xe2\x80\xa6FhMaps a <code>Poll&lt;Result&lt;T, E&gt;&gt;</code> to <code>Poll&lt;Result&lt;U, E&gt;&gt;</code> by \xe2\x80\xa63322BkAdditional <code>DataMarker</code> helpers.BmThe data marker of the request, if available.CnComputes the maximum of all the items in the iterator with \xe2\x80\xa6AkThe message digest context.ChThis library provides heavily optimized routines for \xe2\x80\xa6CeSearch for the first occurrence of a byte in a slice.DkProvides architecture independent implementations of <code>memchr</code>\xe2\x80\xa6CiThis module defines 128-bit vector implementations of \xe2\x80\xa6CiThis module defines 256-bit vector implementations of \xe2\x80\xa6CaUtilities to safely compare cryptographic values.CmThis module provides forward and reverse substring search \xe2\x80\xa6CbReturns a reference to the associated HTTP method.BeSet the HTTP method for this request.AfThe request\xe2\x80\x99s methodAgThe HTTP request methodBmThe request method, such as <code>GET</code>.AnReturns the access method OID.oGet the method.CnComputes the minimum of all the items in the iterator with \xe2\x80\xa6ClReturns the modular multiplicative inverse if it exists, \xe2\x80\xa60CbReturns <code>(self ^ exponent) mod modulus</code>CaReturns <code>(self ^ exponent) % modulus</code>.CfSets the <code>msEFS</code> flag to <code>true</code>.CfSets the <code>msSGC</code> flag to <code>true</code>.CaReturns the needle that this finder searches for.0CjCreates a new pkey context for the specified algorithm ID.DbCreates an empty <code>HashTable</code> using the given allocator.BiCreates a new socket configured for IPv4.BiCreates a new socket configured for IPv6.ClTraverses the trie from the current state for this input \xe2\x80\xa60CfSets the <code>nsSGC</code> flag to <code>true</code>.AkParsers recognizing numbersCgOPENSSL_VERSION_NUMBER is a numeric release version \xe2\x80\xa6EgReturns the <code>Asn1Object</code> value of an <code>X509NameEntry</code>. This is \xe2\x80\xa6BhReturns the ASN.1 OID of this algorithm.ClOffset between the first byte of self and the first byte \xe2\x80\xa6CkReturns the byte position of the next character, or the \xe2\x80\xa6BjRecognizes one of the provided characters.00DnCreates a new opaque <code>Ping</code> to be sent via a <code>PingPong</code>.BcParallel iterator types for optionsBbReturn the origin of this URL (\xe2\x80\xa60n<code>C</code>BhReturns an iterator over the parameters.CmReturns the new event\xe2\x80\x99s explicitly-specified parent, if \xe2\x80\xa6ClReturns the new span\xe2\x80\x99s explicitly-specified parent, if \xe2\x80\xa610CaExtracts the contents of the <code>Pkcs12</code>.CkParse a proc-macro2 token stream into the chosen syntax \xe2\x80\xa60AhParsing flags from text.DjMake a parser that is usable with <code>parse_macro_input!</code> in a \xe2\x80\xa6BcReturns the period of the interval.AbPKCS #12 archives.DiSample data for <code>CodePointTrie</code> that returns the code point\xe2\x80\xa6BnGets immutable slices of all the audio planes.BlGets mutable slices of all the audio planes.ClGets immutable references to all audio planes (channels) \xe2\x80\xa6EfA list of <code>CuePoints</code>s that are contained within this <code>Cue</code>. \xe2\x80\xa6AfPoison this connectionDgTools for customizing the behavior of a <code>FollowRedirect</code> \xe2\x80\xa6DiRemove the element at <code>index</code> and shift down the following \xe2\x80\xa6CmRemoves and returns the last key-value pair from a map if \xe2\x80\xa6ChRemoves and returns the last value from a set if the \xe2\x80\xa6BkCreates a new JSON pretty print serializer.EfReturns <code>true</code> if the two <code>Shared</code>s point to the same future \xe2\x80\xa60CcWrites a signed 8 bit integer to <code>self</code>.0CfWrites an unsigned 8 bit integer to <code>self</code>.0CiGenerate a random value using the thread-local random \xe2\x80\xa6DhReturn a random value via the <code>StandardUniform</code> distribution.0EhCreates an adaptor which implements the <code>Read</code> trait for <code>self</code>\xe2\x80\xa600BhReturns a reference to the inner reader.CiIf the error was caused by the remote peer, the error \xe2\x80\xa6CdThe response reason-phrase, such as <code>OK</code>.BkReason for inability to deserialize values.BaReturns the reason for the error.EbIf <code>status</code> is <code>CERT_STATUS_REVOKED</code>, the reason for the \xe2\x80\xa6CfVisits this value with the given <code>Visitor</code>.BaRecord a set of values on a span.0DgVisits all the fields on this <code>Event</code> with the specified \xe2\x80\xa62DiVisits all the fields in this <code>ValueSet</code> with the provided \xe2\x80\xa62DhRecords that the field described by <code>field</code> has the value \xe2\x80\xa6DjRecords all the fields in this set of <code>Attributes</code> with the \xe2\x80\xa6DhRecords all the fields in this <code>Record</code> with the provided \xe2\x80\xa656354105DjReduces the items in the iterator into one item using <code>op</code>. \xe2\x80\xa6CkReduce two final results into one; this is executed after amRegion subtagBiRegion subtag of the language identifier.BcA region field of a Subdivision Id.CkA macro allowing for compile-time construction of valid \xe2\x80\xa6AdPreference of Region4CeThe intersection of a source flags value with the \xe2\x80\xa6000DiRemove the element at <code>index</code> and shift down the following \xe2\x80\xa6EeRemoves a <code>char</code> from this <code>ArrayString</code> at a byte position \xe2\x80\xa622CnRemoves a key from the map, returning the value at the key \xe2\x80\xa6CkRemoves a value from the set. Returns whether the value wasCkTakes the value out of the entry, and returns it. Keeps \xe2\x80\xa60CjTakes the value out of the entry, and returns it along \xe2\x80\xa6C`Remove a type from this <code>Extensions</code>.CnRemoves a key from the map, returning the value associated \xe2\x80\xa6AnRemove the entry from the map.CiRemove the key, value pair stored in the map for this \xe2\x80\xa6DkRemove the key-value pair equivalent to <code>key</code> and return its \xe2\x80\xa61DiRemove the value from the set, and return <code>true</code> if it was \xe2\x80\xa6CaTakes the value out of the entry, and returns it.D`Remove the value at <code>key</code>, returning it if it exists.DhRemoves <code>other</code> <code>Interest</code> from <code>self</code>.????????????76<ClTakes the value of the entry out of the map, and returns \xe2\x80\xa6CjRemove and return the value associated with the given key.DjRemove and return the element at position <code>index</code>, shifting \xe2\x80\xa6BeRemoves the specified flags in-place.DkRemoves the item at <code>index</code>, shifting all others down by one \xe2\x80\xa600CdRemove <code>Interest</code> from <code>self</code>.77BlRemove the element at index <code>idx</code>ClRenames a file or directory to a new name, replacing the \xe2\x80\xa6ChRenders a number of frames using the provided render \xe2\x80\xa6ChCreate a stream which produces the same item repeatedly.0CkCreates an instance of a reader that infinitely repeats \xe2\x80\xa601DkCreates a parallel iterator that endlessly repeats <code>element</code> \xe2\x80\xa6CjCreates an instance of an async reader that infinitely \xe2\x80\xa6B`Immediately reseed the generator0DmResizes the buffer so that <code>len</code> is equal to <code>new_len</code>.DcResizes the vector so that its length is equal to <code>len</code>.EeResizes a <code>TinyAsciiStr&lt;N&gt;</code> to a <code>TinyAsciiStr&lt;M&gt;</code>.DcAs <code>resize_with</code> and it clones the value as the closure.0BaResize the vec to the new length.k&lt; status0Aj&lt; operation result codeBcParallel iterator types for resultsCeRetains only the elements specified by the predicate.CiRetains only the elements specified by the predicate. \xe2\x80\xa611CnScan through each key-value pair in the map and keep those \xe2\x80\xa6CkScan through each value in the set and keep those where the33CdRetain only the elements specified by the predicate.4CiWalk the vec and keep only the elements that pass the \xe2\x80\xa600AkAdds a basic reverb effect.CnCreates a future which will rewind to the beginning of the \xe2\x80\xa60ElPlaces <code>a &gt;&gt; n</code> in <code>self</code>. Equivalent to <code>a / 2 ^ n</code>.DcReturns a reference to the original <code>Arc&lt;RwLock&gt;</code>.00CaSample a new value, using the given distribution.0EfGenerate a random value of <code>T</code>, using <code>rng</code> as the source of \xe2\x80\xa6oSample a value.CeSample from distribution, Lemire\xe2\x80\x99s method, unbiased000000000DeRandomly sample exactly <code>amount</code> distinct indices from \xe2\x80\xa6DjThe <code>sample</code> module defines the core audio sample trait and \xe2\x80\xa6BiSet the <code>Scheme</code> for this URI.BhGet the scheme of this <code>Uri</code>.AmThe scheme component of a URIA`Sets the scheme.CkReturn the scheme of this URL, lower-cased, as an ASCII \xe2\x80\xa60AmCreate a scoped retry policy.mScript subtagBiScript subtag of the language identifier.CkA macro allowing for compile-time construction of valid \xe2\x80\xa6CkData and APIs for supporting Script_Extensions property \xe2\x80\xa63CkDerives a key from a password and salt using the scrypt \xe2\x80\xa6CmSearch the index to find a bounded range of bytes wherein \xe2\x80\xa6BnThe number of secret bits used for the cipher.CfPolls multiple futures and streams simultaneously, \xe2\x80\xa6ClWaits for either one of two differently-typed futures to \xe2\x80\xa60CfThis function will attempt to pull items from both \xe2\x80\xa602210CmWaits on multiple concurrent branches, returning when the \xe2\x80\xa6Ac&lt; sender address0BmServer implementation of the HTTP/2 protocol.BfSet the expected IPv4 or IPv6 address.BfComputes the SHA224 hash of some data.BfComputes the SHA256 hash of some data.BfComputes the SHA384 hash of some data.BfComputes the SHA512 hash of some data.CnCreate a cloneable handle to this future where all handles \xe2\x80\xa6000BnConverts this into a <code>SharedGiver</code>.CeGet the signed data of a PKCS#7 structure of type \xe2\x80\xa6CoReturns a number that represents the sign of <code>self</code>.0AoReturns the sign of the number.01CiWhether this error was created in silent mode to not log.CkSilent requests do not log errors. This can be used for \xe2\x80\xa6AmBacks off in a blocking loop.Ac&lt; source address0BeSources of sound and various filters.CeReturns the lower-level source of this error, if any.00DkThe lower-level source of this error, in the case of a <code>Utf8</code>\xe2\x80\xa6BhRecognizes zero or more spaces and tabs.0BgRecognizes one or more spaces and tabs.0CkCreates a splicing iterator that replaces the specified \xe2\x80\xa60CjCreates a splicing iterator that removes the specified \xe2\x80\xa60AcRead current statusBc&lt; AES/IEC958 channel status bits0CkDetermines whether the executor is able to spawn new tasks.000BdReturns the <code>StatusCode</code>.BfSet the HTTP status for this response.AgThe response\xe2\x80\x99s statusAaHTTP status codesBcReturns the status of the response.BcThe overall status of the response.CnReturns the status code, if the error was generated from a \xe2\x80\xa6CnGet the <code>StatusCode</code> of this <code>Response</code>.AiGet the type of redirect.BaReturns the redirection response.AeAsynchronous streams.000DhReturns the <code>TokenStream</code> of tokens that are delimited in \xe2\x80\xa6CcOutput audio via the OS via mixers or play directlyEhDue to the <code>Stream</code> trait\xe2\x80\x99s inclusion in <code>std</code> landing later \xe2\x80\xa6oString literal.CnThis module contains the parallel iterator types for owned \xe2\x80\xa6CkA macro allowing for compile-time construction of valid \xe2\x80\xa60BoA subdivision suffix field of a Subdivision Id.CcGet an optional +suffix for this <code>Mime</code>.BhThe name of the target of the directive.BaSet <code>Metadata::target</code>1AoSetter for <code>target</code>.ClReturns a string describing the part of the system where \xe2\x80\xa60CaThreads that can borrow variables from the stack.BjReturns a handle to the underlying thread.CkReturns the DER-encoded representation of this certificate.BiSerializes this CmsContentInfo using DER.CcSerializes the DSA signature into a DER-encoded \xe2\x80\xa6CeSerializes the ECDSA signature into a DER-encoded \xe2\x80\xa6CeSerializes the response to its standard DER encoding.CdSerializes the request to its standard DER encoding.D`Serializes the <code>Pkcs12</code> to its standard DER encoding.ChSerializes the data into a DER-encoded PKCS#7 structure.CdSerializes the session into a DER-encoded structure.CfSerializes the certificate into a DER-encoded X509 \xe2\x80\xa6CfSerializes the Extension to its standard DER encoding.CkSerializes the certificate into a DER-encoded X509 name \xe2\x80\xa6CgSerializes the certificate request to a DER-encoded \xe2\x80\xa600<EhConverts the value of <code>self</code> to an <code>f32</code>. Overflows may map to \xe2\x80\xa6EhConverts the value of <code>self</code> to an <code>f64</code>. Overflows may map to \xe2\x80\xa6DhConverts the value of <code>self</code> to a hex dump, returning the \xe2\x80\xa6EgConverts the value of <code>self</code> to an <code>i16</code>. If the value cannot \xe2\x80\xa6EgConverts the value of <code>self</code> to an <code>i32</code>. If the value cannot \xe2\x80\xa6EgConverts the value of <code>self</code> to an <code>i64</code>. If the value cannot \xe2\x80\xa6CaMethod returning the concrete value for the type.DhReturns the string as <code>&amp;RiStr</code>, if it is valid as an IRI.BiSerializes this CmsContentInfo using DER.ChSerializes the data into a PEM-encoded PKCS#7 structure.CfSerializes the certificate into a PEM-encoded X509 \xe2\x80\xa6CgSerializes the certificate request to a PEM-encoded \xe2\x80\xa60EfYields a <code>&amp;str</code> slice if the <code>HeaderValue</code> only contains \xe2\x80\xa60DaReturn the string representation of this <code>ServerName</code>.EeConverts the value of <code>self</code> to a <code>u16</code>. If the value cannot beDiA method for converting back to a <code>u32</code> that can roundtrip \xe2\x80\xa6EeConverts the value of <code>self</code> to a <code>u32</code>. If the value cannot beEeConverts the value of <code>self</code> to a <code>u64</code>. If the value cannot beCjReturns a big-endian byte vector representation of the \xe2\x80\xa6ClSerialize the given data structure as a MessagePack byte \xe2\x80\xa6CiSerialize the given data structure as a JSON byte vector.0D`Obtain an owned <code>Vec&lt;Box&lt;T&gt;&gt;</code> out of thisDiCreates a <code>Vec&lt;T&gt;</code> from a <code>ZeroVec&lt;T&gt;</code>.DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa600000BhToggle the value and return the old one.0111111111111BeToggles the specified flags in-place.D`Get the value of the <code>IP_TOS</code> option for this socket.BgGets a list of tracks in the container.AkTrait this impl implements.CmThe suite of traits allowing CPAL to abstract over hosts, \xe2\x80\xa6EfReturns the <code>Id</code> of the currently running task, or <code>None</code> if \xe2\x80\xa6CnExecute an I/O operation ensuring that the socket receives \xe2\x80\xa600000CbTries to read or write from the socket using a \xe2\x80\xa6000CkTries to read or write from the file descriptor using a \xe2\x80\xa6BcPerforms the provided IO operation.0Am&lt; Time stamp of each event0D`Get the value of the <code>IP_TTL</code> option for this socket.l&lt; seconds0CnAn implementation of the Two-Way substring search algorithm\xe2\x80\xa6Ea<strong>This crate is deprecated. Use crate <code>memchr</code> instead.</strong>AaType information.DgCreates a <code>Stream</code> from a seed and a closure returning a \xe2\x80\xa6CmCreate a sink from a function which processes one item at \xe2\x80\xa61001DcCreates a <code>&amp;mut UninitSlice</code> wrapping a slice of \xe2\x80\xa6DfCreate a new <code>ReadBuf</code> with a slice of uninitialized bytes.D`Creates a new <code>ReadBuf</code> from a buffer that may be \xe2\x80\xa6fSafetyCjAtomically makes the token available if it is not already.CaSingle-threaded version of <code>OnceCell</code>.m&lt; reserved000EgInstantiates an unused <code>AudioBuffer</code>. An unused <code>AudioBuffer</code> \xe2\x80\xa6ClConvenience method to unwrap a Complete value. Panics if \xe2\x80\xa6DhConvert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.FjUpcast a <code>DataPayload&lt;T&gt;</code> to a <code>DataPayload&lt;S&gt;</code> where <code>T</code> \xe2\x80\xa6Cg\\brief New frames are present \\param scope scope handle0BjProcess data, updating the internal state.AbDigest input data.BeUpdate state using the provided data.AkFeeds data into the hasher.B`Feeds some data into the hasher.0000DbFeeds data from <code>input</code> through the cipher, writing \xe2\x80\xa60BmFeeds more data into the <code>Signer</code>.BoFeeds more data into the <code>Verifier</code>.2CfMutates each item of this iterator before yielding it.8CmUpdates the inner <code>T</code> by calling a function on it.CkAn iterator visiting all values in arbitrary order. The \xe2\x80\xa6B`An iterator visiting all values.CdReturn an iterator over the values of the map slice.CkReturn an iterator over the values of the map, in their \xe2\x80\xa6CfProduce an iterator over values, ordered by their keys3BlGets an iterator over the values of the map.DhReturns a reference to a <code>ValueSet</code> containing any values \xe2\x80\xa60CiAn identification string of the software/library that \xe2\x80\xa6ClReturns the result of the child parser if it satisfies a \xe2\x80\xa6CnVerify this CmsContentInfo\xe2\x80\x99s signature, This will search \xe2\x80\xa6CnVerifies if the signature is a valid ECDSA signature using \xe2\x80\xa6BfVerifies the validity of the response.ElVerifies the PKCS#7 <code>signedData</code> structure contained by <code>&amp;self</code>\xe2\x80\xa6CdVerifies the signature of data using the public key.DiDetermines if the data fed into the <code>Verifier</code> matches the \xe2\x80\xa6CmCheck if the certificate is signed using the given public \xe2\x80\xa6CnCheck if the certificate request is signed using the given \xe2\x80\xa6CfCheck if the CRL is signed using the given public key.CkThe decoded audio should be verified if possible during \xe2\x80\xa6AmGets the volume of the sound.DeThe value <code>1.0</code> is the \xe2\x80\x9cnormal\xe2\x80\x9d volume (unfiltered \xe2\x80\xa6CiA Vorbic COMMENT metadata reader for FLAC or OGG formats.DlGets the <code>vtable</code> pointer used to create this <code>Waker</code>.CdReturns the weight at the given index, if it exists.DdOn success, returns number of <em>frames</em> written. (Multiply \xe2\x80\xa6DhCreates an adaptor which implements the <code>Write</code> trait for \xe2\x80\xa60BhReturns a reference to the inner writer.CmSet whether HTTP/1 connections should try to use vectored \xe2\x80\xa6CeVector algorithms for the <code>x86_64</code> target.AjCalls <code>zeroed</code>.0DfCreates a new <code>BytesMut</code> containing <code>len</code> zeros.BmConstruct a new storage containing all zeros.DkThe same as <code>Zip</code>, but requires that both iterators have the \xe2\x80\xa6ChAdvertises the availability of alternate services to \xe2\x80\xa60CkIndicator that the <code>Abortable</code> task was aborted.00000AjThe operation was aborted.DeAn adapter between a Unicode back end an the <code>idna</code> crate.BdAn address assigned to an interface.CbFilter that modifies each sample by a given value.BlFuture for the <code>and_then</code> method.BlStream for the <code>and_then</code> method.1010BoImplementation of <code>Parser::and_then</code>CiService returned by the <code>and_then</code> combinator.AnParser implementation for charBcA way of waking up a specific task.00CiHelper trait for types that can be viewed as a byte sliceCkTrait implemented to allow a type to be used as a field \xe2\x80\xa6ClAssociates an IO object backed by a Unix file descriptor \xe2\x80\xa6CiA type that holds information on the next request and \xe2\x80\xa6CgA type that holds information on a redirection attempt.ClProvides methods to compute the average of two integers, \xe2\x80\xa6BfThe alphabet used in BinHex 4.0 files.BkPerforms exponential backoff in spin loops.BhThe backoff type produced by this maker.CdA backoff trait where a single mutable reference \xe2\x80\xa6CgA barrier enables multiple tasks to synchronize the \xe2\x80\xa6AlA big unsigned integer type.C`Ops that are independent of word size and endianDfAn extension trait for <code>http_body::Body</code> adding various \xe2\x80\xa6A`A boolean value.AjThe bounded iterator type.BiNumbers which have upper and lower boundsBgA boxed <code>Body</code> trait object.Ad<code>[ ... ]</code>Ao<code>[</code>\xe2\x80\xa6<code>]</code>CkBuilds client connections with custom configuration values.CkBuilds server connections with custom configuration values.AhAn HTTP response builderB`A builder for <code>Uri</code>s.AgAn HTTP request builderBjA builder to configure an HTTP connection.0BkA builder to create a <code>Matcher</code>.CaA builder to configure a new <code>Client</code>.AjURI/IRI reference builder.AlBuilder to configure retriesCfBuilds Tokio Runtime with custom configuration values.CnConfigure length delimited <code>LengthDelimitedCodec</code>s.DjA wrapper around <code>Vec&lt;u8&gt;</code> to serialize more efficiently.CeA byte string literal: <code>b&quot;foo&quot;</code>.gcharsetgCONNECT0Be201 Created [RFC9110, Section 15.3.2]0DiThis is a <code>Stream</code> of responses resulting from calling the \xe2\x80\xa6B`Dummy struct for better genericso<code>^=</code>CgA u8 array of little-endian data corresponding to a \xe2\x80\xa6ClParallel iterator over slice in (non-overlapping) chunks \xe2\x80\xa6C`A closure expression: <code>|a, b| a + b</code>.BkFuture for the <code>collect</code> method.00CcFuture that resolves into a <code>Collected</code>.AoAbstracts comparison operationsCfAlias for the associated type of <code>Cmp</code>: \xe2\x80\xa6AaA complex number.Aisnd_seq_connect_t wrapperCdConnect to a destination, returning an IO transport.BdThe context of an asynchronous task.CnA trait for types that can behave as a static URI template \xe2\x80\xa6BaParser implementation for contextC`Write PCM appl ptr directly, bypassing alsa-lib.Bi(<code>Cc</code>) A C0 or C1 control code0C`Future for the <code>copy_buf()</code> function.0BfRepresents a symmetric cipher context.CnSets the offset to the current position plus the specified \xe2\x80\xa6DjIndicates what the <code>Subscriber</code> considers the \xe2\x80\x9ccurrent\xe2\x80\x9d \xe2\x80\xa6hDTLSv1.2CgA converter that decodes a byte stream into Unicode \xe2\x80\xa6CmSource of audio samples decoded from an input stream. See \xe2\x80\xa6DfA <code>Decoder</code> implements a codec\xe2\x80\x99s decode algorithm. It \xe2\x80\xa6AoDecoding of frames via buffers.CaThe character is its own canonical decomposition.DkUse the a reasonable default specified by the <code>FormatReader</code> \xe2\x80\xa6AmReturn type is not specified.Ad<code>default</code>AfDemuxer failed to seekCgA type used to derive a shared secret between two keys.CjThe type used for enumerating available devices by the \xe2\x80\xa6DfThe <code>Devices</code> iterator associated with the platform\xe2\x80\x99s \xe2\x80\xa60EgCustom <code>#[derive(...)]</code> macro for implementing <code>fmt::Display</code> \xe2\x80\xa6CmThe server is identified by a DNS name.  The name is sent \xe2\x80\xa6CjA type which encapsulates a string (borrowed or owned) \xe2\x80\xa6BmAlgorithmIdentifier for <code>ED25519</code>.CfContains the date/time after which the response is \xe2\x80\xa60AcDescribes the curveAoRepresents a point on the curveBhErrors returned by <code>Timeout</code>.AdThe timeout elapsed.ChA converter that encodes a Unicode stream into bytes \xe2\x80\xa6CkTrait of helper objects to write out messages as bytes, \xe2\x80\xa6AjForce-end the current pageCmA guard representing a span which has been entered and is \xe2\x80\xa6BlFuture for the <code>err_into</code> method.BlStream for the <code>err_into</code> method.1010BaParser implementation for escapedCiA <code>let</code> guard: <code>let Some(x) = opt</code>.EbA literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.BeA try-expression: <code>expr?</code>.B`Extension type meta information.ClFilter that modifies lowers the volume to silence over a \xe2\x80\xa6nA fatal error.CnThe parser had an unrecoverable error: we got to the right \xe2\x80\xa6AeThe handshake failed.2BlFuture for the <code>fill_buf</code> method.0BlStream for the <code>flat_map</code> method.00BoImplementation of <code>Parser::flat_map</code>Dg<code>FlatMap</code> maps each element to a parallel iterator, then \xe2\x80\xa6BkFuture for the <code>flatten</code> method.BkStream for the <code>flatten</code> method.1010Dh<code>Flatten</code> turns each element to a parallel iterator, then \xe2\x80\xa6DmA <strong>type operator</strong> that gives the sum of all elements of an \xe2\x80\xa6DnA <strong>type operator</strong> that gives the product of all elements of \xe2\x80\xa6CjAlias for the associated type of <code>FoldAdd</code>: \xe2\x80\xa6BlFuture for the <code>for_each</code> method.00CaA for loop: <code>for pat in expr { ... }</code>.BkFuture for the <code>forward</code> method.00AeThe gb18030 encoding.CbThe type produced by <code>Container::get()</code>BmThe type returned by <code>Self::get()</code>C`The value set is the submitted value, or greaterDiA potential output from <code>Cmp</code>, this is the type equivalent \xe2\x80\xa6Ae<code>HTTP/0.9</code>0Ae<code>HTTP/1.0</code>0Ae<code>HTTP/1.1</code>0DfMarker type corresponding to the <code>X509_LOOKUP_hash_dir</code> \xe2\x80\xa6CjA hash map implemented with quadratic probing and SIMD \xe2\x80\xa60EdA hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.0AoThe <em>CheckHyphens</em> mode.Be226 IM Used [RFC3229, Section 10.4.1]0BeHolds the result of parsing functionsBhCharacters that can begin an identifier.DiThis is a <code>VarZeroVecFormat</code> that stores u16s in the index \xe2\x80\xa6DiThis is a <code>VarZeroVecFormat</code> that stores u32s in the index \xe2\x80\xa6DfEach pixel in the <code>Visual</code> stores an index into a color \xe2\x80\xa6BkFuture for the <code>inspect</code> method.BkStream for the <code>inspect</code> method.1010Dd<code>Inspect</code> is an iterator that calls a function with a \xe2\x80\xa6CiA measurement of a monotonically nondecreasing clock. \xe2\x80\xa6DaAn integer that can be written into an <code>itoa::Buffer</code>.DcThe <strong>marker trait</strong> for compile time signed integers.ClA trait to try to convert some type into a <code>Url</code>.CgAn IO error occured in the underlying reader or writer.CkAn IO error occurred while reading, writing, or seeking \xe2\x80\xa6CnAn IO error occured while reading, writing, or seeking the \xe2\x80\xa6CkA buffer type used with <code>Write::write_vectored</code>.EkProvides a <code>bitor()</code> method for <code>Ipv4Addr</code> and <code>Ipv6Addr</code>.AhAn IPv4 network address.AhAn IPv6 network address.BlA type that represents specification of IRI.F`A <strong>type operator</strong> that returns <code>True</code> if <code>Self == Rhs</code>, \xe2\x80\xa6EaA module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.CnA use declaration: <code>use std::collections::HashMap</code>.CgMutable iterator over all streams in the unordered set.CgMutable iterator over all futures in the unordered set.1010DdA mutable iterator over the entries of a <code>HashMap</code> in \xe2\x80\xa6DfA mutable iterator over the entries of a <code>HashTable</code> in \xe2\x80\xa6Bm<code>HeaderMap</code> mutable entry iteratorD`A mutable iterator over the entries of an <code>IndexMap</code>.BoA mutable iterator over the stack\xe2\x80\x99s contents.DiA parallel iterator over a mutable reference to the <code>Some</code> \xe2\x80\xa6CfParallel iterator over a mutable reference to a resultBoParallel iterator over mutable items in a sliceChParallel iterator over a mutable reference to a hash mapCjParallel iterator over a mutable reference to a B-Tree mapCkParallel iterator over a mutable reference to a linked listCcParallel iterator over a mutable reference to a \xe2\x80\xa69CfA mutable iterator over a serde_json::Map\xe2\x80\x99s entries.DbA mutable iterator over the values stored in the <code>Slab</code>DiAn iterator over mutably borrowed values of type <code>&amp;mut T</code>.BnFuture for the <code>join_all</code> function.00CaA collection of tasks spawned on a Tokio runtime.BhTypes which can be initialized from key.AbKey size in bytes.AoReturn <code>log10(2.0)</code>.AmReturn <code>log10(e)</code>.AoReturn <code>log2(10.0)</code>.EhA <code>Layer</code> implemented by a closure. See the docs for <code>layer_fn</code>\xe2\x80\xa60AfA length limited body.DjA redirection <code>Policy</code> that limits the number of successive \xe2\x80\xa6CkA boolean literal: <code>true</code> or <code>false</code>.BjA byte literal: <code>b&#39;f&#39;</code>.DaA nul-terminated C-string literal: <code>c&quot;foo&quot;</code>.BnA character literal: <code>&#39;a&#39;</code>.C`A simple \xe2\x80\x9cflat\xe2\x80\x9d map based on a sorted vectorGgA literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), \xe2\x80\xa6FeA literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), \xe2\x80\xa6AmAll data keys in this module.gmessagegmsgpackDj<code>MapInit</code> is an iterator that transforms the elements of an \xe2\x80\xa6C`Future for the <code>map_into</code> combinator.00Dj<code>MapWith</code> is an iterator that transforms the elements of an \xe2\x80\xa6CjA proxy matcher, usually built from environment variables.CfParallel iterator over substrings that match a patternCkSpecify the upper limit of the resource. Units are case \xe2\x80\xa6CfAlias for the associated type of <code>Max</code>: \xe2\x80\xa6CmAn iterator over all occurrences of two possible bytes in \xe2\x80\xa6ClAn iterator over all occurrences of three possible bytes \xe2\x80\xa6CfAlias for the associated type of <code>Min</code>: \xe2\x80\xa6o<code>-=</code>AoDummy trait for better genericsDeA <code>Monitor</code> provides a common interface to examine the \xe2\x80\xa6Ab<code>mut x</code>CdThe value set is the submitted value, or the nearestAiInvalid byte in new line.CnThe input unit(s) did not continue a matching string. Once \xe2\x80\xa6CmA configuration for filtering out requests that shouldn\xe2\x80\x99\xe2\x80\xa6ClThe input unit(s) matched a string but there is no value \xe2\x80\xa6DmA <strong>marker trait</strong> to designate that a type is not zero. All \xe2\x80\xa6CjAn empty syntax tree node that consumes no tokens when \xe2\x80\xa6CaAn interface for casting between machine scalars.gOPTIONS0BaContains a fully parsed OGG page.CeA thread-safe cell which can be written to only once.0CjAn iterator over all occurrences of a single byte in a \xe2\x80\xa600EeA <code>Future</code> consuming a <code>Service</code> and request, waiting until \xe2\x80\xa6B`Error type of <code>OsRng</code>ClHolds the parser execution modifiers: output Mode, error \xe2\x80\xa6AdI am an IDLE thread.AdI\xe2\x80\x99m a virtual CPU.AoReference to <code>PKey</code>.AbParser result typeBbType of encryption padding to use.DbUsed to integrate <code>str</code>\xe2\x80\x99s <code>parse()</code> methodAaA partial result.DjA path like <code>std::mem::replace</code> possibly containing generic \xe2\x80\xa6CnThe dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.CaA type ascription pattern: <code>foo: f64</code>.CaA pattern that matches any value: <code>_</code>.o<code>::</code>CfFuture for the <code>Peekable::peek_mut</code> method.00BoFuture for the <code>pending()</code> function.BoStream for the <code>pending()</code> function.BiRepresents that a value is not ready yet.2121n<code>%</code>CnA context object which can perform asymmetric cryptography \xe2\x80\xa6DfA trait for either <code>Owned</code> or <code>Shared</code> pointers.AnSND_SEQ_PORT_CAP_xxx constantsBeGeneric trait for primitive integers.C`Private Extension Type marked as <code>x</code>.CoA list of <code>Private Use Extensions</code> as defined in \xe2\x80\xa6ChA tag type indicating that a key has private components.CnParallel iterator over immutable non-overlapping chunks of \xe2\x80\xa6CnContains the address of the previous web page from which a \xe2\x80\xa60CjInforms the web browser that the current page or frame \xe2\x80\xa60CdCharacters used in the definition of Ideographic \xe2\x80\xa6EkAddress-of operation: <code>&amp;raw const place</code> or <code>&amp;raw mut place</code>.DiThe <code>RawType</code> is a primitive data type, or fixed-size byte \xe2\x80\xa6Aesnd_rawmidi_t wrapperChA wrapper around a byte buffer that is incrementally \xe2\x80\xa60BaReads the entries in a directory.ClThe type of reducer that is produced if this consumer is \xe2\x80\xa6DhThe reducer is the final step of a <code>Consumer</code> \xe2\x80\x93 after a \xe2\x80\xa6CjIterator adaptor for the <code>repeat_n()</code> function.AkRepresents an HTTP request.AaA parsed Request.DdA request which can be executed with <code>Client::execute()</code>.ChThe <code>Body</code> body of the <code>Response</code>.C`Trait for customizing DNS resolution in reqwest.CmResults type. This is the \xe2\x80\x98block\xe2\x80\x99 an RNG implementing \xe2\x80\xa6CkThe provided codeword have bits in the reverse order as \xe2\x80\xa6BmThe certificate is in the list and is revokedCcA type that <code>rmp</code> supports reading from.BgImplementation-level interface for RNGs0AbThe Tokio runtime.AgContinue the handshake.BdA non-recoverable IO error occurred.DnThe <code>UniformSampler</code> implementation supporting type <code>X</code>.BfTrait for a packet of multiple samplesBaParser implementation for satisfylUse seconds.CnWrapper for snd_mixer_selem_id_t No allocation (uses fixed \xe2\x80\xa6BlFuture for the <code>send_all</code> method.00E`An asynchronous function from a <code>Request</code> to a <code>Response</code>.AcThe wrapped service0101CdA thread-safe cell that can be written to only once.DdDefines a <code>GenericSequence</code> which can be shortened by \xe2\x80\xa6Dm<code>GenericSequence</code> that has one less element than <code>Self</code>CfAlias for the associated type of <code>Shr</code>: \xe2\x80\xa6DhAn extension trait for <code>Sink</code>s that provides a variety of \xe2\x80\xa600Ed<code>SkipAny</code> is an iterator that skips over <code>n</code> elements from \xe2\x80\xa6o<code>/=</code>DfA reference to a <code>Socket</code> that can be used to configure \xe2\x80\xa6AhTunnel Proxy via SOCKSv4AhTunnel Proxy via SOCKSv5BaAn escaped solidus <code>/</code>EfWhether a <code>Punct</code> is followed immediately by another <code>Punct</code> \xe2\x80\xa6DkA trait that can provide the <code>Span</code> of the complete contents \xe2\x80\xa6CkA simple spatial audio source. The underlying source is \xe2\x80\xa6AoTypes that can be split in two.CoOptions controlling the behavior of an <code>SslContext</code>.BcA stealer handle of a worker queue.CaA mock generator yielding very predictable outputCaJSON input source that reads from a UTF-8 string.BjAt least one task was successfully stolen.BaParser implementation for successB`Version 1.0 of the TLS protocol.B`Version 1.1 of the TLS protocol.B`Version 1.2 of the TLS protocol.B`Version 1.3 of the TLS protocol.CmAllows the sender to include additional fields at the end \xe2\x80\xa60Eg<code>TakeAny</code> is an iterator that iterates over <code>n</code> elements from \xe2\x80\xa6CiThe data could not be sent on the channel because the \xe2\x80\xa6DdFuture returned by <code>timeout</code> and <code>timeout_at</code>.AnApplies a timeout to requests.CnA vector that starts inline, but can automatically move to \xe2\x80\xa6CnHyper extension carrying extra TLS layer information. Made \xe2\x80\xa6BiHelper trait to convert numbers to usize.CnA wrapper that implements Tokio\xe2\x80\x99s IO traits for an inner \xe2\x80\xa6CcThe sample has more bits than the destination type.BlFuture for the <code>try_fold</code> method.00Dg<code>TryFold</code> is an iterator that applies a function over an \xe2\x80\xa6BnFuture for the <code>try_join</code> function.00CaA light-weight lock guarded by an atomic boolean.BlFuture for the <code>try_next</code> method.00CmAn iterator over all occurrences of two possible bytes in \xe2\x80\xa600DaA raw pointer type: <code>*const T</code> or <code>*mut T</code>.BoProtocol corresponding to <code>UDPLITE</code>.BjThe unknown language identifier \xe2\x80\x9cund\xe2\x80\x9d.AmThe unknown locale \xe2\x80\x9cund\xe2\x80\x9d.AoThe unknown language \xe2\x80\x9cund\xe2\x80\x9d.CeUsed as part of the exchange to upgrade the protocol.0BeA type with no alignment requirement.C`Unicode Extension Type marked as <code>u</code>.CeUnicode Extensions provide information about user \xe2\x80\xa6BkSample values uniformly between two bounds.0ClIn the case that the platform provides no way of getting \xe2\x80\xa6BlNeeds more data, but we do not know how muchnUnknown error.CmUnnamed fields of a tuple struct or tuple variant such as \xe2\x80\xa6BjAn unnamed field like <code>self.0</code>.Ad<code>unsized</code>BlA type that represents specification of URI.CiA glob import in a <code>use</code> item: <code>*</code>.DhAn identifier imported by a <code>use</code> item: <code>HashMap</code>.DkA path prefix of imports in a <code>use</code> item: <code>std::...</code>.EgA suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> \xe2\x80\xa6CiUsed to restrict hw parameters. In case the submitted \xe2\x80\xa6CoDeprecated old name of <code>template::context::VarName</code>.nVariable name.GoA variant subtag (examples: <code>&quot;macos&quot;</code>, <code>&quot;posix&quot;</code>, <code>&quot;1996&quot;</code> etc.)DiThe <code>Visitor</code> that will be used to deserialize the content \xe2\x80\xa60A`An enum variant.CkVec4 functions which may not be implemented yet for all \xe2\x80\xa6BfRepresents a version of the HTTP spec.AmInvalid byte in HTTP version.1AgA TLS protocol version.Ad<code>virtual</code>AaVariable visitor.ChThis trait represents a visitor that walks through a \xe2\x80\xa60CkGeneral HTTP header contains information about possible \xe2\x80\xa60BgSpecifies properties of the audio data.CmParallel iterator over immutable overlapping windows of a \xe2\x80\xa6CaAn <code>X509</code> certificate revocation list.AoReference to <code>X509</code>.BiAn <code>X509</code> certificate request.CbA zero-copy map datastructure, built on sorted \xe2\x80\xa6CgA zero-copy, byte-aligned vector for fixed-width types.BnTrait for securely erasing values from memory.BgThe positive difference of two numbers.000CdAccept a new incoming connection from this listener.BeAcquires a permit from the semaphore.DkAdds (or \xe2\x80\x9coffsets\xe2\x80\x9d) the amplitude of the <code>Sample</code> by the \xe2\x80\xa600CjSpecifies a directory from which certificates and CRLs \xe2\x80\xa6BgAdd a <code>Tag</code> to the metadata.BfAdvance the internal cursor of the BufBiAdvance the internal cursor of the slice.0CoAdvance the <code>filled</code> cursor by <code>n</code> bytes.2CeAdvances the size of the filled region of the buffer.BiPerforms AES IGE encryption or decryptionBgAmplifies the sound by the given value.Efaccept a <code>str</code>, but not a <code>&amp;[u8]</code>, unlike many other nom \xe2\x80\xa6CmMatches one byte as a character. Note that the input type \xe2\x80\xa6BcMatches one element as a character.DhIf the <code>Value</code> is a Boolean, returns the associated bool. \xe2\x80\xa6Afmakes a char from selfDeReturns the value of this punctuation character as <code>char</code>.DeIf the <code>Number</code> is an integer, represent it as i128 if \xe2\x80\xa6DhIf the <code>Value</code> is a Null, returns (). Returns None otherwise.BfNumber of seconds since the Unix epochDeIf the <code>Number</code> is an integer, represent it as u128 if \xe2\x80\xa6EhReturns this address as Unix <code>SocketAddr</code> if it is an <code>AF_UNIX</code>\xe2\x80\xa6BlConverts the ASN.1 underlying format to UTF8Bo<code>write_to</code> will use at most n bytes.CmThis module contains generic backoff utilities to be used \xe2\x80\xa6C`Recognizes a big endian signed 16 bytes integer.00CbRecognizes a big endian unsigned 16 bytes integer.00Do<code>write_to</code> will use between <code>n</code> and <code>m</code> bytes.CjThe name which this <code>BindingInfo</code> will bind to.ChCreates a builder that can configure a thread before \xe2\x80\xa6DhCreates a new builder-style object to manufacture a <code>Request</code>CgCreates a new builder-style object to manufacture a \xe2\x80\xa6DeCreates a new builder-style object to manufacture a <code>Uri</code>.ChCreate a builder to configure a new <code>Client</code>.BgStart a builder to configure a matcher.AfReturns a new builder.0CfReturns a new builder for a <code>TlsConnector</code>.CeReturns a new builder for a <code>TlsAcceptor</code>.CiCreates a new builder for a protected pkcs12 certificate.BjCreates a new builder for TLS connections.ClCreates a new builder object for an <code>SslContext</code>.55BcA builder for <code>X509Req</code>.DhCreates a <code>ClientBuilder</code> to configure a <code>Client</code>.CeReturns a builder for creating a new decoder with \xe2\x80\xa6CjBuilder pattern for configuring and constructing decoders.87CmCreates a new length delimited codec builder with default \xe2\x80\xa6BlBuilder types to compose layers and servicesCmThe compiler flags set for the compilation process in the \xe2\x80\xa6CcThe instant that data was captured from the device.CkWaits for a change notification, then marks the current \xe2\x80\xa6Ac&lt; channel number000ClCreates a bounded mpsc channel for communicating between \xe2\x80\xa6CmCreates a new one-shot channel for sending a single value \xe2\x80\xa6101ClCreate a bounded, multi-producer, multi-consumer channel \xe2\x80\xa6ClCreates a new one-shot channel for sending single values \xe2\x80\xa6CmCreates a new watch channel, returning the \xe2\x80\x9csend\xe2\x80\x9d and \xe2\x80\xa6CnChecked versions of the casting functions exposed in crate \xe2\x80\xa6CkIf the sample format does not use the full range of the \xe2\x80\xa6CgSet <code>SOCK_CLOEXEC</code> on the <code>Type</code>.DhCompares the contents of a <code>Writeable</code> to the given bytes \xe2\x80\xa6CmTransforms a stream into a collection, returning a future \xe2\x80\xa6000DjTurn this body into <code>Collected</code> body which will collect all \xe2\x80\xa6CjCreates a fresh collection containing all the elements \xe2\x80\xa6CaCombines two values generated by previous parsersCdAdd another error message to self such that when \xe2\x80\xa6m&lt; Comments0CmReduce the capacity as much as possible, changing the key \xe2\x80\xa6CkCompare self to <code>key</code> and return their ordering.BkCompares self to another value for equalityAaCompare two timesDfThe <code>complex</code> module implements a 32-bit floating point \xe2\x80\xa6CjPerforms canonical composition (including Hangul) on a \xe2\x80\xa60Ah&lt; connect informationDhCreates a new <code>Builder</code> initialized with a CONNECT method \xe2\x80\xa6BkConnectors used by the <code>Client</code>.ClCreate a new TCP stream and issue a non-blocking connect \xe2\x80\xa6CkConnects the UDP socket setting the default destination \xe2\x80\xa6BmConnects the socket to the specified address.CbConnects to the socket named by <code>path</code>.AjInitiates a TLS handshake.C`Initiates a client-side TLS session on a stream.BfInitiates a client-side TLS handshake.AmSee <code>Ssl::connect</code>21CiInitiate a connection on this socket to the specified \xe2\x80\xa6CmEstablishes a TCP connection with a peer at the specified \xe2\x80\xa6BhOpens a TCP connection to a remote host.98CnEstablishes a Unix connection with a peer at the specified \xe2\x80\xa68CnConnects the provided stream with this connector, assuming \xe2\x80\xa68CcConsume the base64 encoded data in <code>buf</code>DiTells this buffer that <code>amt</code> bytes have been consumed from \xe2\x80\xa6000CbConsume next item and return new sequential state.111AkTemplate expansion context.CnCreate a new error from an input position, a static string \xe2\x80\xa6DdReturns a shared reference to the inner raw <code>SslContext</code>.0Am&lt; MIDI control informationBaConversion between URI/IRI types.AoTransform to another error typeCkAutomatically converts between errors if the underlying \xe2\x80\xa6CnConverts the contents of an AudioBuffer into an equivalent \xe2\x80\xa6CmThe value in the atomic pointer at the time of the failed \xe2\x80\xa60CmGets an immutable reference to the current, and therefore \xe2\x80\xa6EcReturns a <code>Handle</code> view over the currently running <code>Runtime</code>.DjReturns a handle to the span considered by the <code>Subscriber</code> \xe2\x80\xa6EgReturns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> \xe2\x80\xa60CcPrints a message and the input if the parser fails.CfDecodes audio samples from various audio file formats.BnReturns a reference to the underlying decoder.DkGiven the sender\xe2\x80\x99s private key, <code>pkey</code> and the recipient\xe2\x80\x99\xe2\x80\xa6AoPerforms public key decryption.BmDecrypts data using the provided private key.BdDecrypts data using the private key.ChDecrypts data in one go, and returns the decrypted data.AeReturn an empty arrayBhReturn an empty <code>ArrayString</code>BgDelegates to GeneralPurposeConfig::new.EjCreates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> \xe2\x80\xa6EmCreates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for \xe2\x80\xa6BbCreate an empty <code>Full</code>.Ck<code>const</code> version of <code>Default::default</code>DcConstructs a new <code>LocalePreferences</code> struct with the \xe2\x80\xa61BeReturn an empty <code>IndexMap</code>BeReturn an empty <code>IndexSet</code>lReturns zeroDkCreates a new lazy value using <code>Default</code> as the initializing \xe2\x80\xa60CmRetrieve handle to the default OpenSSL configuration file \xe2\x80\xa6DfThe <code>default</code> module provides convenience functions and \xe2\x80\xa6CmCreate a default-initialized instance of ourself, similar \xe2\x80\xa6BoReturns <code>MissedTickBehavior::Burst</code>.DlReturns the default <code>Limited</code> with a limit of <code>20</code> \xe2\x80\xa6BfReturns the current default dispatcher0CnStore a \xe2\x80\x9cdeposit\xe2\x80\x9d in the budget, which will be used to \xe2\x80\xa6DhAn iterator yielding all <code>Device</code>s currently available to \xe2\x80\xa6Bh\\brief Disable \\param scope scope handle0DkEnables base64\xe2\x80\x99d output anywhere you might use a <code>Display</code> \xe2\x80\xa6EhWraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can \xe2\x80\xa60BiSimultaneous integer division and modulusChSimultaneous truncated integer division and modulus. \xe2\x80\xa6FhPlaces the result of <code>a / b</code> in <code>self</code> and <code>a % b</code> in <code>rem</code>.CdDeprecated, use <code>is_multiple_of</code> instead.00EhReturns the contents of this <code>GeneralName</code> if it is a <code>dNSName</code>\xe2\x80\xa6D`Utilities for using trait objects with <code>DataPayload</code>.CmReturns the amount of time elapsed since this instant was \xe2\x80\xa6AoExtract the overflowing elementCkDetermines if a log message with the specified metadata \xe2\x80\xa6CnReturns true if a span or event with the specified metadata\xe2\x80\xa6CkReturns true if a span with the specified metadata would beCjChecks whether a span or event is enabled based on the \xe2\x80\xa62212BnReturns a reference to the underlying encoder.AcMessage encryption.")